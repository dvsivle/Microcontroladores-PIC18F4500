

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue May 28 18:35:59 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	text8,global,reloc=2,class=CODE,delta=1
    18                           	psect	text9,global,reloc=2,class=CODE,delta=1
    19                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    20                           	psect	text11,global,reloc=2,class=CODE,delta=1
    21                           	psect	text12,global,reloc=2,class=CODE,delta=1
    22                           	psect	text13,global,reloc=2,class=CODE,delta=1
    23                           	psect	text14,global,reloc=2,class=CODE,delta=1
    24                           	psect	text15,global,reloc=2,class=CODE,delta=1
    25                           	psect	text16,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    28                           	psect	text18,global,reloc=2,class=CODE,delta=1
    29                           	psect	text19,global,reloc=2,class=CODE,delta=1
    30                           	psect	text20,global,reloc=2,class=CODE,delta=1
    31                           	psect	text21,global,reloc=2,class=CODE,delta=1
    32                           	psect	text22,global,reloc=2,class=CODE,delta=1
    33                           	psect	text23,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    36                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    37  0000                     
    38                           ; Version 2.05
    39                           ; Generated 20/12/2018 GMT
    40                           ; 
    41                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     _PORTD	set	3971
    73  0000                     _LATD	set	3980
    74  0000                     _LATDbits	set	3980
    75  0000                     _LATEbits	set	3981
    76  0000                     _INTCON3bits	set	4080
    77  0000                     _INTCONbits	set	4082
    78  0000                     _RCONbits	set	4048
    79  0000                     _TRISDbits	set	3989
    80  0000                     _TRISEbits	set	3990
    81  0000                     _TRISD	set	3989
    82                           
    83                           	psect	smallconst
    84  000800                     __psmallconst:
    85                           	opt callstack 0
    86  000800  00                 	db	0
    87  000801                     STR_1:
    88  000801  4D                 	db	77	;'M'
    89  000802  69                 	db	105	;'i'
    90  000803  63                 	db	99	;'c'
    91  000804  72                 	db	114	;'r'
    92  000805  65                 	db	101	;'e'
    93  000806  69                 	db	105	;'i'
    94  000807  74                 	db	116	;'t'
    95  000808  6F                 	db	111	;'o'
    96  000809  72                 	db	114	;'r'
    97  00080A  73                 	db	115	;'s'
    98  00080B  20                 	db	32
    99  00080C  32                 	db	50	;'2'
   100  00080D  30                 	db	48	;'0'
   101  00080E  31                 	db	49	;'1'
   102  00080F  39                 	db	57	;'9'
   103  000810  31                 	db	49	;'1'
   104  000811  00                 	db	0
   105  000812                     STR_2:
   106  000812  4D                 	db	77	;'M'
   107  000813  61                 	db	97	;'a'
   108  000814  63                 	db	99	;'c'
   109  000815  68                 	db	104	;'h'
   110  000816  75                 	db	117	;'u'
   111  000817  63                 	db	99	;'c'
   112  000818  61                 	db	97	;'a'
   113  000819  72                 	db	114	;'r'
   114  00081A  6F                 	db	111	;'o'
   115  00081B  6E                 	db	110	;'n'
   116  00081C  20                 	db	32
   117  00081D  49                 	db	73	;'I'
   118  00081E  4E                 	db	78	;'N'
   119  00081F  54                 	db	84	;'T'
   120  000820  30                 	db	48	;'0'
   121  000821  00                 	db	0
   122  000822                     STR_3:
   123  000822  4D                 	db	77	;'M'
   124  000823  61                 	db	97	;'a'
   125  000824  63                 	db	99	;'c'
   126  000825  68                 	db	104	;'h'
   127  000826  75                 	db	117	;'u'
   128  000827  63                 	db	99	;'c'
   129  000828  61                 	db	97	;'a'
   130  000829  72                 	db	114	;'r'
   131  00082A  6F                 	db	111	;'o'
   132  00082B  6E                 	db	110	;'n'
   133  00082C  20                 	db	32
   134  00082D  49                 	db	73	;'I'
   135  00082E  4E                 	db	78	;'N'
   136  00082F  54                 	db	84	;'T'
   137  000830  31                 	db	49	;'1'
   138  000831  00                 	db	0
   139                           
   140                           ; #config settings
   141  000832  00                 	db	0	; dummy byte at the end
   142  0000                     
   143                           	psect	cinit
   144  000D22                     __pcinit:
   145                           	opt callstack 0
   146  000D22                     start_initialization:
   147                           	opt callstack 0
   148  000D22                     __initialization:
   149                           	opt callstack 0
   150                           
   151                           ; Clear objects allocated to COMRAM (1 bytes)
   152  000D22  6A29               	clrf	__pbssCOMRAM& (0+255),c
   153  000D24                     end_of_initialization:
   154                           	opt callstack 0
   155  000D24                     __end_of__initialization:
   156                           	opt callstack 0
   157  000D24  902A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   158  000D26  922A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   159  000D28  0E00               	movlw	low (__Lsmallconst shr (0+16))
   160  000D2A  6EF8               	movwf	tblptru,c
   161  000D2C  0E08               	movlw	high __Lsmallconst
   162  000D2E  6EF7               	movwf	tblptrh,c
   163  000D30  0100               	movlb	0
   164  000D32  EF1A  F004         	goto	_main	;jump to C main() function
   165                           
   166                           	psect	bssCOMRAM
   167  000029                     __pbssCOMRAM:
   168                           	opt callstack 0
   169  000029                     _estado:
   170                           	opt callstack 0
   171  000029                     	ds	1
   172                           
   173                           	psect	cstackCOMRAM
   174  000001                     __pcstackCOMRAM:
   175                           	opt callstack 0
   176  000001                     i2ENVIA_NIBBLE@dato:
   177                           	opt callstack 0
   178  000001                     i2LEER_LCD@aux:
   179                           	opt callstack 0
   180                           
   181                           ; 1 bytes @ 0x0
   182  000001                     	ds	1
   183  000002                     i2ENVIA_CHAR@dato:
   184                           	opt callstack 0
   185  000002                     i2ENVIA_LCD_CMD@dato:
   186                           	opt callstack 0
   187                           
   188                           ; 1 bytes @ 0x1
   189  000002                     	ds	1
   190  000003                     i2ENVIA_CHAR@aux:
   191                           	opt callstack 0
   192  000003                     i2ENVIA_LCD_CMD@aux:
   193                           	opt callstack 0
   194                           
   195                           ; 1 bytes @ 0x2
   196  000003                     	ds	1
   197  000004                     i2POS_CURSOR@columna:
   198                           	opt callstack 0
   199  000004                     i2ESCRIBE_MENSAJE@cadena:
   200                           	opt callstack 0
   201                           
   202                           ; 2 bytes @ 0x3
   203  000004                     	ds	1
   204  000005                     i2POS_CURSOR@fila:
   205                           	opt callstack 0
   206                           
   207                           ; 1 bytes @ 0x4
   208  000005                     	ds	1
   209  000006                     i2ESCRIBE_MENSAJE@tam:
   210                           	opt callstack 0
   211                           
   212                           ; 1 bytes @ 0x5
   213  000006                     	ds	1
   214  000007                     ??i2_ESCRIBE_MENSAJE:
   215                           
   216                           ; 1 bytes @ 0x6
   217  000007                     	ds	2
   218  000009                     i2ESCRIBE_MENSAJE@i:
   219                           	opt callstack 0
   220                           
   221                           ; 1 bytes @ 0x8
   222  000009                     	ds	1
   223  00000A                     ??_Int0:
   224                           
   225                           ; 1 bytes @ 0x9
   226  00000A                     	ds	4
   227  00000E                     i1ENVIA_NIBBLE@dato:
   228                           	opt callstack 0
   229  00000E                     i1LEER_LCD@aux:
   230                           	opt callstack 0
   231                           
   232                           ; 1 bytes @ 0xD
   233  00000E                     	ds	1
   234  00000F                     i1ENVIA_CHAR@dato:
   235                           	opt callstack 0
   236  00000F                     i1ENVIA_LCD_CMD@dato:
   237                           	opt callstack 0
   238                           
   239                           ; 1 bytes @ 0xE
   240  00000F                     	ds	1
   241  000010                     i1ENVIA_CHAR@aux:
   242                           	opt callstack 0
   243  000010                     i1ENVIA_LCD_CMD@aux:
   244                           	opt callstack 0
   245                           
   246                           ; 1 bytes @ 0xF
   247  000010                     	ds	1
   248  000011                     POS_CURSOR@columna:
   249                           	opt callstack 0
   250  000011                     i1ESCRIBE_MENSAJE@cadena:
   251                           	opt callstack 0
   252                           
   253                           ; 2 bytes @ 0x10
   254  000011                     	ds	1
   255  000012                     POS_CURSOR@fila:
   256                           	opt callstack 0
   257                           
   258                           ; 1 bytes @ 0x11
   259  000012                     	ds	1
   260  000013                     i1ESCRIBE_MENSAJE@tam:
   261                           	opt callstack 0
   262                           
   263                           ; 1 bytes @ 0x12
   264  000013                     	ds	1
   265  000014                     ??i1_ESCRIBE_MENSAJE:
   266                           
   267                           ; 1 bytes @ 0x13
   268  000014                     	ds	2
   269  000016                     i1ESCRIBE_MENSAJE@i:
   270                           	opt callstack 0
   271                           
   272                           ; 1 bytes @ 0x15
   273  000016                     	ds	1
   274  000017                     ??_Int1:
   275                           
   276                           ; 1 bytes @ 0x16
   277  000017                     	ds	7
   278  00001E                     ENVIA_NIBBLE@dato:
   279                           	opt callstack 0
   280  00001E                     LEER_LCD@aux:
   281                           	opt callstack 0
   282                           
   283                           ; 1 bytes @ 0x1D
   284  00001E                     	ds	1
   285  00001F                     ENVIA_CHAR@dato:
   286                           	opt callstack 0
   287  00001F                     ENVIA_LCD_CMD@dato:
   288                           	opt callstack 0
   289                           
   290                           ; 1 bytes @ 0x1E
   291  00001F                     	ds	1
   292  000020                     ENVIA_CHAR@aux:
   293                           	opt callstack 0
   294  000020                     ENVIA_LCD_CMD@aux:
   295                           	opt callstack 0
   296                           
   297                           ; 1 bytes @ 0x1F
   298  000020                     	ds	1
   299  000021                     ??_LCD_CONFIG:
   300  000021                     CURSOR_ONOFF@estado:
   301                           	opt callstack 0
   302  000021                     ESCRIBE_MENSAJE@cadena:
   303                           	opt callstack 0
   304                           
   305                           ; 2 bytes @ 0x20
   306  000021                     	ds	2
   307  000023                     ESCRIBE_MENSAJE@tam:
   308                           	opt callstack 0
   309                           
   310                           ; 1 bytes @ 0x22
   311  000023                     	ds	1
   312  000024                     ??_ESCRIBE_MENSAJE:
   313                           
   314                           ; 1 bytes @ 0x23
   315  000024                     	ds	2
   316  000026                     ESCRIBE_MENSAJE@i:
   317                           	opt callstack 0
   318                           
   319                           ; 1 bytes @ 0x25
   320  000026                     	ds	1
   321  000027                     ??_main:
   322                           
   323                           ; 1 bytes @ 0x26
   324  000027                     	ds	2
   325                           
   326 ;;
   327 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   328 ;;
   329 ;; *************** function _main *****************
   330 ;; Defined at:
   331 ;;		line 25 in file "tonitomon.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;		None
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   345 ;;      Params:         0       0       0       0       0       0       0       0       0
   346 ;;      Locals:         0       0       0       0       0       0       0       0       0
   347 ;;      Temps:          2       0       0       0       0       0       0       0       0
   348 ;;      Totals:         2       0       0       0       0       0       0       0       0
   349 ;;Total ram usage:        2 bytes
   350 ;; Hardware stack levels required when called:   11
   351 ;; This function calls:
   352 ;;		_BORRAR_LCD
   353 ;;		_CURSOR_HOME
   354 ;;		_CURSOR_ONOFF
   355 ;;		_ESCRIBE_MENSAJE
   356 ;;		_LCD_CONFIG
   357 ;; This function is called by:
   358 ;;		Startup code after reset
   359 ;; This function uses a non-reentrant model
   360 ;;
   361                           
   362                           	psect	text0
   363  000834                     __ptext0:
   364                           	opt callstack 0
   365  000834                     _main:
   366                           	opt callstack 20
   367                           
   368                           ;tonitomon.c: 27:     TRISD = 0;
   369                           
   370                           ;incstack = 0
   371  000834  0E00               	movlw	0
   372  000836  6E95               	movwf	3989,c	;volatile
   373                           
   374                           ;tonitomon.c: 28:     TRISEbits.RE0 = 0;
   375  000838  9096               	bcf	3990,0,c	;volatile
   376                           
   377                           ;tonitomon.c: 29:     _delay((unsigned long)((500)*(48000000UL/4000.0)));
   378  00083A  0E1F               	movlw	31
   379  00083C  6E28               	movwf	(??_main+1)& (0+255),c
   380  00083E  0E71               	movlw	113
   381  000840  6E27               	movwf	??_main& (0+255),c
   382  000842  0E1E               	movlw	30
   383  000844                     u337:
   384  000844  2EE8               	decfsz	wreg,f,c
   385  000846  D7FE               	bra	u337
   386  000848  2E27               	decfsz	??_main& (0+255),f,c
   387  00084A  D7FC               	bra	u337
   388  00084C  2E28               	decfsz	(??_main+1)& (0+255),f,c
   389  00084E  D7FA               	bra	u337
   390  000850  D000               	nop2	
   391                           
   392                           ;tonitomon.c: 30:     LCD_CONFIG();
   393  000852  ECF6  F004         	call	_LCD_CONFIG	;wreg free
   394                           
   395                           ;tonitomon.c: 31:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   396  000856  0EEA               	movlw	234
   397  000858  6E27               	movwf	??_main& (0+255),c
   398  00085A  0EC3               	movlw	195
   399  00085C                     u347:
   400  00085C  2EE8               	decfsz	wreg,f,c
   401  00085E  D7FE               	bra	u347
   402  000860  2E27               	decfsz	??_main& (0+255),f,c
   403  000862  D7FC               	bra	u347
   404  000864  F000               	nop	
   405                           
   406                           ;tonitomon.c: 32:     CURSOR_ONOFF(1);
   407  000866  0E01               	movlw	1
   408  000868  EC59  F006         	call	_CURSOR_ONOFF
   409                           
   410                           ;tonitomon.c: 33:     BORRAR_LCD();
   411  00086C  EC9F  F006         	call	_BORRAR_LCD	;wreg free
   412                           
   413                           ;tonitomon.c: 34:     TRISDbits.RD0 = 0;
   414  000870  9095               	bcf	3989,0,c	;volatile
   415                           
   416                           ;tonitomon.c: 35:     RCONbits.IPEN = 1;
   417  000872  8ED0               	bsf	4048,7,c	;volatile
   418                           
   419                           ;tonitomon.c: 36:     INTCONbits.GIEH = 1;
   420  000874  8EF2               	bsf	4082,7,c	;volatile
   421                           
   422                           ;tonitomon.c: 37:     INTCONbits.GIEL = 1;
   423  000876  8CF2               	bsf	4082,6,c	;volatile
   424                           
   425                           ;tonitomon.c: 38:     INTCONbits.INT0IE = 1;
   426  000878  88F2               	bsf	4082,4,c	;volatile
   427                           
   428                           ;tonitomon.c: 39:     INTCONbits.INT0IF = 0;
   429  00087A  92F2               	bcf	4082,1,c	;volatile
   430                           
   431                           ;tonitomon.c: 40:     INTCON3bits.INT1E = 1;
   432  00087C  86F0               	bsf	4080,3,c	;volatile
   433                           
   434                           ;tonitomon.c: 41:     INTCON3bits.INT1IP = 0;
   435  00087E  9CF0               	bcf	4080,6,c	;volatile
   436                           
   437                           ;tonitomon.c: 42:     INTCON3bits.INT1IF = 0;
   438  000880  90F0               	bcf	4080,0,c	;volatile
   439                           
   440                           ;tonitomon.c: 43:     CURSOR_HOME();
   441  000882  EC9B  F006         	call	_CURSOR_HOME	;wreg free
   442                           
   443                           ;tonitomon.c: 44:     ESCRIBE_MENSAJE("Micreitors 20191",16);
   444  000886  0E01               	movlw	low STR_1
   445  000888  6E21               	movwf	ESCRIBE_MENSAJE@cadena,c
   446  00088A  0E08               	movlw	high STR_1
   447  00088C  6E22               	movwf	ESCRIBE_MENSAJE@cadena+1,c
   448  00088E  0E10               	movlw	16
   449  000890  6E23               	movwf	ESCRIBE_MENSAJE@tam,c
   450  000892  ECEA  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   451  000896                     l1492:
   452                           
   453                           ;tonitomon.c: 47:         if (estado == 1){
   454  000896  0429               	decf	_estado,w,c
   455  000898  A4D8               	btfss	status,2,c
   456  00089A  D013               	goto	l36
   457                           
   458                           ;tonitomon.c: 48:             LATEbits.LE0 = 1;
   459  00089C  808D               	bsf	3981,0,c	;volatile
   460                           
   461                           ;tonitomon.c: 49:             _delay((unsigned long)((10)*(48000000UL/4000.0)));
   462  00089E  0E9C               	movlw	156
   463  0008A0  6E27               	movwf	??_main& (0+255),c
   464  0008A2  0ED7               	movlw	215
   465  0008A4                     u357:
   466  0008A4  2EE8               	decfsz	wreg,f,c
   467  0008A6  D7FE               	bra	u357
   468  0008A8  2E27               	decfsz	??_main& (0+255),f,c
   469  0008AA  D7FC               	bra	u357
   470  0008AC  F000               	nop	
   471                           
   472                           ;tonitomon.c: 50:             LATEbits.LE0 = 0;
   473  0008AE  908D               	bcf	3981,0,c	;volatile
   474                           
   475                           ;tonitomon.c: 51:             _delay((unsigned long)((10)*(48000000UL/4000.0)));
   476  0008B0  0E9C               	movlw	156
   477  0008B2  6E27               	movwf	??_main& (0+255),c
   478  0008B4  0ED7               	movlw	215
   479  0008B6                     u367:
   480  0008B6  2EE8               	decfsz	wreg,f,c
   481  0008B8  D7FE               	bra	u367
   482  0008BA  2E27               	decfsz	??_main& (0+255),f,c
   483  0008BC  D7FC               	bra	u367
   484  0008BE  F000               	nop	
   485                           
   486                           ;tonitomon.c: 52:         }
   487  0008C0  D7EA               	goto	l1492
   488  0008C2                     l36:
   489                           
   490                           ;tonitomon.c: 54:             LATEbits.LE0 = 0;
   491  0008C2  908D               	bcf	3981,0,c	;volatile
   492  0008C4  D7E8               	goto	l1492
   493  0008C6                     __end_of_main:
   494                           	opt callstack 0
   495                           
   496 ;; *************** function _LCD_CONFIG *****************
   497 ;; Defined at:
   498 ;;		line 72 in file "LCD.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;		None
   503 ;; Return value:  Size  Location     Type
   504 ;;                  1    wreg      void 
   505 ;; Registers used:
   506 ;;		wreg, status,2, status,0, cstack
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   512 ;;      Params:         0       0       0       0       0       0       0       0       0
   513 ;;      Locals:         0       0       0       0       0       0       0       0       0
   514 ;;      Temps:          1       0       0       0       0       0       0       0       0
   515 ;;      Totals:         1       0       0       0       0       0       0       0       0
   516 ;;Total ram usage:        1 bytes
   517 ;; Hardware stack levels used:    1
   518 ;; Hardware stack levels required when called:   10
   519 ;; This function calls:
   520 ;;		_ENVIA_LCD_CMD
   521 ;;		_ENVIA_NIBBLE
   522 ;; This function is called by:
   523 ;;		_main
   524 ;; This function uses a non-reentrant model
   525 ;;
   526                           
   527                           	psect	text1
   528  0009EC                     __ptext1:
   529                           	opt callstack 0
   530  0009EC                     _LCD_CONFIG:
   531                           	opt callstack 20
   532                           
   533                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   534                           
   535                           ;incstack = 0
   536  0009EC  908C               	bcf	3980,0,c	;volatile
   537                           
   538                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   539  0009EE  928C               	bcf	3980,1,c	;volatile
   540                           
   541                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   542  0009F0  0E30               	movlw	48
   543  0009F2  EC67  F006         	call	_ENVIA_NIBBLE
   544                           
   545                           ;LCD.c: 77:         _delay(24000);
   546  0009F6  0E20               	movlw	32
   547  0009F8  6E21               	movwf	??_LCD_CONFIG& (0+255),c
   548  0009FA  0E2A               	movlw	42
   549  0009FC                     u377:
   550  0009FC  2EE8               	decfsz	wreg,f,c
   551  0009FE  D7FE               	bra	u377
   552  000A00  2E21               	decfsz	??_LCD_CONFIG& (0+255),f,c
   553  000A02  D7FC               	bra	u377
   554                           
   555                           ;LCD.c: 78:         _delay(24000);
   556  000A04  0E20               	movlw	32
   557  000A06  6E21               	movwf	??_LCD_CONFIG& (0+255),c
   558  000A08  0E2A               	movlw	42
   559  000A0A                     u387:
   560  000A0A  2EE8               	decfsz	wreg,f,c
   561  000A0C  D7FE               	bra	u387
   562  000A0E  2E21               	decfsz	??_LCD_CONFIG& (0+255),f,c
   563  000A10  D7FC               	bra	u387
   564                           
   565                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   566  000A12  0E30               	movlw	48
   567  000A14  EC67  F006         	call	_ENVIA_NIBBLE
   568                           
   569                           ;LCD.c: 83:  _delay(1200);
   570  000A18  0EF0               	movlw	240
   571  000A1A                     u397:
   572  000A1A  D000               	nop2	
   573  000A1C  2EE8               	decfsz	wreg,f,c
   574  000A1E  D7FD               	bra	u397
   575                           
   576                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   577  000A20  0E30               	movlw	48
   578  000A22  EC67  F006         	call	_ENVIA_NIBBLE
   579                           
   580                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   581  000A26  0E20               	movlw	32
   582  000A28  EC67  F006         	call	_ENVIA_NIBBLE
   583                           
   584                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   585  000A2C  0E01               	movlw	1
   586  000A2E  EC68  F005         	call	_ENVIA_LCD_CMD
   587                           
   588                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   589  000A32  0E28               	movlw	40
   590  000A34  EC68  F005         	call	_ENVIA_LCD_CMD
   591                           
   592                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   593  000A38  0E0F               	movlw	15
   594  000A3A  EC68  F005         	call	_ENVIA_LCD_CMD
   595                           
   596                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   597  000A3E  0E06               	movlw	6
   598  000A40  EC68  F005         	call	_ENVIA_LCD_CMD
   599                           
   600                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   601  000A44  0E01               	movlw	1
   602  000A46  EC68  F005         	call	_ENVIA_LCD_CMD
   603  000A4A  0012               	return		;funcret
   604  000A4C                     __end_of_LCD_CONFIG:
   605                           	opt callstack 0
   606                           
   607 ;; *************** function _ESCRIBE_MENSAJE *****************
   608 ;; Defined at:
   609 ;;		line 41 in file "LCD.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;  cadena          2   32[COMRAM] PTR const unsigned char 
   612 ;;		 -> STR_3(16), STR_2(16), STR_1(17), 
   613 ;;  tam             1   34[COMRAM] unsigned char 
   614 ;; Auto vars:     Size  Location     Type
   615 ;;  i               1   37[COMRAM] unsigned char 
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   625 ;;      Params:         3       0       0       0       0       0       0       0       0
   626 ;;      Locals:         1       0       0       0       0       0       0       0       0
   627 ;;      Temps:          2       0       0       0       0       0       0       0       0
   628 ;;      Totals:         6       0       0       0       0       0       0       0       0
   629 ;;Total ram usage:        6 bytes
   630 ;; Hardware stack levels used:    1
   631 ;; Hardware stack levels required when called:   10
   632 ;; This function calls:
   633 ;;		_ENVIA_CHAR
   634 ;; This function is called by:
   635 ;;		_main
   636 ;; This function uses a non-reentrant model
   637 ;;
   638                           
   639                           	psect	text2
   640  000BD4                     __ptext2:
   641                           	opt callstack 0
   642  000BD4                     _ESCRIBE_MENSAJE:
   643                           	opt callstack 20
   644                           
   645                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
   646                           
   647                           ;incstack = 0
   648  000BD4  0E00               	movlw	0
   649  000BD6  6E26               	movwf	ESCRIBE_MENSAJE@i,c
   650                           
   651                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
   652  000BD8  0E00               	movlw	0
   653  000BDA  6E26               	movwf	ESCRIBE_MENSAJE@i,c
   654  000BDC  D00F               	goto	l1422
   655  000BDE                     l1418:
   656                           
   657                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
   658  000BDE  5026               	movf	ESCRIBE_MENSAJE@i,w,c
   659  000BE0  2421               	addwf	ESCRIBE_MENSAJE@cadena,w,c
   660  000BE2  6E24               	movwf	??_ESCRIBE_MENSAJE& (0+255),c
   661  000BE4  0E00               	movlw	0
   662  000BE6  2022               	addwfc	ESCRIBE_MENSAJE@cadena+1,w,c
   663  000BE8  6E25               	movwf	(??_ESCRIBE_MENSAJE+1)& (0+255),c
   664  000BEA  C024  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
   665  000BEE  C025  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
   666  000BF2                     	if	0	;tblptru may be non-zero
   667  000BF2                     	endif
   668  000BF2                     	if	0	;tblptru may be non-zero
   669  000BF2                     	endif
   670  000BF2  0008               	tblrd		*
   671  000BF4  50F5               	movf	tablat,w,c
   672  000BF6  EC4E  F005         	call	_ENVIA_CHAR
   673                           
   674                           ;LCD.c: 47:  }
   675  000BFA  2A26               	incf	ESCRIBE_MENSAJE@i,f,c
   676  000BFC                     l1422:
   677  000BFC  5023               	movf	ESCRIBE_MENSAJE@tam,w,c
   678  000BFE  5C26               	subwf	ESCRIBE_MENSAJE@i,w,c
   679  000C00  B0D8               	btfsc	status,0,c
   680  000C02  0012               	return	
   681  000C04  D7EC               	goto	l1418
   682  000C06                     __end_of_ESCRIBE_MENSAJE:
   683                           	opt callstack 0
   684                           
   685 ;; *************** function _ENVIA_CHAR *****************
   686 ;; Defined at:
   687 ;;		line 50 in file "LCD.c"
   688 ;; Parameters:    Size  Location     Type
   689 ;;  dato            1    wreg     unsigned char 
   690 ;; Auto vars:     Size  Location     Type
   691 ;;  dato            1   30[COMRAM] unsigned char 
   692 ;;  aux             1   31[COMRAM] unsigned char 
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, status,2, status,0, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   702 ;;      Params:         0       0       0       0       0       0       0       0       0
   703 ;;      Locals:         2       0       0       0       0       0       0       0       0
   704 ;;      Temps:          0       0       0       0       0       0       0       0       0
   705 ;;      Totals:         2       0       0       0       0       0       0       0       0
   706 ;;Total ram usage:        2 bytes
   707 ;; Hardware stack levels used:    1
   708 ;; Hardware stack levels required when called:    9
   709 ;; This function calls:
   710 ;;		_ENVIA_NIBBLE
   711 ;;		_LEER_LCD
   712 ;; This function is called by:
   713 ;;		_ESCRIBE_MENSAJE
   714 ;;		_GENERACARACTER
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           	psect	text3
   719  000A9C                     __ptext3:
   720                           	opt callstack 0
   721  000A9C                     _ENVIA_CHAR:
   722                           	opt callstack 20
   723                           
   724                           ;incstack = 0
   725                           ;ENVIA_CHAR@dato stored from wreg
   726  000A9C  6E1F               	movwf	ENVIA_CHAR@dato,c
   727                           
   728                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
   729  000A9E  808C               	bsf	3980,0,c	;volatile
   730                           
   731                           ;LCD.c: 54:  LEER_LCD();
   732  000AA0  EC63  F004         	call	_LEER_LCD	;wreg free
   733                           
   734                           ;LCD.c: 55:  TRISD = 0x00;
   735  000AA4  0E00               	movlw	0
   736  000AA6  6E95               	movwf	3989,c	;volatile
   737                           
   738                           ;LCD.c: 56:         _delay(1200);
   739  000AA8  0EF0               	movlw	240
   740  000AAA                     u407:
   741  000AAA  D000               	nop2	
   742  000AAC  2EE8               	decfsz	wreg,f,c
   743  000AAE  D7FD               	bra	u407
   744                           
   745                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
   746  000AB0  928C               	bcf	3980,1,c	;volatile
   747                           
   748                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
   749  000AB2  948C               	bcf	3980,2,c	;volatile
   750                           
   751                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
   752  000AB4  808C               	bsf	3980,0,c	;volatile
   753                           
   754                           ;LCD.c: 61:  aux = dato & 0xF0;
   755  000AB6  501F               	movf	ENVIA_CHAR@dato,w,c
   756  000AB8  0BF0               	andlw	240
   757  000ABA  6E20               	movwf	ENVIA_CHAR@aux,c
   758                           
   759                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
   760  000ABC  5020               	movf	ENVIA_CHAR@aux,w,c
   761  000ABE  EC67  F006         	call	_ENVIA_NIBBLE
   762                           
   763                           ;LCD.c: 63:  aux = dato << 4;
   764  000AC2  381F               	swapf	ENVIA_CHAR@dato,w,c
   765  000AC4  0BF0               	andlw	240
   766  000AC6  6E20               	movwf	ENVIA_CHAR@aux,c
   767                           
   768                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
   769  000AC8  5020               	movf	ENVIA_CHAR@aux,w,c
   770  000ACA  EC67  F006         	call	_ENVIA_NIBBLE
   771  000ACE  0012               	return		;funcret
   772  000AD0                     __end_of_ENVIA_CHAR:
   773                           	opt callstack 0
   774                           
   775 ;; *************** function _CURSOR_ONOFF *****************
   776 ;; Defined at:
   777 ;;		line 35 in file "LCD.c"
   778 ;; Parameters:    Size  Location     Type
   779 ;;  estado          1    wreg     unsigned char 
   780 ;; Auto vars:     Size  Location     Type
   781 ;;  estado          1   32[COMRAM] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, status,2, status,0, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   791 ;;      Params:         0       0       0       0       0       0       0       0       0
   792 ;;      Locals:         1       0       0       0       0       0       0       0       0
   793 ;;      Temps:          0       0       0       0       0       0       0       0       0
   794 ;;      Totals:         1       0       0       0       0       0       0       0       0
   795 ;;Total ram usage:        1 bytes
   796 ;; Hardware stack levels used:    1
   797 ;; Hardware stack levels required when called:   10
   798 ;; This function calls:
   799 ;;		_ENVIA_LCD_CMD
   800 ;; This function is called by:
   801 ;;		_main
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text4
   806  000CB2                     __ptext4:
   807                           	opt callstack 0
   808  000CB2                     _CURSOR_ONOFF:
   809                           	opt callstack 20
   810                           
   811                           ;incstack = 0
   812                           ;CURSOR_ONOFF@estado stored from wreg
   813  000CB2  6E21               	movwf	CURSOR_ONOFF@estado,c
   814                           
   815                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   816  000CB4  5021               	movf	CURSOR_ONOFF@estado,w,c
   817  000CB6  A4D8               	btfss	status,2,c
   818  000CB8  D003               	goto	l1098
   819  000CBA  0E0E               	movlw	14
   820  000CBC  EC68  F005         	call	_ENVIA_LCD_CMD
   821  000CC0                     l1098:
   822                           
   823                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   824  000CC0  0421               	decf	CURSOR_ONOFF@estado,w,c
   825  000CC2  A4D8               	btfss	status,2,c
   826  000CC4  0012               	return	
   827  000CC6  0E0C               	movlw	12
   828  000CC8  EC68  F005         	call	_ENVIA_LCD_CMD
   829  000CCC  0012               	return		;funcret
   830  000CCE                     __end_of_CURSOR_ONOFF:
   831                           	opt callstack 0
   832                           
   833 ;; *************** function _CURSOR_HOME *****************
   834 ;; Defined at:
   835 ;;		line 30 in file "LCD.c"
   836 ;; Parameters:    Size  Location     Type
   837 ;;		None
   838 ;; Auto vars:     Size  Location     Type
   839 ;;		None
   840 ;; Return value:  Size  Location     Type
   841 ;;                  1    wreg      void 
   842 ;; Registers used:
   843 ;;		wreg, status,2, status,0, cstack
   844 ;; Tracked objects:
   845 ;;		On entry : 0/0
   846 ;;		On exit  : 0/0
   847 ;;		Unchanged: 0/0
   848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   849 ;;      Params:         0       0       0       0       0       0       0       0       0
   850 ;;      Locals:         0       0       0       0       0       0       0       0       0
   851 ;;      Temps:          0       0       0       0       0       0       0       0       0
   852 ;;      Totals:         0       0       0       0       0       0       0       0       0
   853 ;;Total ram usage:        0 bytes
   854 ;; Hardware stack levels used:    1
   855 ;; Hardware stack levels required when called:   10
   856 ;; This function calls:
   857 ;;		_ENVIA_LCD_CMD
   858 ;; This function is called by:
   859 ;;		_main
   860 ;; This function uses a non-reentrant model
   861 ;;
   862                           
   863                           	psect	text5
   864  000D36                     __ptext5:
   865                           	opt callstack 0
   866  000D36                     _CURSOR_HOME:
   867                           	opt callstack 20
   868                           
   869                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   870                           
   871                           ;incstack = 0
   872  000D36  0E02               	movlw	2
   873  000D38  EC68  F005         	call	_ENVIA_LCD_CMD
   874  000D3C  0012               	return		;funcret
   875  000D3E                     __end_of_CURSOR_HOME:
   876                           	opt callstack 0
   877                           
   878 ;; *************** function _BORRAR_LCD *****************
   879 ;; Defined at:
   880 ;;		line 67 in file "LCD.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;		None
   883 ;; Auto vars:     Size  Location     Type
   884 ;;		None
   885 ;; Return value:  Size  Location     Type
   886 ;;                  1    wreg      void 
   887 ;; Registers used:
   888 ;;		wreg, status,2, status,0, cstack
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   894 ;;      Params:         0       0       0       0       0       0       0       0       0
   895 ;;      Locals:         0       0       0       0       0       0       0       0       0
   896 ;;      Temps:          0       0       0       0       0       0       0       0       0
   897 ;;      Totals:         0       0       0       0       0       0       0       0       0
   898 ;;Total ram usage:        0 bytes
   899 ;; Hardware stack levels used:    1
   900 ;; Hardware stack levels required when called:   10
   901 ;; This function calls:
   902 ;;		_ENVIA_LCD_CMD
   903 ;; This function is called by:
   904 ;;		_main
   905 ;; This function uses a non-reentrant model
   906 ;;
   907                           
   908                           	psect	text6
   909  000D3E                     __ptext6:
   910                           	opt callstack 0
   911  000D3E                     _BORRAR_LCD:
   912                           	opt callstack 20
   913                           
   914                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   915                           
   916                           ;incstack = 0
   917  000D3E  0E01               	movlw	1
   918  000D40  EC68  F005         	call	_ENVIA_LCD_CMD
   919  000D44  0012               	return		;funcret
   920  000D46                     __end_of_BORRAR_LCD:
   921                           	opt callstack 0
   922                           
   923 ;; *************** function _ENVIA_LCD_CMD *****************
   924 ;; Defined at:
   925 ;;		line 104 in file "LCD.c"
   926 ;; Parameters:    Size  Location     Type
   927 ;;  dato            1    wreg     unsigned char 
   928 ;; Auto vars:     Size  Location     Type
   929 ;;  dato            1   30[COMRAM] unsigned char 
   930 ;;  aux             1   31[COMRAM] unsigned char 
   931 ;; Return value:  Size  Location     Type
   932 ;;                  1    wreg      void 
   933 ;; Registers used:
   934 ;;		wreg, status,2, status,0, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   940 ;;      Params:         0       0       0       0       0       0       0       0       0
   941 ;;      Locals:         2       0       0       0       0       0       0       0       0
   942 ;;      Temps:          0       0       0       0       0       0       0       0       0
   943 ;;      Totals:         2       0       0       0       0       0       0       0       0
   944 ;;Total ram usage:        2 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; Hardware stack levels required when called:    9
   947 ;; This function calls:
   948 ;;		_ENVIA_NIBBLE
   949 ;;		_LEER_LCD
   950 ;; This function is called by:
   951 ;;		_CURSOR_HOME
   952 ;;		_CURSOR_ONOFF
   953 ;;		_BORRAR_LCD
   954 ;;		_LCD_CONFIG
   955 ;;		_BLINK_CURSOR
   956 ;;		_DISPLAY_ONOFF
   957 ;;		_GENERACARACTER
   958 ;; This function uses a non-reentrant model
   959 ;;
   960                           
   961                           	psect	text7
   962  000AD0                     __ptext7:
   963                           	opt callstack 0
   964  000AD0                     _ENVIA_LCD_CMD:
   965                           	opt callstack 20
   966                           
   967                           ;incstack = 0
   968                           ;ENVIA_LCD_CMD@dato stored from wreg
   969  000AD0  6E1F               	movwf	ENVIA_LCD_CMD@dato,c
   970                           
   971                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
   972  000AD2  908C               	bcf	3980,0,c	;volatile
   973                           
   974                           ;LCD.c: 108:  LEER_LCD();
   975  000AD4  EC63  F004         	call	_LEER_LCD	;wreg free
   976                           
   977                           ;LCD.c: 109:  TRISD = 0b00000000;
   978  000AD8  0E00               	movlw	0
   979  000ADA  6E95               	movwf	3989,c	;volatile
   980                           
   981                           ;LCD.c: 111:         _delay(1200);
   982  000ADC  0EF0               	movlw	240
   983  000ADE                     u417:
   984  000ADE  D000               	nop2	
   985  000AE0  2EE8               	decfsz	wreg,f,c
   986  000AE2  D7FD               	bra	u417
   987                           
   988                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
   989  000AE4  928C               	bcf	3980,1,c	;volatile
   990                           
   991                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
   992  000AE6  948C               	bcf	3980,2,c	;volatile
   993                           
   994                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
   995  000AE8  908C               	bcf	3980,0,c	;volatile
   996                           
   997                           ;LCD.c: 115:  aux = dato & 0xF0;
   998  000AEA  501F               	movf	ENVIA_LCD_CMD@dato,w,c
   999  000AEC  0BF0               	andlw	240
  1000  000AEE  6E20               	movwf	ENVIA_LCD_CMD@aux,c
  1001                           
  1002                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1003  000AF0  5020               	movf	ENVIA_LCD_CMD@aux,w,c
  1004  000AF2  EC67  F006         	call	_ENVIA_NIBBLE
  1005                           
  1006                           ;LCD.c: 117:  aux = dato<<4;
  1007  000AF6  381F               	swapf	ENVIA_LCD_CMD@dato,w,c
  1008  000AF8  0BF0               	andlw	240
  1009  000AFA  6E20               	movwf	ENVIA_LCD_CMD@aux,c
  1010                           
  1011                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1012  000AFC  5020               	movf	ENVIA_LCD_CMD@aux,w,c
  1013  000AFE  EC67  F006         	call	_ENVIA_NIBBLE
  1014  000B02  0012               	return		;funcret
  1015  000B04                     __end_of_ENVIA_LCD_CMD:
  1016                           	opt callstack 0
  1017                           
  1018 ;; *************** function _LEER_LCD *****************
  1019 ;; Defined at:
  1020 ;;		line 121 in file "LCD.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;		None
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;  aux             1   29[COMRAM] unsigned char 
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, status,2, status,0
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1034 ;;      Params:         0       0       0       0       0       0       0       0       0
  1035 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1036 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1037 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1038 ;;Total ram usage:        1 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; Hardware stack levels required when called:    8
  1041 ;; This function calls:
  1042 ;;		Nothing
  1043 ;; This function is called by:
  1044 ;;		_ENVIA_CHAR
  1045 ;;		_ENVIA_LCD_CMD
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text8
  1050  0008C6                     __ptext8:
  1051                           	opt callstack 0
  1052  0008C6                     _LEER_LCD:
  1053                           	opt callstack 20
  1054                           
  1055                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1056                           
  1057                           ;incstack = 0
  1058  0008C6  0EF8               	movlw	248
  1059  0008C8  6E95               	movwf	3989,c	;volatile
  1060                           
  1061                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1062  0008CA  908C               	bcf	3980,0,c	;volatile
  1063                           
  1064                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1065  0008CC  828C               	bsf	3980,1,c	;volatile
  1066                           
  1067                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1068  0008CE  848C               	bsf	3980,2,c	;volatile
  1069                           
  1070                           ;LCD.c: 128:         _delay(1200);
  1071  0008D0  0EF0               	movlw	240
  1072  0008D2                     u427:
  1073  0008D2  D000               	nop2	
  1074  0008D4  2EE8               	decfsz	wreg,f,c
  1075  0008D6  D7FD               	bra	u427
  1076                           
  1077                           ;LCD.c: 130:  aux = PORTD;
  1078  0008D8  CF83 F01E          	movff	3971,LEER_LCD@aux	;volatile
  1079                           
  1080                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1081  0008DC  948C               	bcf	3980,2,c	;volatile
  1082                           
  1083                           ;LCD.c: 132:         _delay(1200);
  1084  0008DE  0EF0               	movlw	240
  1085  0008E0                     u437:
  1086  0008E0  D000               	nop2	
  1087  0008E2  2EE8               	decfsz	wreg,f,c
  1088  0008E4  D7FD               	bra	u437
  1089                           
  1090                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1091  0008E6  848C               	bsf	3980,2,c	;volatile
  1092                           
  1093                           ;LCD.c: 135:         _delay(1200);
  1094  0008E8  0EF0               	movlw	240
  1095  0008EA                     u447:
  1096  0008EA  D000               	nop2	
  1097  0008EC  2EE8               	decfsz	wreg,f,c
  1098  0008EE  D7FD               	bra	u447
  1099  0008F0                     l820:
  1100                           
  1101                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1102  0008F0  948C               	bcf	3980,2,c	;volatile
  1103                           
  1104                           ;LCD.c: 138:  aux = aux & 0x80;
  1105  0008F2  501E               	movf	LEER_LCD@aux,w,c
  1106  0008F4  0B80               	andlw	128
  1107  0008F6  6E1E               	movwf	LEER_LCD@aux,c
  1108                           
  1109                           ;LCD.c: 139:  while(aux == 0x80)
  1110  0008F8  D012               	goto	l836
  1111  0008FA                     l117:
  1112                           
  1113                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1114  0008FA  848C               	bsf	3980,2,c	;volatile
  1115                           
  1116                           ;LCD.c: 142:             _delay(1200);
  1117  0008FC  0EF0               	movlw	240
  1118  0008FE                     u457:
  1119  0008FE  D000               	nop2	
  1120  000900  2EE8               	decfsz	wreg,f,c
  1121  000902  D7FD               	bra	u457
  1122                           
  1123                           ;LCD.c: 143:             aux = PORTD;
  1124  000904  CF83 F01E          	movff	3971,LEER_LCD@aux	;volatile
  1125                           
  1126                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1127  000908  948C               	bcf	3980,2,c	;volatile
  1128                           
  1129                           ;LCD.c: 145:             _delay(1200);
  1130  00090A  0EF0               	movlw	240
  1131  00090C                     u467:
  1132  00090C  D000               	nop2	
  1133  00090E  2EE8               	decfsz	wreg,f,c
  1134  000910  D7FD               	bra	u467
  1135                           
  1136                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1137  000912  848C               	bsf	3980,2,c	;volatile
  1138                           
  1139                           ;LCD.c: 147:             _delay(1200);
  1140  000914  0EF0               	movlw	240
  1141  000916                     u477:
  1142  000916  D000               	nop2	
  1143  000918  2EE8               	decfsz	wreg,f,c
  1144  00091A  D7FD               	bra	u477
  1145  00091C  D7E9               	goto	l820
  1146  00091E                     l836:
  1147                           
  1148                           ;LCD.c: 139:  while(aux == 0x80)
  1149  00091E  0E80               	movlw	128
  1150  000920  181E               	xorwf	LEER_LCD@aux,w,c
  1151  000922  A4D8               	btfss	status,2,c
  1152  000924  0012               	return	
  1153  000926  D7E9               	goto	l117
  1154  000928                     __end_of_LEER_LCD:
  1155                           	opt callstack 0
  1156                           
  1157 ;; *************** function _ENVIA_NIBBLE *****************
  1158 ;; Defined at:
  1159 ;;		line 93 in file "LCD.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;  dato            1    wreg     unsigned char 
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;  dato            1   29[COMRAM] unsigned char 
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1173 ;;      Params:         0       0       0       0       0       0       0       0       0
  1174 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1175 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1176 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1177 ;;Total ram usage:        1 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    8
  1180 ;; This function calls:
  1181 ;;		Nothing
  1182 ;; This function is called by:
  1183 ;;		_ENVIA_CHAR
  1184 ;;		_LCD_CONFIG
  1185 ;;		_ENVIA_LCD_CMD
  1186 ;; This function uses a non-reentrant model
  1187 ;;
  1188                           
  1189                           	psect	text9
  1190  000CCE                     __ptext9:
  1191                           	opt callstack 0
  1192  000CCE                     _ENVIA_NIBBLE:
  1193                           	opt callstack 21
  1194                           
  1195                           ;incstack = 0
  1196                           ;ENVIA_NIBBLE@dato stored from wreg
  1197  000CCE  6E1E               	movwf	ENVIA_NIBBLE@dato,c
  1198                           
  1199                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1200  000CD0  0E0F               	movlw	15
  1201  000CD2  168C               	andwf	3980,f,c	;volatile
  1202                           
  1203                           ;LCD.c: 96:  dato &= 0xF0;
  1204  000CD4  0EF0               	movlw	240
  1205  000CD6  161E               	andwf	ENVIA_NIBBLE@dato,f,c
  1206                           
  1207                           ;LCD.c: 97:  LATD|= dato;
  1208  000CD8  501E               	movf	ENVIA_NIBBLE@dato,w,c	;volatile
  1209  000CDA  128C               	iorwf	3980,f,c	;volatile
  1210                           
  1211                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1212  000CDC  848C               	bsf	3980,2,c	;volatile
  1213                           
  1214                           ;LCD.c: 100:         _delay(1200);
  1215  000CDE  0EF0               	movlw	240
  1216  000CE0                     u487:
  1217  000CE0  D000               	nop2	
  1218  000CE2  2EE8               	decfsz	wreg,f,c
  1219  000CE4  D7FD               	bra	u487
  1220                           
  1221                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1222  000CE6  948C               	bcf	3980,2,c	;volatile
  1223  000CE8  0012               	return		;funcret
  1224  000CEA                     __end_of_ENVIA_NIBBLE:
  1225                           	opt callstack 0
  1226                           
  1227 ;; *************** function _Int1 *****************
  1228 ;; Defined at:
  1229 ;;		line 66 in file "tonitomon.c"
  1230 ;; Parameters:    Size  Location     Type
  1231 ;;		None
  1232 ;; Auto vars:     Size  Location     Type
  1233 ;;		None
  1234 ;; Return value:  Size  Location     Type
  1235 ;;                  1    wreg      void 
  1236 ;; Registers used:
  1237 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1238 ;; Tracked objects:
  1239 ;;		On entry : 0/0
  1240 ;;		On exit  : 0/0
  1241 ;;		Unchanged: 0/0
  1242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1243 ;;      Params:         0       0       0       0       0       0       0       0       0
  1244 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1245 ;;      Temps:          7       0       0       0       0       0       0       0       0
  1246 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1247 ;;Total ram usage:        7 bytes
  1248 ;; Hardware stack levels used:    1
  1249 ;; Hardware stack levels required when called:    7
  1250 ;; This function calls:
  1251 ;;		_POS_CURSOR
  1252 ;;		i1_ESCRIBE_MENSAJE
  1253 ;; This function is called by:
  1254 ;;		Interrupt level 1
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	intcodelo
  1259  000018                     __pintcodelo:
  1260                           	opt callstack 0
  1261  000018                     _Int1:
  1262                           	opt callstack 20
  1263                           
  1264                           ;incstack = 0
  1265  000018  802A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
  1266  00001A  CFD8 F017          	movff	status,??_Int1
  1267  00001E  CFE8 F018          	movff	wreg,??_Int1+1
  1268  000022  CFE0 F019          	movff	bsr,??_Int1+2
  1269  000026  CFF6 F01A          	movff	tblptrl,??_Int1+3
  1270  00002A  CFF7 F01B          	movff	tblptrh,??_Int1+4
  1271  00002E  CFF8 F01C          	movff	tblptru,??_Int1+5
  1272  000032  CFF5 F01D          	movff	tablat,??_Int1+6
  1273                           
  1274                           ;tonitomon.c: 67:     INTCON3bits.INT1IF = 0;
  1275  000036  90F0               	bcf	4080,0,c	;volatile
  1276                           
  1277                           ;tonitomon.c: 68:     POS_CURSOR(2,0);
  1278  000038  0E00               	movlw	0
  1279  00003A  6E11               	movwf	POS_CURSOR@columna,c
  1280  00003C  0E02               	movlw	2
  1281  00003E  EC35  F006         	call	_POS_CURSOR
  1282                           
  1283                           ;tonitomon.c: 69:     ESCRIBE_MENSAJE("Machucaron INT1",15);
  1284  000042  0E22               	movlw	low STR_3
  1285  000044  6E11               	movwf	i1ESCRIBE_MENSAJE@cadena,c
  1286  000046  0E08               	movlw	high STR_3
  1287  000048  6E12               	movwf	i1ESCRIBE_MENSAJE@cadena+1,c
  1288  00004A  0E0F               	movlw	15
  1289  00004C  6E13               	movwf	i1ESCRIBE_MENSAJE@tam,c
  1290  00004E  EC03  F006         	call	i1_ESCRIBE_MENSAJE	;wreg free
  1291  000052  C01D  FFF5         	movff	??_Int1+6,tablat
  1292  000056  C01C  FFF8         	movff	??_Int1+5,tblptru
  1293  00005A  C01B  FFF7         	movff	??_Int1+4,tblptrh
  1294  00005E  C01A  FFF6         	movff	??_Int1+3,tblptrl
  1295  000062  C019  FFE0         	movff	??_Int1+2,bsr
  1296  000066  C018  FFE8         	movff	??_Int1+1,wreg
  1297  00006A  C017  FFD8         	movff	??_Int1,status
  1298  00006E  902A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
  1299  000070  0010               	retfie	
  1300  000072                     __end_of_Int1:
  1301                           	opt callstack 0
  1302                           
  1303 ;; *************** function i1_ESCRIBE_MENSAJE *****************
  1304 ;; Defined at:
  1305 ;;		line 41 in file "LCD.c"
  1306 ;; Parameters:    Size  Location     Type
  1307 ;;  cadena          2   16[COMRAM] PTR const unsigned char 
  1308 ;;		 -> STR_3(16), STR_2(16), STR_1(17), 
  1309 ;;  tam             1   18[COMRAM] unsigned char 
  1310 ;; Auto vars:     Size  Location     Type
  1311 ;;  ESCRIBE_MENS    1   21[COMRAM] unsigned char 
  1312 ;; Return value:  Size  Location     Type
  1313 ;;                  1    wreg      void 
  1314 ;; Registers used:
  1315 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1316 ;; Tracked objects:
  1317 ;;		On entry : 0/0
  1318 ;;		On exit  : 0/0
  1319 ;;		Unchanged: 0/0
  1320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1321 ;;      Params:         3       0       0       0       0       0       0       0       0
  1322 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1323 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1324 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1325 ;;Total ram usage:        6 bytes
  1326 ;; Hardware stack levels used:    1
  1327 ;; Hardware stack levels required when called:    6
  1328 ;; This function calls:
  1329 ;;		i1_ENVIA_CHAR
  1330 ;; This function is called by:
  1331 ;;		_Int1
  1332 ;; This function uses a non-reentrant model
  1333 ;;
  1334                           
  1335                           	psect	text11
  1336  000C06                     __ptext11:
  1337                           	opt callstack 0
  1338  000C06                     i1_ESCRIBE_MENSAJE:
  1339                           	opt callstack 20
  1340                           
  1341                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1342                           
  1343                           ;incstack = 0
  1344  000C06  0E00               	movlw	0
  1345  000C08  6E16               	movwf	i1ESCRIBE_MENSAJE@i,c
  1346                           
  1347                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1348  000C0A  0E00               	movlw	0
  1349  000C0C  6E16               	movwf	i1ESCRIBE_MENSAJE@i,c
  1350  000C0E  D00F               	goto	i1l1446
  1351  000C10                     i1l1442:
  1352                           
  1353                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1354  000C10  5016               	movf	i1ESCRIBE_MENSAJE@i,w,c
  1355  000C12  2411               	addwf	i1ESCRIBE_MENSAJE@cadena,w,c
  1356  000C14  6E14               	movwf	??i1_ESCRIBE_MENSAJE& (0+255),c
  1357  000C16  0E00               	movlw	0
  1358  000C18  2012               	addwfc	i1ESCRIBE_MENSAJE@cadena+1,w,c
  1359  000C1A  6E15               	movwf	(??i1_ESCRIBE_MENSAJE+1)& (0+255),c
  1360  000C1C  C014  FFF6         	movff	??i1_ESCRIBE_MENSAJE,tblptrl
  1361  000C20  C015  FFF7         	movff	??i1_ESCRIBE_MENSAJE+1,tblptrh
  1362  000C24                     	if	0	;tblptru may be non-zero
  1363  000C24                     	endif
  1364  000C24                     	if	0	;tblptru may be non-zero
  1365  000C24                     	endif
  1366  000C24  0008               	tblrd		*
  1367  000C26  50F5               	movf	tablat,w,c
  1368  000C28  EC82  F005         	call	i1_ENVIA_CHAR
  1369                           
  1370                           ;LCD.c: 47:  }
  1371  000C2C  2A16               	incf	i1ESCRIBE_MENSAJE@i,f,c
  1372  000C2E                     i1l1446:
  1373  000C2E  5013               	movf	i1ESCRIBE_MENSAJE@tam,w,c
  1374  000C30  5C16               	subwf	i1ESCRIBE_MENSAJE@i,w,c
  1375  000C32  B0D8               	btfsc	status,0,c
  1376  000C34  0012               	return	
  1377  000C36  D7EC               	goto	i1l1442
  1378  000C38                     __end_ofi1_ESCRIBE_MENSAJE:
  1379                           	opt callstack 0
  1380                           
  1381 ;; *************** function i1_ENVIA_CHAR *****************
  1382 ;; Defined at:
  1383 ;;		line 50 in file "LCD.c"
  1384 ;; Parameters:    Size  Location     Type
  1385 ;;  dato            1    wreg     unsigned char 
  1386 ;; Auto vars:     Size  Location     Type
  1387 ;;  dato            1   14[COMRAM] unsigned char 
  1388 ;;  ENVIA_CHAR      1   15[COMRAM] unsigned char 
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  1    wreg      void 
  1391 ;; Registers used:
  1392 ;;		wreg, status,2, status,0, cstack
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1398 ;;      Params:         0       0       0       0       0       0       0       0       0
  1399 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1400 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1401 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1402 ;;Total ram usage:        2 bytes
  1403 ;; Hardware stack levels used:    1
  1404 ;; Hardware stack levels required when called:    5
  1405 ;; This function calls:
  1406 ;;		i1_ENVIA_NIBBLE
  1407 ;;		i1_LEER_LCD
  1408 ;; This function is called by:
  1409 ;;		i1_ESCRIBE_MENSAJE
  1410 ;; This function uses a non-reentrant model
  1411 ;;
  1412                           
  1413                           	psect	text12
  1414  000B04                     __ptext12:
  1415                           	opt callstack 0
  1416  000B04                     i1_ENVIA_CHAR:
  1417                           	opt callstack 20
  1418                           
  1419                           ;incstack = 0
  1420                           ;i1ENVIA_CHAR@dato stored from wreg
  1421  000B04  6E0F               	movwf	i1ENVIA_CHAR@dato,c
  1422                           
  1423                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1424  000B06  808C               	bsf	3980,0,c	;volatile
  1425                           
  1426                           ;LCD.c: 54:  LEER_LCD();
  1427  000B08  EC94  F004         	call	i1_LEER_LCD	;wreg free
  1428                           
  1429                           ;LCD.c: 55:  TRISD = 0x00;
  1430  000B0C  0E00               	movlw	0
  1431  000B0E  6E95               	movwf	3989,c	;volatile
  1432                           
  1433                           ;LCD.c: 56:         _delay(1200);
  1434  000B10  0EF0               	movlw	240
  1435  000B12                     i1u49_27:
  1436  000B12  D000               	nop2	
  1437  000B14  2EE8               	decfsz	wreg,f,c
  1438  000B16  D7FD               	bra	i1u49_27
  1439                           
  1440                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1441  000B18  928C               	bcf	3980,1,c	;volatile
  1442                           
  1443                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1444  000B1A  948C               	bcf	3980,2,c	;volatile
  1445                           
  1446                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1447  000B1C  808C               	bsf	3980,0,c	;volatile
  1448                           
  1449                           ;LCD.c: 61:  aux = dato & 0xF0;
  1450  000B1E  500F               	movf	i1ENVIA_CHAR@dato,w,c
  1451  000B20  0BF0               	andlw	240
  1452  000B22  6E10               	movwf	i1ENVIA_CHAR@aux,c
  1453                           
  1454                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1455  000B24  5010               	movf	i1ENVIA_CHAR@aux,w,c
  1456  000B26  EC75  F006         	call	i1_ENVIA_NIBBLE
  1457                           
  1458                           ;LCD.c: 63:  aux = dato << 4;
  1459  000B2A  380F               	swapf	i1ENVIA_CHAR@dato,w,c
  1460  000B2C  0BF0               	andlw	240
  1461  000B2E  6E10               	movwf	i1ENVIA_CHAR@aux,c
  1462                           
  1463                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1464  000B30  5010               	movf	i1ENVIA_CHAR@aux,w,c
  1465  000B32  EC75  F006         	call	i1_ENVIA_NIBBLE
  1466  000B36  0012               	return		;funcret
  1467  000B38                     __end_ofi1_ENVIA_CHAR:
  1468                           	opt callstack 0
  1469                           
  1470 ;; *************** function _POS_CURSOR *****************
  1471 ;; Defined at:
  1472 ;;		line 6 in file "LCD.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;  fila            1    wreg     unsigned char 
  1475 ;;  columna         1   16[COMRAM] unsigned char 
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;  fila            1   17[COMRAM] unsigned char 
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  1    wreg      void 
  1480 ;; Registers used:
  1481 ;;		wreg, status,2, status,0, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1487 ;;      Params:         1       0       0       0       0       0       0       0       0
  1488 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1489 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1490 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1491 ;;Total ram usage:        2 bytes
  1492 ;; Hardware stack levels used:    1
  1493 ;; Hardware stack levels required when called:    6
  1494 ;; This function calls:
  1495 ;;		i1_ENVIA_LCD_CMD
  1496 ;; This function is called by:
  1497 ;;		_Int1
  1498 ;; This function uses a non-reentrant model
  1499 ;;
  1500                           
  1501                           	psect	text13
  1502  000C6A                     __ptext13:
  1503                           	opt callstack 0
  1504  000C6A                     _POS_CURSOR:
  1505                           	opt callstack 20
  1506                           
  1507                           ;incstack = 0
  1508                           ;POS_CURSOR@fila stored from wreg
  1509  000C6A  6E12               	movwf	POS_CURSOR@fila,c
  1510                           
  1511                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1512  000C6C  0412               	decf	POS_CURSOR@fila,w,c
  1513  000C6E  A4D8               	btfss	status,2,c
  1514  000C70  D005               	goto	i1l1428
  1515                           
  1516                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1517  000C72  5011               	movf	POS_CURSOR@columna,w,c
  1518  000C74  0F80               	addlw	128
  1519  000C76  EC9C  F005         	call	i1_ENVIA_LCD_CMD
  1520                           
  1521                           ;LCD.c: 11:  }
  1522  000C7A  0012               	return	
  1523  000C7C                     i1l1428:
  1524  000C7C  0E02               	movlw	2
  1525  000C7E  1812               	xorwf	POS_CURSOR@fila,w,c
  1526  000C80  A4D8               	btfss	status,2,c
  1527  000C82  0012               	return	
  1528                           
  1529                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1530  000C84  5011               	movf	POS_CURSOR@columna,w,c
  1531  000C86  0FC0               	addlw	192
  1532  000C88  EC9C  F005         	call	i1_ENVIA_LCD_CMD
  1533  000C8C  0012               	return		;funcret
  1534  000C8E                     __end_of_POS_CURSOR:
  1535                           	opt callstack 0
  1536                           
  1537 ;; *************** function i1_ENVIA_LCD_CMD *****************
  1538 ;; Defined at:
  1539 ;;		line 104 in file "LCD.c"
  1540 ;; Parameters:    Size  Location     Type
  1541 ;;  dato            1    wreg     unsigned char 
  1542 ;; Auto vars:     Size  Location     Type
  1543 ;;  dato            1   14[COMRAM] unsigned char 
  1544 ;;  ENVIA_LCD_CM    1   15[COMRAM] unsigned char 
  1545 ;; Return value:  Size  Location     Type
  1546 ;;                  1    wreg      void 
  1547 ;; Registers used:
  1548 ;;		wreg, status,2, status,0, cstack
  1549 ;; Tracked objects:
  1550 ;;		On entry : 0/0
  1551 ;;		On exit  : 0/0
  1552 ;;		Unchanged: 0/0
  1553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1554 ;;      Params:         0       0       0       0       0       0       0       0       0
  1555 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1556 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1557 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1558 ;;Total ram usage:        2 bytes
  1559 ;; Hardware stack levels used:    1
  1560 ;; Hardware stack levels required when called:    5
  1561 ;; This function calls:
  1562 ;;		i1_ENVIA_NIBBLE
  1563 ;;		i1_LEER_LCD
  1564 ;; This function is called by:
  1565 ;;		_POS_CURSOR
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           
  1569                           	psect	text14
  1570  000B38                     __ptext14:
  1571                           	opt callstack 0
  1572  000B38                     i1_ENVIA_LCD_CMD:
  1573                           	opt callstack 20
  1574                           
  1575                           ;incstack = 0
  1576                           ;i1ENVIA_LCD_CMD@dato stored from wreg
  1577  000B38  6E0F               	movwf	i1ENVIA_LCD_CMD@dato,c
  1578                           
  1579                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1580  000B3A  908C               	bcf	3980,0,c	;volatile
  1581                           
  1582                           ;LCD.c: 108:  LEER_LCD();
  1583  000B3C  EC94  F004         	call	i1_LEER_LCD	;wreg free
  1584                           
  1585                           ;LCD.c: 109:  TRISD = 0b00000000;
  1586  000B40  0E00               	movlw	0
  1587  000B42  6E95               	movwf	3989,c	;volatile
  1588                           
  1589                           ;LCD.c: 111:         _delay(1200);
  1590  000B44  0EF0               	movlw	240
  1591  000B46                     i1u50_27:
  1592  000B46  D000               	nop2	
  1593  000B48  2EE8               	decfsz	wreg,f,c
  1594  000B4A  D7FD               	bra	i1u50_27
  1595                           
  1596                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1597  000B4C  928C               	bcf	3980,1,c	;volatile
  1598                           
  1599                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1600  000B4E  948C               	bcf	3980,2,c	;volatile
  1601                           
  1602                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1603  000B50  908C               	bcf	3980,0,c	;volatile
  1604                           
  1605                           ;LCD.c: 115:  aux = dato & 0xF0;
  1606  000B52  500F               	movf	i1ENVIA_LCD_CMD@dato,w,c
  1607  000B54  0BF0               	andlw	240
  1608  000B56  6E10               	movwf	i1ENVIA_LCD_CMD@aux,c
  1609                           
  1610                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1611  000B58  5010               	movf	i1ENVIA_LCD_CMD@aux,w,c
  1612  000B5A  EC75  F006         	call	i1_ENVIA_NIBBLE
  1613                           
  1614                           ;LCD.c: 117:  aux = dato<<4;
  1615  000B5E  380F               	swapf	i1ENVIA_LCD_CMD@dato,w,c
  1616  000B60  0BF0               	andlw	240
  1617  000B62  6E10               	movwf	i1ENVIA_LCD_CMD@aux,c
  1618                           
  1619                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1620  000B64  5010               	movf	i1ENVIA_LCD_CMD@aux,w,c
  1621  000B66  EC75  F006         	call	i1_ENVIA_NIBBLE
  1622  000B6A  0012               	return		;funcret
  1623  000B6C                     __end_ofi1_ENVIA_LCD_CMD:
  1624                           	opt callstack 0
  1625                           
  1626 ;; *************** function i1_LEER_LCD *****************
  1627 ;; Defined at:
  1628 ;;		line 121 in file "LCD.c"
  1629 ;; Parameters:    Size  Location     Type
  1630 ;;		None
  1631 ;; Auto vars:     Size  Location     Type
  1632 ;;  LEER_LCD        1   13[COMRAM] unsigned char 
  1633 ;; Return value:  Size  Location     Type
  1634 ;;                  1    wreg      void 
  1635 ;; Registers used:
  1636 ;;		wreg, status,2, status,0
  1637 ;; Tracked objects:
  1638 ;;		On entry : 0/0
  1639 ;;		On exit  : 0/0
  1640 ;;		Unchanged: 0/0
  1641 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1642 ;;      Params:         0       0       0       0       0       0       0       0       0
  1643 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1644 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1645 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1646 ;;Total ram usage:        1 bytes
  1647 ;; Hardware stack levels used:    1
  1648 ;; Hardware stack levels required when called:    4
  1649 ;; This function calls:
  1650 ;;		Nothing
  1651 ;; This function is called by:
  1652 ;;		i1_ENVIA_CHAR
  1653 ;;		i1_ENVIA_LCD_CMD
  1654 ;; This function uses a non-reentrant model
  1655 ;;
  1656                           
  1657                           	psect	text15
  1658  000928                     __ptext15:
  1659                           	opt callstack 0
  1660  000928                     i1_LEER_LCD:
  1661                           	opt callstack 20
  1662                           
  1663                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1664                           
  1665                           ;incstack = 0
  1666  000928  0EF8               	movlw	248
  1667  00092A  6E95               	movwf	3989,c	;volatile
  1668                           
  1669                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1670  00092C  908C               	bcf	3980,0,c	;volatile
  1671                           
  1672                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1673  00092E  828C               	bsf	3980,1,c	;volatile
  1674                           
  1675                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1676  000930  848C               	bsf	3980,2,c	;volatile
  1677                           
  1678                           ;LCD.c: 128:         _delay(1200);
  1679  000932  0EF0               	movlw	240
  1680  000934                     i1u51_27:
  1681  000934  D000               	nop2	
  1682  000936  2EE8               	decfsz	wreg,f,c
  1683  000938  D7FD               	bra	i1u51_27
  1684                           
  1685                           ;LCD.c: 130:  aux = PORTD;
  1686  00093A  CF83 F00E          	movff	3971,i1LEER_LCD@aux	;volatile
  1687                           
  1688                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1689  00093E  948C               	bcf	3980,2,c	;volatile
  1690                           
  1691                           ;LCD.c: 132:         _delay(1200);
  1692  000940  0EF0               	movlw	240
  1693  000942                     i1u52_27:
  1694  000942  D000               	nop2	
  1695  000944  2EE8               	decfsz	wreg,f,c
  1696  000946  D7FD               	bra	i1u52_27
  1697                           
  1698                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1699  000948  848C               	bsf	3980,2,c	;volatile
  1700                           
  1701                           ;LCD.c: 135:         _delay(1200);
  1702  00094A  0EF0               	movlw	240
  1703  00094C                     i1u53_27:
  1704  00094C  D000               	nop2	
  1705  00094E  2EE8               	decfsz	wreg,f,c
  1706  000950  D7FD               	bra	i1u53_27
  1707  000952                     i1l1272:
  1708                           
  1709                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1710  000952  948C               	bcf	3980,2,c	;volatile
  1711                           
  1712                           ;LCD.c: 138:  aux = aux & 0x80;
  1713  000954  500E               	movf	i1LEER_LCD@aux,w,c
  1714  000956  0B80               	andlw	128
  1715  000958  6E0E               	movwf	i1LEER_LCD@aux,c
  1716                           
  1717                           ;LCD.c: 139:  while(aux == 0x80)
  1718  00095A  D012               	goto	i1l1288
  1719  00095C                     i1l117:
  1720                           
  1721                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1722  00095C  848C               	bsf	3980,2,c	;volatile
  1723                           
  1724                           ;LCD.c: 142:             _delay(1200);
  1725  00095E  0EF0               	movlw	240
  1726  000960                     i1u54_27:
  1727  000960  D000               	nop2	
  1728  000962  2EE8               	decfsz	wreg,f,c
  1729  000964  D7FD               	bra	i1u54_27
  1730                           
  1731                           ;LCD.c: 143:             aux = PORTD;
  1732  000966  CF83 F00E          	movff	3971,i1LEER_LCD@aux	;volatile
  1733                           
  1734                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1735  00096A  948C               	bcf	3980,2,c	;volatile
  1736                           
  1737                           ;LCD.c: 145:             _delay(1200);
  1738  00096C  0EF0               	movlw	240
  1739  00096E                     i1u55_27:
  1740  00096E  D000               	nop2	
  1741  000970  2EE8               	decfsz	wreg,f,c
  1742  000972  D7FD               	bra	i1u55_27
  1743                           
  1744                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1745  000974  848C               	bsf	3980,2,c	;volatile
  1746                           
  1747                           ;LCD.c: 147:             _delay(1200);
  1748  000976  0EF0               	movlw	240
  1749  000978                     i1u56_27:
  1750  000978  D000               	nop2	
  1751  00097A  2EE8               	decfsz	wreg,f,c
  1752  00097C  D7FD               	bra	i1u56_27
  1753  00097E  D7E9               	goto	i1l1272
  1754  000980                     i1l1288:
  1755                           
  1756                           ;LCD.c: 139:  while(aux == 0x80)
  1757  000980  0E80               	movlw	128
  1758  000982  180E               	xorwf	i1LEER_LCD@aux,w,c
  1759  000984  A4D8               	btfss	status,2,c
  1760  000986  0012               	return	
  1761  000988  D7E9               	goto	i1l117
  1762  00098A                     __end_ofi1_LEER_LCD:
  1763                           	opt callstack 0
  1764                           
  1765 ;; *************** function i1_ENVIA_NIBBLE *****************
  1766 ;; Defined at:
  1767 ;;		line 93 in file "LCD.c"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  dato            1    wreg     unsigned char 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  dato            1   13[COMRAM] unsigned char 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;                  1    wreg      void 
  1774 ;; Registers used:
  1775 ;;		wreg, status,2, status,0
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1781 ;;      Params:         0       0       0       0       0       0       0       0       0
  1782 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1783 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1784 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1785 ;;Total ram usage:        1 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    4
  1788 ;; This function calls:
  1789 ;;		Nothing
  1790 ;; This function is called by:
  1791 ;;		i1_ENVIA_CHAR
  1792 ;;		i1_ENVIA_LCD_CMD
  1793 ;; This function uses a non-reentrant model
  1794 ;;
  1795                           
  1796                           	psect	text16
  1797  000CEA                     __ptext16:
  1798                           	opt callstack 0
  1799  000CEA                     i1_ENVIA_NIBBLE:
  1800                           	opt callstack 20
  1801                           
  1802                           ;incstack = 0
  1803                           ;i1ENVIA_NIBBLE@dato stored from wreg
  1804  000CEA  6E0E               	movwf	i1ENVIA_NIBBLE@dato,c
  1805                           
  1806                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1807  000CEC  0E0F               	movlw	15
  1808  000CEE  168C               	andwf	3980,f,c	;volatile
  1809                           
  1810                           ;LCD.c: 96:  dato &= 0xF0;
  1811  000CF0  0EF0               	movlw	240
  1812  000CF2  160E               	andwf	i1ENVIA_NIBBLE@dato,f,c
  1813                           
  1814                           ;LCD.c: 97:  LATD|= dato;
  1815  000CF4  500E               	movf	i1ENVIA_NIBBLE@dato,w,c	;volatile
  1816  000CF6  128C               	iorwf	3980,f,c	;volatile
  1817                           
  1818                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1819  000CF8  848C               	bsf	3980,2,c	;volatile
  1820                           
  1821                           ;LCD.c: 100:         _delay(1200);
  1822  000CFA  0EF0               	movlw	240
  1823  000CFC                     i1u57_27:
  1824  000CFC  D000               	nop2	
  1825  000CFE  2EE8               	decfsz	wreg,f,c
  1826  000D00  D7FD               	bra	i1u57_27
  1827                           
  1828                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1829  000D02  948C               	bcf	3980,2,c	;volatile
  1830  000D04  0012               	return		;funcret
  1831  000D06                     __end_ofi1_ENVIA_NIBBLE:
  1832                           	opt callstack 0
  1833                           
  1834 ;; *************** function _Int0 *****************
  1835 ;; Defined at:
  1836 ;;		line 59 in file "tonitomon.c"
  1837 ;; Parameters:    Size  Location     Type
  1838 ;;		None
  1839 ;; Auto vars:     Size  Location     Type
  1840 ;;		None
  1841 ;; Return value:  Size  Location     Type
  1842 ;;                  1    wreg      void 
  1843 ;; Registers used:
  1844 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1845 ;; Tracked objects:
  1846 ;;		On entry : 0/0
  1847 ;;		On exit  : 0/0
  1848 ;;		Unchanged: 0/0
  1849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1850 ;;      Params:         0       0       0       0       0       0       0       0       0
  1851 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1852 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1853 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1854 ;;Total ram usage:        4 bytes
  1855 ;; Hardware stack levels used:    1
  1856 ;; Hardware stack levels required when called:    3
  1857 ;; This function calls:
  1858 ;;		i2_ESCRIBE_MENSAJE
  1859 ;;		i2_POS_CURSOR
  1860 ;; This function is called by:
  1861 ;;		Interrupt level 2
  1862 ;; This function uses a non-reentrant model
  1863 ;;
  1864                           
  1865                           	psect	intcode
  1866  000008                     __pintcode:
  1867                           	opt callstack 0
  1868  000008                     _Int0:
  1869                           	opt callstack 20
  1870                           
  1871                           ;incstack = 0
  1872  000008  822A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1873  00000A  ED26  F005         	call	int_func,f	;refresh shadow registers
  1874                           
  1875                           	psect	intcode_body
  1876  000A4C                     __pintcode_body:
  1877                           	opt callstack 20
  1878  000A4C                     int_func:
  1879                           	opt callstack 20
  1880  000A4C  0006               	pop		; remove dummy address from shadow register refresh
  1881  000A4E  CFF6 F00A          	movff	tblptrl,??_Int0
  1882  000A52  CFF7 F00B          	movff	tblptrh,??_Int0+1
  1883  000A56  CFF8 F00C          	movff	tblptru,??_Int0+2
  1884  000A5A  CFF5 F00D          	movff	tablat,??_Int0+3
  1885                           
  1886                           ;tonitomon.c: 60:     INTCONbits.INT0IF = 0;
  1887  000A5E  92F2               	bcf	4082,1,c	;volatile
  1888                           
  1889                           ;tonitomon.c: 61:     estado = !estado;
  1890  000A60  5029               	movf	_estado,w,c
  1891  000A62  A4D8               	btfss	status,2,c
  1892  000A64  D002               	goto	i2u31_40
  1893  000A66  0E01               	movlw	1
  1894  000A68  D001               	goto	i2u32_40
  1895  000A6A                     i2u31_40:
  1896  000A6A  0E00               	movlw	0
  1897  000A6C                     i2u32_40:
  1898  000A6C  6E29               	movwf	_estado,c
  1899                           
  1900                           ;tonitomon.c: 62:     POS_CURSOR(2,0);
  1901  000A6E  0E00               	movlw	0
  1902  000A70  6E04               	movwf	i2POS_CURSOR@columna,c
  1903  000A72  0E02               	movlw	2
  1904  000A74  EC47  F006         	call	i2_POS_CURSOR
  1905                           
  1906                           ;tonitomon.c: 63:     ESCRIBE_MENSAJE("Machucaron INT0",15);
  1907  000A78  0E12               	movlw	low STR_2
  1908  000A7A  6E04               	movwf	i2ESCRIBE_MENSAJE@cadena,c
  1909  000A7C  0E08               	movlw	high STR_2
  1910  000A7E  6E05               	movwf	i2ESCRIBE_MENSAJE@cadena+1,c
  1911  000A80  0E0F               	movlw	15
  1912  000A82  6E06               	movwf	i2ESCRIBE_MENSAJE@tam,c
  1913  000A84  EC1C  F006         	call	i2_ESCRIBE_MENSAJE	;wreg free
  1914  000A88  C00D  FFF5         	movff	??_Int0+3,tablat
  1915  000A8C  C00C  FFF8         	movff	??_Int0+2,tblptru
  1916  000A90  C00B  FFF7         	movff	??_Int0+1,tblptrh
  1917  000A94  C00A  FFF6         	movff	??_Int0,tblptrl
  1918  000A98  922A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1919  000A9A  0011               	retfie		f
  1920  000A9C                     __end_of_Int0:
  1921                           	opt callstack 0
  1922                           
  1923 ;; *************** function i2_POS_CURSOR *****************
  1924 ;; Defined at:
  1925 ;;		line 6 in file "LCD.c"
  1926 ;; Parameters:    Size  Location     Type
  1927 ;;  fila            1    wreg     unsigned char 
  1928 ;;  columna         1    3[COMRAM] unsigned char 
  1929 ;; Auto vars:     Size  Location     Type
  1930 ;;  fila            1    4[COMRAM] unsigned char 
  1931 ;; Return value:  Size  Location     Type
  1932 ;;                  1    wreg      void 
  1933 ;; Registers used:
  1934 ;;		wreg, status,2, status,0, cstack
  1935 ;; Tracked objects:
  1936 ;;		On entry : 0/0
  1937 ;;		On exit  : 0/0
  1938 ;;		Unchanged: 0/0
  1939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1940 ;;      Params:         1       0       0       0       0       0       0       0       0
  1941 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1942 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1943 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1944 ;;Total ram usage:        2 bytes
  1945 ;; Hardware stack levels used:    1
  1946 ;; Hardware stack levels required when called:    2
  1947 ;; This function calls:
  1948 ;;		i2_ENVIA_LCD_CMD
  1949 ;; This function is called by:
  1950 ;;		_Int0
  1951 ;; This function uses a non-reentrant model
  1952 ;;
  1953                           
  1954                           	psect	text18
  1955  000C8E                     __ptext18:
  1956                           	opt callstack 0
  1957  000C8E                     i2_POS_CURSOR:
  1958                           	opt callstack 20
  1959                           
  1960                           ;incstack = 0
  1961                           ;i2POS_CURSOR@fila stored from wreg
  1962  000C8E  6E05               	movwf	i2POS_CURSOR@fila,c
  1963                           
  1964                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1965  000C90  0405               	decf	i2POS_CURSOR@fila,w,c
  1966  000C92  A4D8               	btfss	status,2,c
  1967  000C94  D005               	goto	i2l1436
  1968                           
  1969                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1970  000C96  5004               	movf	i2POS_CURSOR@columna,w,c
  1971  000C98  0F80               	addlw	128
  1972  000C9A  ECB6  F005         	call	i2_ENVIA_LCD_CMD
  1973                           
  1974                           ;LCD.c: 11:  }
  1975  000C9E  0012               	return	
  1976  000CA0                     i2l1436:
  1977  000CA0  0E02               	movlw	2
  1978  000CA2  1805               	xorwf	i2POS_CURSOR@fila,w,c
  1979  000CA4  A4D8               	btfss	status,2,c
  1980  000CA6  0012               	return	
  1981                           
  1982                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1983  000CA8  5004               	movf	i2POS_CURSOR@columna,w,c
  1984  000CAA  0FC0               	addlw	192
  1985  000CAC  ECB6  F005         	call	i2_ENVIA_LCD_CMD
  1986  000CB0  0012               	return		;funcret
  1987  000CB2                     __end_ofi2_POS_CURSOR:
  1988                           	opt callstack 0
  1989                           
  1990 ;; *************** function i2_ENVIA_LCD_CMD *****************
  1991 ;; Defined at:
  1992 ;;		line 104 in file "LCD.c"
  1993 ;; Parameters:    Size  Location     Type
  1994 ;;  dato            1    wreg     unsigned char 
  1995 ;; Auto vars:     Size  Location     Type
  1996 ;;  dato            1    1[COMRAM] unsigned char 
  1997 ;;  ENVIA_LCD_CM    1    2[COMRAM] unsigned char 
  1998 ;; Return value:  Size  Location     Type
  1999 ;;                  1    wreg      void 
  2000 ;; Registers used:
  2001 ;;		wreg, status,2, status,0, cstack
  2002 ;; Tracked objects:
  2003 ;;		On entry : 0/0
  2004 ;;		On exit  : 0/0
  2005 ;;		Unchanged: 0/0
  2006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2007 ;;      Params:         0       0       0       0       0       0       0       0       0
  2008 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2009 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2010 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2011 ;;Total ram usage:        2 bytes
  2012 ;; Hardware stack levels used:    1
  2013 ;; Hardware stack levels required when called:    1
  2014 ;; This function calls:
  2015 ;;		i2_ENVIA_NIBBLE
  2016 ;;		i2_LEER_LCD
  2017 ;; This function is called by:
  2018 ;;		i2_POS_CURSOR
  2019 ;; This function uses a non-reentrant model
  2020 ;;
  2021                           
  2022                           	psect	text19
  2023  000B6C                     __ptext19:
  2024                           	opt callstack 0
  2025  000B6C                     i2_ENVIA_LCD_CMD:
  2026                           	opt callstack 20
  2027                           
  2028                           ;incstack = 0
  2029                           ;i2ENVIA_LCD_CMD@dato stored from wreg
  2030  000B6C  6E02               	movwf	i2ENVIA_LCD_CMD@dato,c
  2031                           
  2032                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  2033  000B6E  908C               	bcf	3980,0,c	;volatile
  2034                           
  2035                           ;LCD.c: 108:  LEER_LCD();
  2036  000B70  ECC5  F004         	call	i2_LEER_LCD	;wreg free
  2037                           
  2038                           ;LCD.c: 109:  TRISD = 0b00000000;
  2039  000B74  0E00               	movlw	0
  2040  000B76  6E95               	movwf	3989,c	;volatile
  2041                           
  2042                           ;LCD.c: 111:         _delay(1200);
  2043  000B78  0EF0               	movlw	240
  2044  000B7A                     i2u58_47:
  2045  000B7A  D000               	nop2	
  2046  000B7C  2EE8               	decfsz	wreg,f,c
  2047  000B7E  D7FD               	bra	i2u58_47
  2048                           
  2049                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  2050  000B80  928C               	bcf	3980,1,c	;volatile
  2051                           
  2052                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  2053  000B82  948C               	bcf	3980,2,c	;volatile
  2054                           
  2055                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  2056  000B84  908C               	bcf	3980,0,c	;volatile
  2057                           
  2058                           ;LCD.c: 115:  aux = dato & 0xF0;
  2059  000B86  5002               	movf	i2ENVIA_LCD_CMD@dato,w,c
  2060  000B88  0BF0               	andlw	240
  2061  000B8A  6E03               	movwf	i2ENVIA_LCD_CMD@aux,c
  2062                           
  2063                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  2064  000B8C  5003               	movf	i2ENVIA_LCD_CMD@aux,w,c
  2065  000B8E  EC83  F006         	call	i2_ENVIA_NIBBLE
  2066                           
  2067                           ;LCD.c: 117:  aux = dato<<4;
  2068  000B92  3802               	swapf	i2ENVIA_LCD_CMD@dato,w,c
  2069  000B94  0BF0               	andlw	240
  2070  000B96  6E03               	movwf	i2ENVIA_LCD_CMD@aux,c
  2071                           
  2072                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  2073  000B98  5003               	movf	i2ENVIA_LCD_CMD@aux,w,c
  2074  000B9A  EC83  F006         	call	i2_ENVIA_NIBBLE
  2075  000B9E  0012               	return		;funcret
  2076  000BA0                     __end_ofi2_ENVIA_LCD_CMD:
  2077                           	opt callstack 0
  2078                           
  2079 ;; *************** function i2_ESCRIBE_MENSAJE *****************
  2080 ;; Defined at:
  2081 ;;		line 41 in file "LCD.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  2084 ;;		 -> STR_3(16), STR_2(16), STR_1(17), 
  2085 ;;  tam             1    5[COMRAM] unsigned char 
  2086 ;; Auto vars:     Size  Location     Type
  2087 ;;  ESCRIBE_MENS    1    8[COMRAM] unsigned char 
  2088 ;; Return value:  Size  Location     Type
  2089 ;;                  1    wreg      void 
  2090 ;; Registers used:
  2091 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2092 ;; Tracked objects:
  2093 ;;		On entry : 0/0
  2094 ;;		On exit  : 0/0
  2095 ;;		Unchanged: 0/0
  2096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2097 ;;      Params:         3       0       0       0       0       0       0       0       0
  2098 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2099 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2100 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2101 ;;Total ram usage:        6 bytes
  2102 ;; Hardware stack levels used:    1
  2103 ;; Hardware stack levels required when called:    2
  2104 ;; This function calls:
  2105 ;;		i2_ENVIA_CHAR
  2106 ;; This function is called by:
  2107 ;;		_Int0
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text20
  2112  000C38                     __ptext20:
  2113                           	opt callstack 0
  2114  000C38                     i2_ESCRIBE_MENSAJE:
  2115                           	opt callstack 20
  2116                           
  2117                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2118                           
  2119                           ;incstack = 0
  2120  000C38  0E00               	movlw	0
  2121  000C3A  6E09               	movwf	i2ESCRIBE_MENSAJE@i,c
  2122                           
  2123                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2124  000C3C  0E00               	movlw	0
  2125  000C3E  6E09               	movwf	i2ESCRIBE_MENSAJE@i,c
  2126  000C40  D00F               	goto	i2l1454
  2127  000C42                     i2l1450:
  2128                           
  2129                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2130  000C42  5009               	movf	i2ESCRIBE_MENSAJE@i,w,c
  2131  000C44  2404               	addwf	i2ESCRIBE_MENSAJE@cadena,w,c
  2132  000C46  6E07               	movwf	??i2_ESCRIBE_MENSAJE& (0+255),c
  2133  000C48  0E00               	movlw	0
  2134  000C4A  2005               	addwfc	i2ESCRIBE_MENSAJE@cadena+1,w,c
  2135  000C4C  6E08               	movwf	(??i2_ESCRIBE_MENSAJE+1)& (0+255),c
  2136  000C4E  C007  FFF6         	movff	??i2_ESCRIBE_MENSAJE,tblptrl
  2137  000C52  C008  FFF7         	movff	??i2_ESCRIBE_MENSAJE+1,tblptrh
  2138  000C56                     	if	0	;tblptru may be non-zero
  2139  000C56                     	endif
  2140  000C56                     	if	0	;tblptru may be non-zero
  2141  000C56                     	endif
  2142  000C56  0008               	tblrd		*
  2143  000C58  50F5               	movf	tablat,w,c
  2144  000C5A  ECD0  F005         	call	i2_ENVIA_CHAR
  2145                           
  2146                           ;LCD.c: 47:  }
  2147  000C5E  2A09               	incf	i2ESCRIBE_MENSAJE@i,f,c
  2148  000C60                     i2l1454:
  2149  000C60  5006               	movf	i2ESCRIBE_MENSAJE@tam,w,c
  2150  000C62  5C09               	subwf	i2ESCRIBE_MENSAJE@i,w,c
  2151  000C64  B0D8               	btfsc	status,0,c
  2152  000C66  0012               	return	
  2153  000C68  D7EC               	goto	i2l1450
  2154  000C6A                     __end_ofi2_ESCRIBE_MENSAJE:
  2155                           	opt callstack 0
  2156                           
  2157 ;; *************** function i2_ENVIA_CHAR *****************
  2158 ;; Defined at:
  2159 ;;		line 50 in file "LCD.c"
  2160 ;; Parameters:    Size  Location     Type
  2161 ;;  dato            1    wreg     unsigned char 
  2162 ;; Auto vars:     Size  Location     Type
  2163 ;;  dato            1    1[COMRAM] unsigned char 
  2164 ;;  ENVIA_CHAR      1    2[COMRAM] unsigned char 
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      void 
  2167 ;; Registers used:
  2168 ;;		wreg, status,2, status,0, cstack
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2174 ;;      Params:         0       0       0       0       0       0       0       0       0
  2175 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2176 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2177 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2178 ;;Total ram usage:        2 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; Hardware stack levels required when called:    1
  2181 ;; This function calls:
  2182 ;;		i2_ENVIA_NIBBLE
  2183 ;;		i2_LEER_LCD
  2184 ;; This function is called by:
  2185 ;;		i2_ESCRIBE_MENSAJE
  2186 ;; This function uses a non-reentrant model
  2187 ;;
  2188                           
  2189                           	psect	text21
  2190  000BA0                     __ptext21:
  2191                           	opt callstack 0
  2192  000BA0                     i2_ENVIA_CHAR:
  2193                           	opt callstack 20
  2194                           
  2195                           ;incstack = 0
  2196                           ;i2ENVIA_CHAR@dato stored from wreg
  2197  000BA0  6E02               	movwf	i2ENVIA_CHAR@dato,c
  2198                           
  2199                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2200  000BA2  808C               	bsf	3980,0,c	;volatile
  2201                           
  2202                           ;LCD.c: 54:  LEER_LCD();
  2203  000BA4  ECC5  F004         	call	i2_LEER_LCD	;wreg free
  2204                           
  2205                           ;LCD.c: 55:  TRISD = 0x00;
  2206  000BA8  0E00               	movlw	0
  2207  000BAA  6E95               	movwf	3989,c	;volatile
  2208                           
  2209                           ;LCD.c: 56:         _delay(1200);
  2210  000BAC  0EF0               	movlw	240
  2211  000BAE                     i2u59_47:
  2212  000BAE  D000               	nop2	
  2213  000BB0  2EE8               	decfsz	wreg,f,c
  2214  000BB2  D7FD               	bra	i2u59_47
  2215                           
  2216                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  2217  000BB4  928C               	bcf	3980,1,c	;volatile
  2218                           
  2219                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  2220  000BB6  948C               	bcf	3980,2,c	;volatile
  2221                           
  2222                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  2223  000BB8  808C               	bsf	3980,0,c	;volatile
  2224                           
  2225                           ;LCD.c: 61:  aux = dato & 0xF0;
  2226  000BBA  5002               	movf	i2ENVIA_CHAR@dato,w,c
  2227  000BBC  0BF0               	andlw	240
  2228  000BBE  6E03               	movwf	i2ENVIA_CHAR@aux,c
  2229                           
  2230                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  2231  000BC0  5003               	movf	i2ENVIA_CHAR@aux,w,c
  2232  000BC2  EC83  F006         	call	i2_ENVIA_NIBBLE
  2233                           
  2234                           ;LCD.c: 63:  aux = dato << 4;
  2235  000BC6  3802               	swapf	i2ENVIA_CHAR@dato,w,c
  2236  000BC8  0BF0               	andlw	240
  2237  000BCA  6E03               	movwf	i2ENVIA_CHAR@aux,c
  2238                           
  2239                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  2240  000BCC  5003               	movf	i2ENVIA_CHAR@aux,w,c
  2241  000BCE  EC83  F006         	call	i2_ENVIA_NIBBLE
  2242  000BD2  0012               	return		;funcret
  2243  000BD4                     __end_ofi2_ENVIA_CHAR:
  2244                           	opt callstack 0
  2245                           
  2246 ;; *************** function i2_LEER_LCD *****************
  2247 ;; Defined at:
  2248 ;;		line 121 in file "LCD.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;		None
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  LEER_LCD        1    0[COMRAM] unsigned char 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      void 
  2255 ;; Registers used:
  2256 ;;		wreg, status,2, status,0
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2262 ;;      Params:         0       0       0       0       0       0       0       0       0
  2263 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2264 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2265 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2266 ;;Total ram usage:        1 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; This function calls:
  2269 ;;		Nothing
  2270 ;; This function is called by:
  2271 ;;		i2_ENVIA_CHAR
  2272 ;;		i2_ENVIA_LCD_CMD
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text22
  2277  00098A                     __ptext22:
  2278                           	opt callstack 0
  2279  00098A                     i2_LEER_LCD:
  2280                           	opt callstack 20
  2281                           
  2282                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  2283                           
  2284                           ;incstack = 0
  2285  00098A  0EF8               	movlw	248
  2286  00098C  6E95               	movwf	3989,c	;volatile
  2287                           
  2288                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  2289  00098E  908C               	bcf	3980,0,c	;volatile
  2290                           
  2291                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  2292  000990  828C               	bsf	3980,1,c	;volatile
  2293                           
  2294                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  2295  000992  848C               	bsf	3980,2,c	;volatile
  2296                           
  2297                           ;LCD.c: 128:         _delay(1200);
  2298  000994  0EF0               	movlw	240
  2299  000996                     i2u60_47:
  2300  000996  D000               	nop2	
  2301  000998  2EE8               	decfsz	wreg,f,c
  2302  00099A  D7FD               	bra	i2u60_47
  2303                           
  2304                           ;LCD.c: 130:  aux = PORTD;
  2305  00099C  CF83 F001          	movff	3971,i2LEER_LCD@aux	;volatile
  2306                           
  2307                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  2308  0009A0  948C               	bcf	3980,2,c	;volatile
  2309                           
  2310                           ;LCD.c: 132:         _delay(1200);
  2311  0009A2  0EF0               	movlw	240
  2312  0009A4                     i2u61_47:
  2313  0009A4  D000               	nop2	
  2314  0009A6  2EE8               	decfsz	wreg,f,c
  2315  0009A8  D7FD               	bra	i2u61_47
  2316                           
  2317                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  2318  0009AA  848C               	bsf	3980,2,c	;volatile
  2319                           
  2320                           ;LCD.c: 135:         _delay(1200);
  2321  0009AC  0EF0               	movlw	240
  2322  0009AE                     i2u62_47:
  2323  0009AE  D000               	nop2	
  2324  0009B0  2EE8               	decfsz	wreg,f,c
  2325  0009B2  D7FD               	bra	i2u62_47
  2326  0009B4                     i2l1310:
  2327                           
  2328                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  2329  0009B4  948C               	bcf	3980,2,c	;volatile
  2330                           
  2331                           ;LCD.c: 138:  aux = aux & 0x80;
  2332  0009B6  5001               	movf	i2LEER_LCD@aux,w,c
  2333  0009B8  0B80               	andlw	128
  2334  0009BA  6E01               	movwf	i2LEER_LCD@aux,c
  2335                           
  2336                           ;LCD.c: 139:  while(aux == 0x80)
  2337  0009BC  D012               	goto	i2l1326
  2338  0009BE                     i2l117:
  2339                           
  2340                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  2341  0009BE  848C               	bsf	3980,2,c	;volatile
  2342                           
  2343                           ;LCD.c: 142:             _delay(1200);
  2344  0009C0  0EF0               	movlw	240
  2345  0009C2                     i2u63_47:
  2346  0009C2  D000               	nop2	
  2347  0009C4  2EE8               	decfsz	wreg,f,c
  2348  0009C6  D7FD               	bra	i2u63_47
  2349                           
  2350                           ;LCD.c: 143:             aux = PORTD;
  2351  0009C8  CF83 F001          	movff	3971,i2LEER_LCD@aux	;volatile
  2352                           
  2353                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  2354  0009CC  948C               	bcf	3980,2,c	;volatile
  2355                           
  2356                           ;LCD.c: 145:             _delay(1200);
  2357  0009CE  0EF0               	movlw	240
  2358  0009D0                     i2u64_47:
  2359  0009D0  D000               	nop2	
  2360  0009D2  2EE8               	decfsz	wreg,f,c
  2361  0009D4  D7FD               	bra	i2u64_47
  2362                           
  2363                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  2364  0009D6  848C               	bsf	3980,2,c	;volatile
  2365                           
  2366                           ;LCD.c: 147:             _delay(1200);
  2367  0009D8  0EF0               	movlw	240
  2368  0009DA                     i2u65_47:
  2369  0009DA  D000               	nop2	
  2370  0009DC  2EE8               	decfsz	wreg,f,c
  2371  0009DE  D7FD               	bra	i2u65_47
  2372  0009E0  D7E9               	goto	i2l1310
  2373  0009E2                     i2l1326:
  2374                           
  2375                           ;LCD.c: 139:  while(aux == 0x80)
  2376  0009E2  0E80               	movlw	128
  2377  0009E4  1801               	xorwf	i2LEER_LCD@aux,w,c
  2378  0009E6  A4D8               	btfss	status,2,c
  2379  0009E8  0012               	return	
  2380  0009EA  D7E9               	goto	i2l117
  2381  0009EC                     __end_ofi2_LEER_LCD:
  2382                           	opt callstack 0
  2383                           
  2384 ;; *************** function i2_ENVIA_NIBBLE *****************
  2385 ;; Defined at:
  2386 ;;		line 93 in file "LCD.c"
  2387 ;; Parameters:    Size  Location     Type
  2388 ;;  dato            1    wreg     unsigned char 
  2389 ;; Auto vars:     Size  Location     Type
  2390 ;;  dato            1    0[COMRAM] unsigned char 
  2391 ;; Return value:  Size  Location     Type
  2392 ;;                  1    wreg      void 
  2393 ;; Registers used:
  2394 ;;		wreg, status,2, status,0
  2395 ;; Tracked objects:
  2396 ;;		On entry : 0/0
  2397 ;;		On exit  : 0/0
  2398 ;;		Unchanged: 0/0
  2399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2400 ;;      Params:         0       0       0       0       0       0       0       0       0
  2401 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2402 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2403 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2404 ;;Total ram usage:        1 bytes
  2405 ;; Hardware stack levels used:    1
  2406 ;; This function calls:
  2407 ;;		Nothing
  2408 ;; This function is called by:
  2409 ;;		i2_ENVIA_CHAR
  2410 ;;		i2_ENVIA_LCD_CMD
  2411 ;; This function uses a non-reentrant model
  2412 ;;
  2413                           
  2414                           	psect	text23
  2415  000D06                     __ptext23:
  2416                           	opt callstack 0
  2417  000D06                     i2_ENVIA_NIBBLE:
  2418                           	opt callstack 20
  2419                           
  2420                           ;incstack = 0
  2421                           ;i2ENVIA_NIBBLE@dato stored from wreg
  2422  000D06  6E01               	movwf	i2ENVIA_NIBBLE@dato,c
  2423                           
  2424                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  2425  000D08  0E0F               	movlw	15
  2426  000D0A  168C               	andwf	3980,f,c	;volatile
  2427                           
  2428                           ;LCD.c: 96:  dato &= 0xF0;
  2429  000D0C  0EF0               	movlw	240
  2430  000D0E  1601               	andwf	i2ENVIA_NIBBLE@dato,f,c
  2431                           
  2432                           ;LCD.c: 97:  LATD|= dato;
  2433  000D10  5001               	movf	i2ENVIA_NIBBLE@dato,w,c	;volatile
  2434  000D12  128C               	iorwf	3980,f,c	;volatile
  2435                           
  2436                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  2437  000D14  848C               	bsf	3980,2,c	;volatile
  2438                           
  2439                           ;LCD.c: 100:         _delay(1200);
  2440  000D16  0EF0               	movlw	240
  2441  000D18                     i2u66_47:
  2442  000D18  D000               	nop2	
  2443  000D1A  2EE8               	decfsz	wreg,f,c
  2444  000D1C  D7FD               	bra	i2u66_47
  2445                           
  2446                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  2447  000D1E  948C               	bcf	3980,2,c	;volatile
  2448  000D20  0012               	return		;funcret
  2449  000D22                     __end_ofi2_ENVIA_NIBBLE:
  2450                           	opt callstack 0
  2451                           
  2452                           	psect	rparam
  2453  0000                     
  2454                           	psect	temp
  2455  00002A                     btemp:
  2456                           	opt callstack 0
  2457  00002A                     	ds	1
  2458  0000                     int$flags	set	btemp
  2459  0000                     wtemp8	set	btemp+1
  2460  0000                     ttemp5	set	btemp+1
  2461  0000                     ttemp6	set	btemp+4
  2462  0000                     ttemp7	set	btemp+8
  2463                           tosu	equ	0xFFF
  2464                           tosh	equ	0xFFE
  2465                           tosl	equ	0xFFD
  2466                           stkptr	equ	0xFFC
  2467                           pclatu	equ	0xFFB
  2468                           pclath	equ	0xFFA
  2469                           pcl	equ	0xFF9
  2470                           tblptru	equ	0xFF8
  2471                           tblptrh	equ	0xFF7
  2472                           tblptrl	equ	0xFF6
  2473                           tablat	equ	0xFF5
  2474                           prodh	equ	0xFF4
  2475                           prodl	equ	0xFF3
  2476                           indf0	equ	0xFEF
  2477                           postinc0	equ	0xFEE
  2478                           postdec0	equ	0xFED
  2479                           preinc0	equ	0xFEC
  2480                           plusw0	equ	0xFEB
  2481                           fsr0h	equ	0xFEA
  2482                           fsr0l	equ	0xFE9
  2483                           wreg	equ	0xFE8
  2484                           indf1	equ	0xFE7
  2485                           postinc1	equ	0xFE6
  2486                           postdec1	equ	0xFE5
  2487                           preinc1	equ	0xFE4
  2488                           plusw1	equ	0xFE3
  2489                           fsr1h	equ	0xFE2
  2490                           fsr1l	equ	0xFE1
  2491                           bsr	equ	0xFE0
  2492                           indf2	equ	0xFDF
  2493                           postinc2	equ	0xFDE
  2494                           postdec2	equ	0xFDD
  2495                           preinc2	equ	0xFDC
  2496                           plusw2	equ	0xFDB
  2497                           fsr2h	equ	0xFDA
  2498                           fsr2l	equ	0xFD9
  2499                           status	equ	0xFD8


Data Sizes:
    Strings     49
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      41
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _Int1 in COMRAM

    _Int1->i1_ESCRIBE_MENSAJE
    i1_ESCRIBE_MENSAJE->i1_ENVIA_CHAR
    i1_ENVIA_CHAR->i1_ENVIA_NIBBLE
    i1_ENVIA_CHAR->i1_LEER_LCD
    _POS_CURSOR->i1_ENVIA_LCD_CMD
    i1_ENVIA_LCD_CMD->i1_ENVIA_NIBBLE
    i1_ENVIA_LCD_CMD->i1_LEER_LCD

Critical Paths under _Int0 in COMRAM

    _Int0->i2_ESCRIBE_MENSAJE
    i2_POS_CURSOR->i2_ENVIA_LCD_CMD
    i2_ENVIA_LCD_CMD->i2_ENVIA_NIBBLE
    i2_ENVIA_LCD_CMD->i2_LEER_LCD
    i2_ESCRIBE_MENSAJE->i2_ENVIA_CHAR
    i2_ENVIA_CHAR->i2_ENVIA_NIBBLE
    i2_ENVIA_CHAR->i2_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _Int1 in BANK0

    None.

Critical Paths under _Int0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Int1 in BANK1

    None.

Critical Paths under _Int0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Int1 in BANK2

    None.

Critical Paths under _Int0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Int1 in BANK3

    None.

Critical Paths under _Int0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Int1 in BANK4

    None.

Critical Paths under _Int0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Int1 in BANK5

    None.

Critical Paths under _Int0 in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Int1 in BANK6

    None.

Critical Paths under _Int0 in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Int1 in BANK7

    None.

Critical Paths under _Int0 in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1088
                                             38 COMRAM     2     2      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                    _ESCRIBE_MENSAJE
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (1) _LCD_CONFIG                                           1     1      0     135
                                             32 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     563
                                             32 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                             30 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _CURSOR_ONOFF                                         1     1      0     150
                                             32 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     120
                                             30 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      45
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _ENVIA_NIBBLE                                         1     1      0      15
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _Int1                                                 7     7      0     723
                                             22 COMRAM     7     7      0
                         _POS_CURSOR
                  i1_ESCRIBE_MENSAJE
 ---------------------------------------------------------------------------------
 (5) i1_ESCRIBE_MENSAJE                                    6     3      3     326
                                             16 COMRAM     6     3      3
                       i1_ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (6) i1_ENVIA_CHAR                                         2     2      0     183
                                             14 COMRAM     2     2      0
                     i1_ENVIA_NIBBLE
                         i1_LEER_LCD
 ---------------------------------------------------------------------------------
 (5) _POS_CURSOR                                           2     1      1     397
                                             16 COMRAM     2     1      1
                    i1_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (6) i1_ENVIA_LCD_CMD                                      2     2      0     183
                                             14 COMRAM     2     2      0
                     i1_ENVIA_NIBBLE
                         i1_LEER_LCD
 ---------------------------------------------------------------------------------
 (7) i1_LEER_LCD                                           1     1      0      70
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (7) i1_ENVIA_NIBBLE                                       1     1      0      23
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _Int0                                                 4     4      0     623
                                              9 COMRAM     4     4      0
                  i2_ESCRIBE_MENSAJE
                       i2_POS_CURSOR
 ---------------------------------------------------------------------------------
 (9) i2_POS_CURSOR                                         2     1      1     297
                                              3 COMRAM     2     1      1
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (10) i2_ENVIA_LCD_CMD                                     2     2      0     183
                                              1 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (9) i2_ESCRIBE_MENSAJE                                    6     3      3     326
                                              3 COMRAM     6     3      3
                       i2_ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (10) i2_ENVIA_CHAR                                        2     2      0     183
                                              1 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (11) i2_LEER_LCD                                          1     1      0      70
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (11) i2_ENVIA_NIBBLE                                      1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _CURSOR_HOME
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _CURSOR_ONOFF
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _LCD_CONFIG
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
     _ENVIA_NIBBLE

 _Int1 (ROOT)
   _POS_CURSOR
     i1_ENVIA_LCD_CMD
       i1_ENVIA_NIBBLE
       i1_LEER_LCD
   i1_ESCRIBE_MENSAJE
     i1_ENVIA_CHAR
       i1_ENVIA_NIBBLE
       i1_LEER_LCD

 _Int0 (ROOT)
   i2_ESCRIBE_MENSAJE
     i2_ENVIA_CHAR
       i2_ENVIA_NIBBLE
       i2_LEER_LCD
   i2_POS_CURSOR
     i2_ENVIA_LCD_CMD
       i2_ENVIA_NIBBLE
       i2_LEER_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     28      29       1       43.6%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      29      20        0.0%
DATA                 0      0      29       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue May 28 18:35:59 2019

                        l36 08C2  __size_ofi2_ESCRIBE_MENSAJE 0032                          bsr 000FE0  
        __CFG_FOSC$XTPLL_XT 000000               ENVIA_CHAR@aux 0020                         l117 08FA  
                       l820 08F0                         l836 091E                         u407 0AAA  
                       u417 0ADE                         u337 0844                         u427 08D2  
                       u347 085C                         u437 08E0                         u357 08A4  
                       u447 08EA                         u367 08B6                         u457 08FE  
                       u377 09FC                         u467 090C                         u387 0A0A  
                       u477 0916                         u397 0A1A                         u487 0CE0  
              __CFG_BOR$OFF 000000                 LEER_LCD@aux 001E                         wreg 000FE8  
          ??i2_ENVIA_NIBBLE 0001                ?_CURSOR_HOME 0001             i1_ENVIA_LCD_CMD 0B38  
            ??_ENVIA_NIBBLE 001E                __CFG_LVP$OFF 000000                 ?i1_LEER_LCD 0001  
            ENVIA_CHAR@dato 001F                __CFG_WDT$OFF 000000                        l1422 0BFC  
                      l1098 0CC0                        l1418 0BDE                        l1492 0896  
                      STR_1 0801                        STR_2 0812                        STR_3 0822  
                      _LATD 000F8C                __CFG_PWRT$ON 000000                        _Int0 0008  
                      _Int1 0018                 ?i2_LEER_LCD 0001                        _main 0834  
                      btemp 002A           ??i2_ENVIA_LCD_CMD 0002                        start 0072  
             ?_CURSOR_ONOFF 0001               __CFG_MCLRE$ON 000000                ___param_bank 000000  
           ??_ENVIA_LCD_CMD 001F            __end_of_LEER_LCD 0928         __size_of_BORRAR_LCD 0008  
             __CFG_PLLDIV$1 000000                       ?_Int0 0001                       ?_Int1 0001  
            __CFG_CCP2MX$ON 000000                       ?_main 0001                       i1l117 095C  
                     i2l117 09BE                       _PORTD 000F83         __size_of_LCD_CONFIG 0060  
                     _TRISD 000F95          i2ESCRIBE_MENSAJE@i 0009         __size_of_ENVIA_CHAR 0034  
   i2ESCRIBE_MENSAJE@cadena 0004                 ?_POS_CURSOR 0011                       tablat 000FF5  
                     ttemp5 002B                       ttemp6 002E                       ttemp7 0032  
                     status 000FD8                       wtemp8 002B              ??_CURSOR_ONOFF 0021  
              __end_of_Int0 0A9C                __end_of_Int1 0072             __initialization 0D22  
              __end_of_main 08C6         __size_ofi1_LEER_LCD 0062             _ESCRIBE_MENSAJE 0BD4  
                    ??_Int0 000A                      ??_Int1 0017     __end_ofi1_ENVIA_LCD_CMD 0B6C  
                    ??_main 0027         __size_ofi2_LEER_LCD 0062               __activetblptr 000001  
             ?i1_ENVIA_CHAR 0001             i1ENVIA_CHAR@aux 0010                      i1l1272 0952  
                    i1l1442 0C10                      i1l1428 0C7C                      i1l1446 0C2E  
                    i1l1288 0980                      i2l1310 09B4                      i2l1326 09E2  
                    i2l1450 0C42                      i2l1436 0CA0                      i2l1454 0C60  
             ?i2_ENVIA_CHAR 0001        __end_of_ENVIA_NIBBLE 0CEA                      _estado 0029  
       __size_of_POS_CURSOR 0024              ??i1_ENVIA_CHAR 000F                __mediumconst 0000  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
              ??_BORRAR_LCD 0021        __size_of_CURSOR_HOME 0008                   ?_LEER_LCD 0001  
                __accesstop 0060     __end_of__initialization 0D24             __CFG_PBADEN$OFF 000000  
              ??_LCD_CONFIG 0021              ??i2_ENVIA_CHAR 0002               ___rparam_used 000001  
              ??_ENVIA_CHAR 001F     __end_of_ESCRIBE_MENSAJE 0C06              __pcstackCOMRAM 0001  
        __end_of_BORRAR_LCD 0D46            ?i1_ENVIA_LCD_CMD 0001         i2ENVIA_LCD_CMD@dato 0002  
          ENVIA_LCD_CMD@aux 0020        __end_of_CURSOR_ONOFF 0CCE          __end_of_LCD_CONFIG 0A4C  
        __end_of_ENVIA_CHAR 0AD0             i2_ENVIA_LCD_CMD 0B6C                ??i1_LEER_LCD 000E  
             ?i2_POS_CURSOR 0004                ??i2_LEER_LCD 0001                  ??_LEER_LCD 001E  
          ENVIA_NIBBLE@dato 001E     __size_ofi1_ENVIA_NIBBLE 001C            i1ENVIA_CHAR@dato 000F  
        __end_ofi1_LEER_LCD 098A          __end_ofi2_LEER_LCD 09EC                     i1u50_27 0B46  
                   i1u51_27 0934                     i1u52_27 0942                     i1u53_27 094C  
                   i1u54_27 0960                     i2u31_40 0A6A                     i1u55_27 096E  
                   i2u32_40 0A6C                     i1u56_27 0978                     i1u57_27 0CFC  
                   i1u49_27 0B12                     i2u60_47 0996                     i2u61_47 09A4  
                   i2u62_47 09AE                     i2u63_47 09C2                     i2u64_47 09D0  
                   i2u65_47 09DA                     i2u66_47 0D18                     i2u58_47 0B7A  
                   i2u59_47 0BAE              ??i2_POS_CURSOR 0005                ??_POS_CURSOR 0012  
      i2ESCRIBE_MENSAJE@tam 0006        __end_ofi1_ENVIA_CHAR 0B38       __size_of_ENVIA_NIBBLE 001C  
                   __Hparam 0000                     __Lparam 0000            ?_ESCRIBE_MENSAJE 0021  
              __psmallconst 0800       __end_of_ENVIA_LCD_CMD 0B04                     __pcinit 0D22  
        __end_of_POS_CURSOR 0C8E                     __ramtop 0800                     __ptext0 0834  
                   __ptext1 09EC                     __ptext2 0BD4                     __ptext3 0A9C  
                   __ptext4 0CB2                     __ptext5 0D36                     __ptext6 0D3E  
                   __ptext7 0AD0                     __ptext8 08C6                     __ptext9 0CCE  
   __end_ofi2_ENVIA_LCD_CMD 0BA0        __end_ofi2_ENVIA_CHAR 0BD4             i2ENVIA_CHAR@aux 0003  
            __pintcode_body 0A4C                _ENVIA_NIBBLE 0CCE        end_of_initialization 0D24  
                   int_func 0A4C     __size_ofi2_ENVIA_NIBBLE 001C          i1ENVIA_LCD_CMD@aux 0010  
     __size_of_CURSOR_ONOFF 001C                   _TRISDbits 000F95                   _TRISEbits 000F96  
        i1ENVIA_NIBBLE@dato 000E              i1_ENVIA_NIBBLE 0CEA           __size_of_LEER_LCD 0062  
              _CURSOR_ONOFF 0CB2          CURSOR_ONOFF@estado 0021        __end_ofi2_POS_CURSOR 0CB2  
          ?i2_ENVIA_LCD_CMD 0001               ??_CURSOR_HOME 0021         start_initialization 0D22  
             i1LEER_LCD@aux 000E      __end_ofi1_ENVIA_NIBBLE 0D06       __size_ofi1_ENVIA_CHAR 0034  
         ENVIA_LCD_CMD@dato 001F            i2POS_CURSOR@fila 0005       __size_ofi2_ENVIA_CHAR 0034  
              i1_ENVIA_CHAR 0B04                 __pbssCOMRAM 0029               i2LEER_LCD@aux 0001  
  __size_ofi1_ENVIA_LCD_CMD 0034             ?i1_ENVIA_NIBBLE 0001          i2ENVIA_LCD_CMD@aux 0003  
       __end_of_CURSOR_HOME 0D3E              i2_ENVIA_NIBBLE 0D06                i2_ENVIA_CHAR 0BA0  
        i2ENVIA_NIBBLE@dato 0001                   __pintcode 0008                 __pintcodelo 0018  
               __smallconst 0800         i2POS_CURSOR@columna 0004      __end_ofi2_ENVIA_NIBBLE 0D22  
                  _LEER_LCD 08C6                    _LATDbits 000F8C                    _LATEbits 000F8D  
      i1ESCRIBE_MENSAJE@tam 0013       __size_ofi2_POS_CURSOR 0024                    _RCONbits 000FD0  
         i1_ESCRIBE_MENSAJE 0C06          ?i1_ESCRIBE_MENSAJE 0011            ESCRIBE_MENSAJE@i 0026  
            POS_CURSOR@fila 0012    __size_of_ESCRIBE_MENSAJE 0032         ??i1_ESCRIBE_MENSAJE 0014  
               _CURSOR_HOME 0D36     i1ESCRIBE_MENSAJE@cadena 0011                 _INTCON3bits 000FF0  
              i2_POS_CURSOR 0C8E             ?i2_ENVIA_NIBBLE 0001      __size_of_ENVIA_LCD_CMD 0034  
         ??i1_ENVIA_LCD_CMD 000F                    __Hrparam 0000   __end_ofi1_ESCRIBE_MENSAJE 0C38  
                  __Lrparam 0000                __Lsmallconst 0800           i2_ESCRIBE_MENSAJE 0C38  
        ?i2_ESCRIBE_MENSAJE 0004                    __ptext11 0C06                    __ptext20 0C38  
                  __ptext12 0B04                    __ptext21 0BA0                    __ptext13 0C6A  
                  __ptext22 098A                    __ptext14 0B38                    __ptext23 0D06  
                  __ptext15 0928                    __ptext16 0CEA                    __ptext18 0C8E  
                  __ptext19 0B6C                  _BORRAR_LCD 0D3E         ??i2_ESCRIBE_MENSAJE 0007  
             __size_of_Int0 0A94               __size_of_Int1 005A               __size_of_main 0092  
                _LCD_CONFIG 09EC                  _ENVIA_CHAR 0A9C                    int$flags 002A  
          i2ENVIA_CHAR@dato 0002   __end_ofi2_ESCRIBE_MENSAJE 0C6A               _ENVIA_LCD_CMD 0AD0  
     __CFG_CPUDIV$OSC1_PLL2 000000                  _INTCONbits 000FF2            ??i1_ENVIA_NIBBLE 000E  
         ??_ESCRIBE_MENSAJE 0024    __size_ofi2_ENVIA_LCD_CMD 0034                  i1_LEER_LCD 0928  
                  intlevel1 0000                    intlevel2 0000       ESCRIBE_MENSAJE@cadena 0021  
                i2_LEER_LCD 098A  __size_ofi1_ESCRIBE_MENSAJE 0032          i1ESCRIBE_MENSAJE@i 0016  
            ?_ENVIA_LCD_CMD 0001         i1ENVIA_LCD_CMD@dato 000F                 ?_BORRAR_LCD 0001  
             ?_ENVIA_NIBBLE 0001                  _POS_CURSOR 0C6A                 ?_LCD_CONFIG 0001  
        ESCRIBE_MENSAJE@tam 0023                 ?_ENVIA_CHAR 0001           POS_CURSOR@columna 0011  
