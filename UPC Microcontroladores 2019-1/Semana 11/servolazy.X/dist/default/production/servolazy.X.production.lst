

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed May 29 08:56:10 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    21  0000                     
    22                           ; Version 2.05
    23                           ; Generated 20/12/2018 GMT
    24                           ; 
    25                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC18F4550 Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     _PORTD	set	3971
    57  0000                     _LATD	set	3980
    58  0000                     _LATDbits	set	3980
    59  0000                     _LATEbits	set	3981
    60  0000                     _PORTBbits	set	3969
    61  0000                     _TRISEbits	set	3990
    62  0000                     _TRISD	set	3989
    63                           
    64                           	psect	smallconst
    65  000800                     __psmallconst:
    66                           	opt callstack 0
    67  000800  00                 	db	0
    68  000801                     STR_1:
    69  000801  55                 	db	85	;'U'
    70  000802  50                 	db	80	;'P'
    71  000803  43                 	db	67	;'C'
    72  000804  20                 	db	32
    73  000805  53                 	db	83	;'S'
    74  000806  65                 	db	101	;'e'
    75  000807  72                 	db	114	;'r'
    76  000808  76                 	db	118	;'v'
    77  000809  6F                 	db	111	;'o'
    78  00080A  20                 	db	32
    79  00080B  74                 	db	116	;'t'
    80  00080C  65                 	db	101	;'e'
    81  00080D  73                 	db	115	;'s'
    82  00080E  74                 	db	116	;'t'
    83  00080F  65                 	db	101	;'e'
    84  000810  72                 	db	114	;'r'
    85  000811  00                 	db	0
    86  000812                     STR_2:
    87  000812  53                 	db	83	;'S'
    88  000813  65                 	db	101	;'e'
    89  000814  72                 	db	114	;'r'
    90  000815  76                 	db	118	;'v'
    91  000816  6F                 	db	111	;'o'
    92  000817  3A                 	db	58	;':'
    93  000818  20                 	db	32
    94  000819  30                 	db	48	;'0'
    95  00081A  30                 	db	48	;'0'
    96  00081B  30                 	db	48	;'0'
    97  00081C  00                 	db	0
    98  00081D                     STR_4:
    99  00081D  53                 	db	83	;'S'
   100  00081E  65                 	db	101	;'e'
   101  00081F  72                 	db	114	;'r'
   102  000820  76                 	db	118	;'v'
   103  000821  6F                 	db	111	;'o'
   104  000822  3A                 	db	58	;':'
   105  000823  20                 	db	32
   106  000824  31                 	db	49	;'1'
   107  000825  38                 	db	56	;'8'
   108  000826  30                 	db	48	;'0'
   109  000827  00                 	db	0
   110  000828                     STR_3:
   111  000828  53                 	db	83	;'S'
   112  000829  65                 	db	101	;'e'
   113  00082A  72                 	db	114	;'r'
   114  00082B  76                 	db	118	;'v'
   115  00082C  6F                 	db	111	;'o'
   116  00082D  3A                 	db	58	;':'
   117  00082E  20                 	db	32
   118  00082F  30                 	db	48	;'0'
   119  000830  39                 	db	57	;'9'
   120  000831  30                 	db	48	;'0'
   121  000832  00                 	db	0
   122  000833                     STR_5:
   123  000833  53                 	db	83	;'S'
   124  000834  65                 	db	101	;'e'
   125  000835  72                 	db	114	;'r'
   126  000836  76                 	db	118	;'v'
   127  000837  6F                 	db	111	;'o'
   128  000838  3A                 	db	58	;':'
   129  000839  20                 	db	32
   130  00083A  30                 	db	48	;'0'
   131  00083B  34                 	db	52	;'4'
   132  00083C  35                 	db	53	;'5'
   133  00083D  00                 	db	0
   134                           
   135                           ; #config settings
   136  00083E  00                 	db	0	; dummy byte at the end
   137  0000                     
   138                           	psect	cinit
   139  000BD6                     __pcinit:
   140                           	opt callstack 0
   141  000BD6                     start_initialization:
   142                           	opt callstack 0
   143  000BD6                     __initialization:
   144                           	opt callstack 0
   145  000BD6                     end_of_initialization:
   146                           	opt callstack 0
   147  000BD6                     __end_of__initialization:
   148                           	opt callstack 0
   149  000BD6  0E00               	movlw	low (__Lsmallconst shr (0+16))
   150  000BD8  6EF8               	movwf	tblptru,c
   151  000BDA  0E08               	movlw	high __Lsmallconst
   152  000BDC  6EF7               	movwf	tblptrh,c
   153  000BDE  0100               	movlb	0
   154  000BE0  EF20  F004         	goto	_main	;jump to C main() function
   155                           
   156                           	psect	cstackCOMRAM
   157  000001                     __pcstackCOMRAM:
   158                           	opt callstack 0
   159  000001                     ENVIA_NIBBLE@dato:
   160                           	opt callstack 0
   161  000001                     LEER_LCD@aux:
   162                           	opt callstack 0
   163                           
   164                           ; 1 bytes @ 0x0
   165  000001                     	ds	1
   166  000002                     ENVIA_CHAR@dato:
   167                           	opt callstack 0
   168  000002                     ENVIA_LCD_CMD@dato:
   169                           	opt callstack 0
   170                           
   171                           ; 1 bytes @ 0x1
   172  000002                     	ds	1
   173  000003                     ENVIA_CHAR@aux:
   174                           	opt callstack 0
   175  000003                     ENVIA_LCD_CMD@aux:
   176                           	opt callstack 0
   177                           
   178                           ; 1 bytes @ 0x2
   179  000003                     	ds	1
   180  000004                     ??_LCD_CONFIG:
   181  000004                     POS_CURSOR@columna:
   182                           	opt callstack 0
   183  000004                     CURSOR_ONOFF@estado:
   184                           	opt callstack 0
   185  000004                     ESCRIBE_MENSAJE@cadena:
   186                           	opt callstack 0
   187                           
   188                           ; 2 bytes @ 0x3
   189  000004                     	ds	1
   190  000005                     POS_CURSOR@fila:
   191                           	opt callstack 0
   192                           
   193                           ; 1 bytes @ 0x4
   194  000005                     	ds	1
   195  000006                     ESCRIBE_MENSAJE@tam:
   196                           	opt callstack 0
   197                           
   198                           ; 1 bytes @ 0x5
   199  000006                     	ds	1
   200  000007                     ??_ESCRIBE_MENSAJE:
   201                           
   202                           ; 1 bytes @ 0x6
   203  000007                     	ds	2
   204  000009                     ESCRIBE_MENSAJE@i:
   205                           	opt callstack 0
   206                           
   207                           ; 1 bytes @ 0x8
   208  000009                     	ds	1
   209  00000A                     ??_main:
   210                           
   211                           ; 1 bytes @ 0x9
   212  00000A                     	ds	2
   213                           
   214 ;;
   215 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   216 ;;
   217 ;; *************** function _main *****************
   218 ;; Defined at:
   219 ;;		line 16 in file "ultraviolento.c"
   220 ;; Parameters:    Size  Location     Type
   221 ;;		None
   222 ;; Auto vars:     Size  Location     Type
   223 ;;		None
   224 ;; Return value:  Size  Location     Type
   225 ;;                  1    wreg      void 
   226 ;; Registers used:
   227 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   228 ;; Tracked objects:
   229 ;;		On entry : 0/0
   230 ;;		On exit  : 0/0
   231 ;;		Unchanged: 0/0
   232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   233 ;;      Params:         0       0       0       0       0       0       0       0       0
   234 ;;      Locals:         0       0       0       0       0       0       0       0       0
   235 ;;      Temps:          2       0       0       0       0       0       0       0       0
   236 ;;      Totals:         2       0       0       0       0       0       0       0       0
   237 ;;Total ram usage:        2 bytes
   238 ;; Hardware stack levels required when called:    3
   239 ;; This function calls:
   240 ;;		_BORRAR_LCD
   241 ;;		_CURSOR_HOME
   242 ;;		_CURSOR_ONOFF
   243 ;;		_ENVIA_CHAR
   244 ;;		_ESCRIBE_MENSAJE
   245 ;;		_LCD_CONFIG
   246 ;;		_POS_CURSOR
   247 ;; This function is called by:
   248 ;;		Startup code after reset
   249 ;; This function uses a non-reentrant model
   250 ;;
   251                           
   252                           	psect	text0
   253  000840                     __ptext0:
   254                           	opt callstack 0
   255  000840                     _main:
   256                           	opt callstack 28
   257                           
   258                           ;ultraviolento.c: 18:     TRISD = 0;
   259                           
   260                           ;incstack = 0
   261  000840  0E00               	movlw	0
   262  000842  6E95               	movwf	3989,c	;volatile
   263                           
   264                           ;ultraviolento.c: 19:     _delay((unsigned long)((500)*(48000000UL/4000.0)));
   265  000844  0E1F               	movlw	31
   266  000846  6E0B               	movwf	(??_main+1)& (0+255),c
   267  000848  0E71               	movlw	113
   268  00084A  6E0A               	movwf	??_main& (0+255),c
   269  00084C  0E1E               	movlw	30
   270  00084E                     u357:
   271  00084E  2EE8               	decfsz	wreg,f,c
   272  000850  D7FE               	bra	u357
   273  000852  2E0A               	decfsz	??_main& (0+255),f,c
   274  000854  D7FC               	bra	u357
   275  000856  2E0B               	decfsz	(??_main+1)& (0+255),f,c
   276  000858  D7FA               	bra	u357
   277  00085A  D000               	nop2	
   278                           
   279                           ;ultraviolento.c: 20:     LCD_CONFIG();
   280  00085C  EC40  F005         	call	_LCD_CONFIG	;wreg free
   281                           
   282                           ;ultraviolento.c: 21:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   283  000860  0EEA               	movlw	234
   284  000862  6E0A               	movwf	??_main& (0+255),c
   285  000864  0EC3               	movlw	195
   286  000866                     u367:
   287  000866  2EE8               	decfsz	wreg,f,c
   288  000868  D7FE               	bra	u367
   289  00086A  2E0A               	decfsz	??_main& (0+255),f,c
   290  00086C  D7FC               	bra	u367
   291  00086E  F000               	nop	
   292                           
   293                           ;ultraviolento.c: 22:     BORRAR_LCD();
   294  000870  ECF6  F005         	call	_BORRAR_LCD	;wreg free
   295                           
   296                           ;ultraviolento.c: 23:     CURSOR_ONOFF(1);
   297  000874  0E01               	movlw	1
   298  000876  ECCF  F005         	call	_CURSOR_ONOFF
   299                           
   300                           ;ultraviolento.c: 24:     TRISEbits.RE0 = 0;
   301  00087A  9096               	bcf	3990,0,c	;volatile
   302                           
   303                           ;ultraviolento.c: 25:     CURSOR_HOME();
   304  00087C  ECF2  F005         	call	_CURSOR_HOME	;wreg free
   305                           
   306                           ;ultraviolento.c: 26:     ESCRIBE_MENSAJE("UPC Servo tester",16);
   307  000880  0E01               	movlw	low STR_1
   308  000882  6E04               	movwf	ESCRIBE_MENSAJE@cadena,c
   309  000884  0E08               	movlw	high STR_1
   310  000886  6E05               	movwf	ESCRIBE_MENSAJE@cadena+1,c
   311  000888  0E10               	movlw	16
   312  00088A  6E06               	movwf	ESCRIBE_MENSAJE@tam,c
   313  00088C  ECA4  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   314  000890                     l1075:
   315                           
   316                           ;ultraviolento.c: 28:         POS_CURSOR(2,0);
   317  000890  0E00               	movlw	0
   318  000892  6E04               	movwf	POS_CURSOR@columna,c
   319  000894  0E02               	movlw	2
   320  000896  ECBD  F005         	call	_POS_CURSOR
   321                           
   322                           ;ultraviolento.c: 29:         if(PORTBbits.RB1 == 0 & PORTBbits.RB0 == 0){
   323  00089A  B081               	btfsc	3969,0,c	;volatile
   324  00089C  D002               	goto	u250
   325  00089E  0E01               	movlw	1
   326  0008A0  D001               	goto	u252
   327  0008A2                     u250:
   328  0008A2  0E00               	movlw	0
   329  0008A4                     u252:
   330  0008A4  6E0A               	movwf	??_main& (0+255),c
   331  0008A6  B281               	btfsc	3969,1,c	;volatile
   332  0008A8  D002               	goto	u260
   333  0008AA  0E01               	movlw	1
   334  0008AC  D001               	goto	u262
   335  0008AE                     u260:
   336  0008AE  0E00               	movlw	0
   337  0008B0                     u262:
   338  0008B0  140A               	andwf	??_main,w,c
   339  0008B2  A0E8               	btfss	wreg,0,c
   340  0008B4  D021               	goto	l1091
   341                           
   342                           ;ultraviolento.c: 30:             ESCRIBE_MENSAJE("Servo: 000",10);
   343  0008B6  0E12               	movlw	low STR_2
   344  0008B8  6E04               	movwf	ESCRIBE_MENSAJE@cadena,c
   345  0008BA  0E08               	movlw	high STR_2
   346  0008BC  6E05               	movwf	ESCRIBE_MENSAJE@cadena+1,c
   347  0008BE  0E0A               	movlw	10
   348  0008C0  6E06               	movwf	ESCRIBE_MENSAJE@tam,c
   349  0008C2  ECA4  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   350                           
   351                           ;ultraviolento.c: 31:             ENVIA_CHAR(0xDF);
   352  0008C6  0EDF               	movlw	223
   353  0008C8  EC70  F005         	call	_ENVIA_CHAR
   354                           
   355                           ;ultraviolento.c: 32:             LATEbits.LE0 = 1;
   356  0008CC  808D               	bsf	3981,0,c	;volatile
   357                           
   358                           ;ultraviolento.c: 33:             _delay((unsigned long)((1000)*(48000000UL/4000000.0)))
      +                          ;
   359  0008CE  0E10               	movlw	16
   360  0008D0  6E0A               	movwf	??_main& (0+255),c
   361  0008D2  0E94               	movlw	148
   362  0008D4                     u377:
   363  0008D4  2EE8               	decfsz	wreg,f,c
   364  0008D6  D7FE               	bra	u377
   365  0008D8  2E0A               	decfsz	??_main& (0+255),f,c
   366  0008DA  D7FC               	bra	u377
   367  0008DC  D000               	nop2	
   368                           
   369                           ;ultraviolento.c: 34:             LATEbits.LE0 = 0;
   370  0008DE  908D               	bcf	3981,0,c	;volatile
   371                           
   372                           ;ultraviolento.c: 35:             _delay((unsigned long)((19)*(48000000UL/4000.0)));
   373  0008E0  0E02               	movlw	2
   374  0008E2  6E0B               	movwf	(??_main+1)& (0+255),c
   375  0008E4  0E29               	movlw	41
   376  0008E6  6E0A               	movwf	??_main& (0+255),c
   377  0008E8  0E17               	movlw	23
   378  0008EA                     u387:
   379  0008EA  2EE8               	decfsz	wreg,f,c
   380  0008EC  D7FE               	bra	u387
   381  0008EE  2E0A               	decfsz	??_main& (0+255),f,c
   382  0008F0  D7FC               	bra	u387
   383  0008F2  2E0B               	decfsz	(??_main+1)& (0+255),f,c
   384  0008F4  D7FA               	bra	u387
   385  0008F6  D091               	goto	L1
   386  0008F8                     l1091:
   387  0008F8  A081               	btfss	3969,0,c	;volatile
   388  0008FA  D002               	goto	u280
   389  0008FC  0E01               	movlw	1
   390  0008FE  D001               	goto	u282
   391  000900                     u280:
   392  000900  0E00               	movlw	0
   393  000902                     u282:
   394  000902  6E0A               	movwf	??_main& (0+255),c
   395  000904  B281               	btfsc	3969,1,c	;volatile
   396  000906  D002               	goto	u290
   397  000908  0E01               	movlw	1
   398  00090A  D001               	goto	u292
   399  00090C                     u290:
   400  00090C  0E00               	movlw	0
   401  00090E                     u292:
   402  00090E  140A               	andwf	??_main,w,c
   403  000910  A0E8               	btfss	wreg,0,c
   404  000912  D028               	goto	l1107
   405                           
   406                           ;ultraviolento.c: 38:             ESCRIBE_MENSAJE("Servo: 090",10);
   407  000914  0E28               	movlw	low STR_3
   408  000916  6E04               	movwf	ESCRIBE_MENSAJE@cadena,c
   409  000918  0E08               	movlw	high STR_3
   410  00091A  6E05               	movwf	ESCRIBE_MENSAJE@cadena+1,c
   411  00091C  0E0A               	movlw	10
   412  00091E  6E06               	movwf	ESCRIBE_MENSAJE@tam,c
   413  000920  ECA4  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   414                           
   415                           ;ultraviolento.c: 39:             ENVIA_CHAR(0xDF);
   416  000924  0EDF               	movlw	223
   417  000926  EC70  F005         	call	_ENVIA_CHAR
   418                           
   419                           ;ultraviolento.c: 40:             LATEbits.LE0 = 1;
   420  00092A  808D               	bsf	3981,0,c	;volatile
   421                           
   422                           ;ultraviolento.c: 41:             _delay((unsigned long)((1500)*(48000000UL/4000000.0)))
      +                          ;
   423  00092C  0E18               	movlw	24
   424  00092E  6E0A               	movwf	??_main& (0+255),c
   425  000930  0E5F               	movlw	95
   426  000932                     u397:
   427  000932  2EE8               	decfsz	wreg,f,c
   428  000934  D7FE               	bra	u397
   429  000936  2E0A               	decfsz	??_main& (0+255),f,c
   430  000938  D7FC               	bra	u397
   431  00093A  F000               	nop	
   432                           
   433                           ;ultraviolento.c: 42:             LATEbits.LE0 = 0;
   434  00093C  908D               	bcf	3981,0,c	;volatile
   435                           
   436                           ;ultraviolento.c: 43:             _delay((unsigned long)((18)*(48000000UL/4000.0)));
   437  00093E  0E02               	movlw	2
   438  000940  6E0B               	movwf	(??_main+1)& (0+255),c
   439  000942  0E19               	movlw	25
   440  000944  6E0A               	movwf	??_main& (0+255),c
   441  000946  0E82               	movlw	130
   442  000948                     u407:
   443  000948  2EE8               	decfsz	wreg,f,c
   444  00094A  D7FE               	bra	u407
   445  00094C  2E0A               	decfsz	??_main& (0+255),f,c
   446  00094E  D7FC               	bra	u407
   447  000950  2E0B               	decfsz	(??_main+1)& (0+255),f,c
   448  000952  D7FA               	bra	u407
   449                           
   450                           ;ultraviolento.c: 44:             _delay((unsigned long)((500)*(48000000UL/4000000.0)));
   451  000954  0E08               	movlw	8
   452  000956  6E0A               	movwf	??_main& (0+255),c
   453  000958  0ECA               	movlw	202
   454  00095A                     u417:
   455  00095A  2EE8               	decfsz	wreg,f,c
   456  00095C  D7FE               	bra	u417
   457  00095E  2E0A               	decfsz	??_main& (0+255),f,c
   458  000960  D7FC               	bra	u417
   459                           
   460                           ;ultraviolento.c: 45:         }
   461  000962  D796               	goto	l1075
   462  000964                     l1107:
   463  000964  B081               	btfsc	3969,0,c	;volatile
   464  000966  D002               	goto	u310
   465  000968  0E01               	movlw	1
   466  00096A  D001               	goto	u312
   467  00096C                     u310:
   468  00096C  0E00               	movlw	0
   469  00096E                     u312:
   470  00096E  6E0A               	movwf	??_main& (0+255),c
   471  000970  A281               	btfss	3969,1,c	;volatile
   472  000972  D002               	goto	u320
   473  000974  0E01               	movlw	1
   474  000976  D001               	goto	u322
   475  000978                     u320:
   476  000978  0E00               	movlw	0
   477  00097A                     u322:
   478  00097A  140A               	andwf	??_main,w,c
   479  00097C  A0E8               	btfss	wreg,0,c
   480  00097E  D020               	goto	l34
   481                           
   482                           ;ultraviolento.c: 47:             ESCRIBE_MENSAJE("Servo: 180",10);
   483  000980  0E1D               	movlw	low STR_4
   484  000982  6E04               	movwf	ESCRIBE_MENSAJE@cadena,c
   485  000984  0E08               	movlw	high STR_4
   486  000986  6E05               	movwf	ESCRIBE_MENSAJE@cadena+1,c
   487  000988  0E0A               	movlw	10
   488  00098A  6E06               	movwf	ESCRIBE_MENSAJE@tam,c
   489  00098C  ECA4  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   490                           
   491                           ;ultraviolento.c: 48:             ENVIA_CHAR(0xDF);
   492  000990  0EDF               	movlw	223
   493  000992  EC70  F005         	call	_ENVIA_CHAR
   494                           
   495                           ;ultraviolento.c: 49:             LATEbits.LE0 = 1;
   496  000996  808D               	bsf	3981,0,c	;volatile
   497                           
   498                           ;ultraviolento.c: 50:             _delay((unsigned long)((2000)*(48000000UL/4000000.0)))
      +                          ;
   499  000998  0E20               	movlw	32
   500  00099A  6E0A               	movwf	??_main& (0+255),c
   501  00099C  0E2A               	movlw	42
   502  00099E                     u427:
   503  00099E  2EE8               	decfsz	wreg,f,c
   504  0009A0  D7FE               	bra	u427
   505  0009A2  2E0A               	decfsz	??_main& (0+255),f,c
   506  0009A4  D7FC               	bra	u427
   507                           
   508                           ;ultraviolento.c: 51:             LATEbits.LE0 = 0;
   509  0009A6  908D               	bcf	3981,0,c	;volatile
   510                           
   511                           ;ultraviolento.c: 52:             _delay((unsigned long)((18)*(48000000UL/4000.0)));
   512  0009A8  0E02               	movlw	2
   513  0009AA  6E0B               	movwf	(??_main+1)& (0+255),c
   514  0009AC  0E19               	movlw	25
   515  0009AE  6E0A               	movwf	??_main& (0+255),c
   516  0009B0  0E82               	movlw	130
   517  0009B2                     u437:
   518  0009B2  2EE8               	decfsz	wreg,f,c
   519  0009B4  D7FE               	bra	u437
   520  0009B6  2E0A               	decfsz	??_main& (0+255),f,c
   521  0009B8  D7FC               	bra	u437
   522  0009BA  2E0B               	decfsz	(??_main+1)& (0+255),f,c
   523  0009BC  D7FA               	bra	u437
   524                           
   525                           ;ultraviolento.c: 53:         }
   526  0009BE  D768               	goto	l1075
   527  0009C0                     l34:
   528  0009C0  0E01               	movlw	1
   529  0009C2  A281               	btfss	3969,1,c	;volatile
   530  0009C4  0E00               	movlw	0
   531  0009C6  A081               	btfss	3969,0,c	;volatile
   532  0009C8  0E00               	movlw	0
   533  0009CA  A0E8               	btfss	wreg,0,c
   534  0009CC  D761               	goto	l1075
   535                           
   536                           ;ultraviolento.c: 55:             ESCRIBE_MENSAJE("Servo: 045",10);
   537  0009CE  0E33               	movlw	low STR_5
   538  0009D0  6E04               	movwf	ESCRIBE_MENSAJE@cadena,c
   539  0009D2  0E08               	movlw	high STR_5
   540  0009D4  6E05               	movwf	ESCRIBE_MENSAJE@cadena+1,c
   541  0009D6  0E0A               	movlw	10
   542  0009D8  6E06               	movwf	ESCRIBE_MENSAJE@tam,c
   543  0009DA  ECA4  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   544                           
   545                           ;ultraviolento.c: 56:             ENVIA_CHAR(0xDF);
   546  0009DE  0EDF               	movlw	223
   547  0009E0  EC70  F005         	call	_ENVIA_CHAR
   548                           
   549                           ;ultraviolento.c: 57:             LATEbits.LE0 = 1;
   550  0009E4  808D               	bsf	3981,0,c	;volatile
   551                           
   552                           ;ultraviolento.c: 58:             _delay((unsigned long)((1250)*(48000000UL/4000000.0)))
      +                          ;
   553  0009E6  0E14               	movlw	20
   554  0009E8  6E0A               	movwf	??_main& (0+255),c
   555  0009EA  0E7A               	movlw	122
   556  0009EC                     u447:
   557  0009EC  2EE8               	decfsz	wreg,f,c
   558  0009EE  D7FE               	bra	u447
   559  0009F0  2E0A               	decfsz	??_main& (0+255),f,c
   560  0009F2  D7FC               	bra	u447
   561                           
   562                           ;ultraviolento.c: 59:             LATEbits.LE0 = 0;
   563  0009F4  908D               	bcf	3981,0,c	;volatile
   564                           
   565                           ;ultraviolento.c: 60:             _delay((unsigned long)((18)*(48000000UL/4000.0)));
   566  0009F6  0E02               	movlw	2
   567  0009F8  6E0B               	movwf	(??_main+1)& (0+255),c
   568  0009FA  0E19               	movlw	25
   569  0009FC  6E0A               	movwf	??_main& (0+255),c
   570  0009FE  0E82               	movlw	130
   571  000A00                     u457:
   572  000A00  2EE8               	decfsz	wreg,f,c
   573  000A02  D7FE               	bra	u457
   574  000A04  2E0A               	decfsz	??_main& (0+255),f,c
   575  000A06  D7FC               	bra	u457
   576  000A08  2E0B               	decfsz	(??_main+1)& (0+255),f,c
   577  000A0A  D7FA               	bra	u457
   578                           
   579                           ;ultraviolento.c: 61:             _delay((unsigned long)((750)*(48000000UL/4000000.0)));
   580  000A0C  0E0C               	movlw	12
   581  000A0E  6E0A               	movwf	??_main& (0+255),c
   582  000A10  0EAF               	movlw	175
   583  000A12                     u467:
   584  000A12  2EE8               	decfsz	wreg,f,c
   585  000A14  D7FE               	bra	u467
   586  000A16  2E0A               	decfsz	??_main& (0+255),f,c
   587  000A18  D7FC               	bra	u467
   588  000A1A                     L1:
   589  000A1A  F000               	nop	
   590  000A1C  D739               	goto	l1075
   591  000A1E                     __end_of_main:
   592                           	opt callstack 0
   593                           
   594 ;; *************** function _POS_CURSOR *****************
   595 ;; Defined at:
   596 ;;		line 6 in file "LCD.c"
   597 ;; Parameters:    Size  Location     Type
   598 ;;  fila            1    wreg     unsigned char 
   599 ;;  columna         1    3[COMRAM] unsigned char 
   600 ;; Auto vars:     Size  Location     Type
   601 ;;  fila            1    4[COMRAM] unsigned char 
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, status,2, status,0, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : 0/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   611 ;;      Params:         1       0       0       0       0       0       0       0       0
   612 ;;      Locals:         1       0       0       0       0       0       0       0       0
   613 ;;      Temps:          0       0       0       0       0       0       0       0       0
   614 ;;      Totals:         2       0       0       0       0       0       0       0       0
   615 ;;Total ram usage:        2 bytes
   616 ;; Hardware stack levels used:    1
   617 ;; Hardware stack levels required when called:    2
   618 ;; This function calls:
   619 ;;		_ENVIA_LCD_CMD
   620 ;; This function is called by:
   621 ;;		_main
   622 ;; This function uses a non-reentrant model
   623 ;;
   624                           
   625                           	psect	text1
   626  000B7A                     __ptext1:
   627                           	opt callstack 0
   628  000B7A                     _POS_CURSOR:
   629                           	opt callstack 28
   630                           
   631                           ;incstack = 0
   632                           ;POS_CURSOR@fila stored from wreg
   633  000B7A  6E05               	movwf	POS_CURSOR@fila,c
   634                           
   635                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
   636  000B7C  0405               	decf	POS_CURSOR@fila,w,c
   637  000B7E  A4D8               	btfss	status,2,c
   638  000B80  D005               	goto	l1053
   639                           
   640                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
   641  000B82  5004               	movf	POS_CURSOR@columna,w,c
   642  000B84  0F80               	addlw	128
   643  000B86  EC8A  F005         	call	_ENVIA_LCD_CMD
   644                           
   645                           ;LCD.c: 11:  }
   646  000B8A  0012               	return	
   647  000B8C                     l1053:
   648  000B8C  0E02               	movlw	2
   649  000B8E  1805               	xorwf	POS_CURSOR@fila,w,c
   650  000B90  A4D8               	btfss	status,2,c
   651  000B92  0012               	return	
   652                           
   653                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
   654  000B94  5004               	movf	POS_CURSOR@columna,w,c
   655  000B96  0FC0               	addlw	192
   656  000B98  EC8A  F005         	call	_ENVIA_LCD_CMD
   657  000B9C  0012               	return		;funcret
   658  000B9E                     __end_of_POS_CURSOR:
   659                           	opt callstack 0
   660                           
   661 ;; *************** function _LCD_CONFIG *****************
   662 ;; Defined at:
   663 ;;		line 72 in file "LCD.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;		None
   666 ;; Auto vars:     Size  Location     Type
   667 ;;		None
   668 ;; Return value:  Size  Location     Type
   669 ;;                  1    wreg      void 
   670 ;; Registers used:
   671 ;;		wreg, status,2, status,0, cstack
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   677 ;;      Params:         0       0       0       0       0       0       0       0       0
   678 ;;      Locals:         0       0       0       0       0       0       0       0       0
   679 ;;      Temps:          1       0       0       0       0       0       0       0       0
   680 ;;      Totals:         1       0       0       0       0       0       0       0       0
   681 ;;Total ram usage:        1 bytes
   682 ;; Hardware stack levels used:    1
   683 ;; Hardware stack levels required when called:    2
   684 ;; This function calls:
   685 ;;		_ENVIA_LCD_CMD
   686 ;;		_ENVIA_NIBBLE
   687 ;; This function is called by:
   688 ;;		_main
   689 ;; This function uses a non-reentrant model
   690 ;;
   691                           
   692                           	psect	text2
   693  000A80                     __ptext2:
   694                           	opt callstack 0
   695  000A80                     _LCD_CONFIG:
   696                           	opt callstack 28
   697                           
   698                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   699                           
   700                           ;incstack = 0
   701  000A80  908C               	bcf	3980,0,c	;volatile
   702                           
   703                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   704  000A82  928C               	bcf	3980,1,c	;volatile
   705                           
   706                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   707  000A84  0E30               	movlw	48
   708  000A86  ECDD  F005         	call	_ENVIA_NIBBLE
   709                           
   710                           ;LCD.c: 77:         _delay(24000);
   711  000A8A  0E20               	movlw	32
   712  000A8C  6E04               	movwf	??_LCD_CONFIG& (0+255),c
   713  000A8E  0E2A               	movlw	42
   714  000A90                     u477:
   715  000A90  2EE8               	decfsz	wreg,f,c
   716  000A92  D7FE               	bra	u477
   717  000A94  2E04               	decfsz	??_LCD_CONFIG& (0+255),f,c
   718  000A96  D7FC               	bra	u477
   719                           
   720                           ;LCD.c: 78:         _delay(24000);
   721  000A98  0E20               	movlw	32
   722  000A9A  6E04               	movwf	??_LCD_CONFIG& (0+255),c
   723  000A9C  0E2A               	movlw	42
   724  000A9E                     u487:
   725  000A9E  2EE8               	decfsz	wreg,f,c
   726  000AA0  D7FE               	bra	u487
   727  000AA2  2E04               	decfsz	??_LCD_CONFIG& (0+255),f,c
   728  000AA4  D7FC               	bra	u487
   729                           
   730                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   731  000AA6  0E30               	movlw	48
   732  000AA8  ECDD  F005         	call	_ENVIA_NIBBLE
   733                           
   734                           ;LCD.c: 83:  _delay(1200);
   735  000AAC  0EF0               	movlw	240
   736  000AAE                     u497:
   737  000AAE  D000               	nop2	
   738  000AB0  2EE8               	decfsz	wreg,f,c
   739  000AB2  D7FD               	bra	u497
   740                           
   741                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   742  000AB4  0E30               	movlw	48
   743  000AB6  ECDD  F005         	call	_ENVIA_NIBBLE
   744                           
   745                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   746  000ABA  0E20               	movlw	32
   747  000ABC  ECDD  F005         	call	_ENVIA_NIBBLE
   748                           
   749                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   750  000AC0  0E01               	movlw	1
   751  000AC2  EC8A  F005         	call	_ENVIA_LCD_CMD
   752                           
   753                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   754  000AC6  0E28               	movlw	40
   755  000AC8  EC8A  F005         	call	_ENVIA_LCD_CMD
   756                           
   757                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   758  000ACC  0E0F               	movlw	15
   759  000ACE  EC8A  F005         	call	_ENVIA_LCD_CMD
   760                           
   761                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   762  000AD2  0E06               	movlw	6
   763  000AD4  EC8A  F005         	call	_ENVIA_LCD_CMD
   764                           
   765                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   766  000AD8  0E01               	movlw	1
   767  000ADA  EC8A  F005         	call	_ENVIA_LCD_CMD
   768  000ADE  0012               	return		;funcret
   769  000AE0                     __end_of_LCD_CONFIG:
   770                           	opt callstack 0
   771                           
   772 ;; *************** function _ESCRIBE_MENSAJE *****************
   773 ;; Defined at:
   774 ;;		line 41 in file "LCD.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
   777 ;;		 -> STR_5(11), STR_4(11), STR_3(11), STR_2(11), 
   778 ;;		 -> STR_1(17), 
   779 ;;  tam             1    5[COMRAM] unsigned char 
   780 ;; Auto vars:     Size  Location     Type
   781 ;;  i               1    8[COMRAM] unsigned char 
   782 ;; Return value:  Size  Location     Type
   783 ;;                  1    wreg      void 
   784 ;; Registers used:
   785 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   786 ;; Tracked objects:
   787 ;;		On entry : 0/0
   788 ;;		On exit  : 0/0
   789 ;;		Unchanged: 0/0
   790 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   791 ;;      Params:         3       0       0       0       0       0       0       0       0
   792 ;;      Locals:         1       0       0       0       0       0       0       0       0
   793 ;;      Temps:          2       0       0       0       0       0       0       0       0
   794 ;;      Totals:         6       0       0       0       0       0       0       0       0
   795 ;;Total ram usage:        6 bytes
   796 ;; Hardware stack levels used:    1
   797 ;; Hardware stack levels required when called:    2
   798 ;; This function calls:
   799 ;;		_ENVIA_CHAR
   800 ;; This function is called by:
   801 ;;		_main
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805                           	psect	text3
   806  000B48                     __ptext3:
   807                           	opt callstack 0
   808  000B48                     _ESCRIBE_MENSAJE:
   809                           	opt callstack 28
   810                           
   811                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
   812                           
   813                           ;incstack = 0
   814  000B48  0E00               	movlw	0
   815  000B4A  6E09               	movwf	ESCRIBE_MENSAJE@i,c
   816                           
   817                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
   818  000B4C  0E00               	movlw	0
   819  000B4E  6E09               	movwf	ESCRIBE_MENSAJE@i,c
   820  000B50  D00F               	goto	l1047
   821  000B52                     l1043:
   822                           
   823                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
   824  000B52  5009               	movf	ESCRIBE_MENSAJE@i,w,c
   825  000B54  2404               	addwf	ESCRIBE_MENSAJE@cadena,w,c
   826  000B56  6E07               	movwf	??_ESCRIBE_MENSAJE& (0+255),c
   827  000B58  0E00               	movlw	0
   828  000B5A  2005               	addwfc	ESCRIBE_MENSAJE@cadena+1,w,c
   829  000B5C  6E08               	movwf	(??_ESCRIBE_MENSAJE+1)& (0+255),c
   830  000B5E  C007  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
   831  000B62  C008  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
   832  000B66                     	if	0	;tblptru may be non-zero
   833  000B66                     	endif
   834  000B66                     	if	0	;tblptru may be non-zero
   835  000B66                     	endif
   836  000B66  0008               	tblrd		*
   837  000B68  50F5               	movf	tablat,w,c
   838  000B6A  EC70  F005         	call	_ENVIA_CHAR
   839                           
   840                           ;LCD.c: 47:  }
   841  000B6E  2A09               	incf	ESCRIBE_MENSAJE@i,f,c
   842  000B70                     l1047:
   843  000B70  5006               	movf	ESCRIBE_MENSAJE@tam,w,c
   844  000B72  5C09               	subwf	ESCRIBE_MENSAJE@i,w,c
   845  000B74  B0D8               	btfsc	status,0,c
   846  000B76  0012               	return	
   847  000B78  D7EC               	goto	l1043
   848  000B7A                     __end_of_ESCRIBE_MENSAJE:
   849                           	opt callstack 0
   850                           
   851 ;; *************** function _ENVIA_CHAR *****************
   852 ;; Defined at:
   853 ;;		line 50 in file "LCD.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  dato            1    wreg     unsigned char 
   856 ;; Auto vars:     Size  Location     Type
   857 ;;  dato            1    1[COMRAM] unsigned char 
   858 ;;  aux             1    2[COMRAM] unsigned char 
   859 ;; Return value:  Size  Location     Type
   860 ;;                  1    wreg      void 
   861 ;; Registers used:
   862 ;;		wreg, status,2, status,0, cstack
   863 ;; Tracked objects:
   864 ;;		On entry : 0/0
   865 ;;		On exit  : 0/0
   866 ;;		Unchanged: 0/0
   867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   868 ;;      Params:         0       0       0       0       0       0       0       0       0
   869 ;;      Locals:         2       0       0       0       0       0       0       0       0
   870 ;;      Temps:          0       0       0       0       0       0       0       0       0
   871 ;;      Totals:         2       0       0       0       0       0       0       0       0
   872 ;;Total ram usage:        2 bytes
   873 ;; Hardware stack levels used:    1
   874 ;; Hardware stack levels required when called:    1
   875 ;; This function calls:
   876 ;;		_ENVIA_NIBBLE
   877 ;;		_LEER_LCD
   878 ;; This function is called by:
   879 ;;		_main
   880 ;;		_ESCRIBE_MENSAJE
   881 ;;		_GENERACARACTER
   882 ;; This function uses a non-reentrant model
   883 ;;
   884                           
   885                           	psect	text4
   886  000AE0                     __ptext4:
   887                           	opt callstack 0
   888  000AE0                     _ENVIA_CHAR:
   889                           	opt callstack 28
   890                           
   891                           ;incstack = 0
   892                           ;ENVIA_CHAR@dato stored from wreg
   893  000AE0  6E02               	movwf	ENVIA_CHAR@dato,c
   894                           
   895                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
   896  000AE2  808C               	bsf	3980,0,c	;volatile
   897                           
   898                           ;LCD.c: 54:  LEER_LCD();
   899  000AE4  EC0F  F005         	call	_LEER_LCD	;wreg free
   900                           
   901                           ;LCD.c: 55:  TRISD = 0x00;
   902  000AE8  0E00               	movlw	0
   903  000AEA  6E95               	movwf	3989,c	;volatile
   904                           
   905                           ;LCD.c: 56:         _delay(1200);
   906  000AEC  0EF0               	movlw	240
   907  000AEE                     u507:
   908  000AEE  D000               	nop2	
   909  000AF0  2EE8               	decfsz	wreg,f,c
   910  000AF2  D7FD               	bra	u507
   911                           
   912                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
   913  000AF4  928C               	bcf	3980,1,c	;volatile
   914                           
   915                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
   916  000AF6  948C               	bcf	3980,2,c	;volatile
   917                           
   918                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
   919  000AF8  808C               	bsf	3980,0,c	;volatile
   920                           
   921                           ;LCD.c: 61:  aux = dato & 0xF0;
   922  000AFA  5002               	movf	ENVIA_CHAR@dato,w,c
   923  000AFC  0BF0               	andlw	240
   924  000AFE  6E03               	movwf	ENVIA_CHAR@aux,c
   925                           
   926                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
   927  000B00  5003               	movf	ENVIA_CHAR@aux,w,c
   928  000B02  ECDD  F005         	call	_ENVIA_NIBBLE
   929                           
   930                           ;LCD.c: 63:  aux = dato << 4;
   931  000B06  3802               	swapf	ENVIA_CHAR@dato,w,c
   932  000B08  0BF0               	andlw	240
   933  000B0A  6E03               	movwf	ENVIA_CHAR@aux,c
   934                           
   935                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
   936  000B0C  5003               	movf	ENVIA_CHAR@aux,w,c
   937  000B0E  ECDD  F005         	call	_ENVIA_NIBBLE
   938  000B12  0012               	return		;funcret
   939  000B14                     __end_of_ENVIA_CHAR:
   940                           	opt callstack 0
   941                           
   942 ;; *************** function _CURSOR_ONOFF *****************
   943 ;; Defined at:
   944 ;;		line 35 in file "LCD.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  estado          1    wreg     unsigned char 
   947 ;; Auto vars:     Size  Location     Type
   948 ;;  estado          1    3[COMRAM] unsigned char 
   949 ;; Return value:  Size  Location     Type
   950 ;;                  1    wreg      void 
   951 ;; Registers used:
   952 ;;		wreg, status,2, status,0, cstack
   953 ;; Tracked objects:
   954 ;;		On entry : 0/0
   955 ;;		On exit  : 0/0
   956 ;;		Unchanged: 0/0
   957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   958 ;;      Params:         0       0       0       0       0       0       0       0       0
   959 ;;      Locals:         1       0       0       0       0       0       0       0       0
   960 ;;      Temps:          0       0       0       0       0       0       0       0       0
   961 ;;      Totals:         1       0       0       0       0       0       0       0       0
   962 ;;Total ram usage:        1 bytes
   963 ;; Hardware stack levels used:    1
   964 ;; Hardware stack levels required when called:    2
   965 ;; This function calls:
   966 ;;		_ENVIA_LCD_CMD
   967 ;; This function is called by:
   968 ;;		_main
   969 ;; This function uses a non-reentrant model
   970 ;;
   971                           
   972                           	psect	text5
   973  000B9E                     __ptext5:
   974                           	opt callstack 0
   975  000B9E                     _CURSOR_ONOFF:
   976                           	opt callstack 28
   977                           
   978                           ;incstack = 0
   979                           ;CURSOR_ONOFF@estado stored from wreg
   980  000B9E  6E04               	movwf	CURSOR_ONOFF@estado,c
   981                           
   982                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   983  000BA0  5004               	movf	CURSOR_ONOFF@estado,w,c
   984  000BA2  A4D8               	btfss	status,2,c
   985  000BA4  D003               	goto	l909
   986  000BA6  0E0E               	movlw	14
   987  000BA8  EC8A  F005         	call	_ENVIA_LCD_CMD
   988  000BAC                     l909:
   989                           
   990                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   991  000BAC  0404               	decf	CURSOR_ONOFF@estado,w,c
   992  000BAE  A4D8               	btfss	status,2,c
   993  000BB0  0012               	return	
   994  000BB2  0E0C               	movlw	12
   995  000BB4  EC8A  F005         	call	_ENVIA_LCD_CMD
   996  000BB8  0012               	return		;funcret
   997  000BBA                     __end_of_CURSOR_ONOFF:
   998                           	opt callstack 0
   999                           
  1000 ;; *************** function _CURSOR_HOME *****************
  1001 ;; Defined at:
  1002 ;;		line 30 in file "LCD.c"
  1003 ;; Parameters:    Size  Location     Type
  1004 ;;		None
  1005 ;; Auto vars:     Size  Location     Type
  1006 ;;		None
  1007 ;; Return value:  Size  Location     Type
  1008 ;;                  1    wreg      void 
  1009 ;; Registers used:
  1010 ;;		wreg, status,2, status,0, cstack
  1011 ;; Tracked objects:
  1012 ;;		On entry : 0/0
  1013 ;;		On exit  : 0/0
  1014 ;;		Unchanged: 0/0
  1015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1016 ;;      Params:         0       0       0       0       0       0       0       0       0
  1017 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1018 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1019 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1020 ;;Total ram usage:        0 bytes
  1021 ;; Hardware stack levels used:    1
  1022 ;; Hardware stack levels required when called:    2
  1023 ;; This function calls:
  1024 ;;		_ENVIA_LCD_CMD
  1025 ;; This function is called by:
  1026 ;;		_main
  1027 ;; This function uses a non-reentrant model
  1028 ;;
  1029                           
  1030                           	psect	text6
  1031  000BE4                     __ptext6:
  1032                           	opt callstack 0
  1033  000BE4                     _CURSOR_HOME:
  1034                           	opt callstack 28
  1035                           
  1036                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  1037                           
  1038                           ;incstack = 0
  1039  000BE4  0E02               	movlw	2
  1040  000BE6  EC8A  F005         	call	_ENVIA_LCD_CMD
  1041  000BEA  0012               	return		;funcret
  1042  000BEC                     __end_of_CURSOR_HOME:
  1043                           	opt callstack 0
  1044                           
  1045 ;; *************** function _BORRAR_LCD *****************
  1046 ;; Defined at:
  1047 ;;		line 67 in file "LCD.c"
  1048 ;; Parameters:    Size  Location     Type
  1049 ;;		None
  1050 ;; Auto vars:     Size  Location     Type
  1051 ;;		None
  1052 ;; Return value:  Size  Location     Type
  1053 ;;                  1    wreg      void 
  1054 ;; Registers used:
  1055 ;;		wreg, status,2, status,0, cstack
  1056 ;; Tracked objects:
  1057 ;;		On entry : 0/0
  1058 ;;		On exit  : 0/0
  1059 ;;		Unchanged: 0/0
  1060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1061 ;;      Params:         0       0       0       0       0       0       0       0       0
  1062 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1063 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1064 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1065 ;;Total ram usage:        0 bytes
  1066 ;; Hardware stack levels used:    1
  1067 ;; Hardware stack levels required when called:    2
  1068 ;; This function calls:
  1069 ;;		_ENVIA_LCD_CMD
  1070 ;; This function is called by:
  1071 ;;		_main
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text7
  1076  000BEC                     __ptext7:
  1077                           	opt callstack 0
  1078  000BEC                     _BORRAR_LCD:
  1079                           	opt callstack 28
  1080                           
  1081                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
  1082                           
  1083                           ;incstack = 0
  1084  000BEC  0E01               	movlw	1
  1085  000BEE  EC8A  F005         	call	_ENVIA_LCD_CMD
  1086  000BF2  0012               	return		;funcret
  1087  000BF4                     __end_of_BORRAR_LCD:
  1088                           	opt callstack 0
  1089                           
  1090 ;; *************** function _ENVIA_LCD_CMD *****************
  1091 ;; Defined at:
  1092 ;;		line 104 in file "LCD.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;  dato            1    wreg     unsigned char 
  1095 ;; Auto vars:     Size  Location     Type
  1096 ;;  dato            1    1[COMRAM] unsigned char 
  1097 ;;  aux             1    2[COMRAM] unsigned char 
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1107 ;;      Params:         0       0       0       0       0       0       0       0       0
  1108 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1110 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1111 ;;Total ram usage:        2 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:    1
  1114 ;; This function calls:
  1115 ;;		_ENVIA_NIBBLE
  1116 ;;		_LEER_LCD
  1117 ;; This function is called by:
  1118 ;;		_POS_CURSOR
  1119 ;;		_CURSOR_HOME
  1120 ;;		_CURSOR_ONOFF
  1121 ;;		_BORRAR_LCD
  1122 ;;		_LCD_CONFIG
  1123 ;;		_BLINK_CURSOR
  1124 ;;		_DISPLAY_ONOFF
  1125 ;;		_GENERACARACTER
  1126 ;; This function uses a non-reentrant model
  1127 ;;
  1128                           
  1129                           	psect	text8
  1130  000B14                     __ptext8:
  1131                           	opt callstack 0
  1132  000B14                     _ENVIA_LCD_CMD:
  1133                           	opt callstack 28
  1134                           
  1135                           ;incstack = 0
  1136                           ;ENVIA_LCD_CMD@dato stored from wreg
  1137  000B14  6E02               	movwf	ENVIA_LCD_CMD@dato,c
  1138                           
  1139                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1140  000B16  908C               	bcf	3980,0,c	;volatile
  1141                           
  1142                           ;LCD.c: 108:  LEER_LCD();
  1143  000B18  EC0F  F005         	call	_LEER_LCD	;wreg free
  1144                           
  1145                           ;LCD.c: 109:  TRISD = 0b00000000;
  1146  000B1C  0E00               	movlw	0
  1147  000B1E  6E95               	movwf	3989,c	;volatile
  1148                           
  1149                           ;LCD.c: 111:         _delay(1200);
  1150  000B20  0EF0               	movlw	240
  1151  000B22                     u517:
  1152  000B22  D000               	nop2	
  1153  000B24  2EE8               	decfsz	wreg,f,c
  1154  000B26  D7FD               	bra	u517
  1155                           
  1156                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1157  000B28  928C               	bcf	3980,1,c	;volatile
  1158                           
  1159                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1160  000B2A  948C               	bcf	3980,2,c	;volatile
  1161                           
  1162                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1163  000B2C  908C               	bcf	3980,0,c	;volatile
  1164                           
  1165                           ;LCD.c: 115:  aux = dato & 0xF0;
  1166  000B2E  5002               	movf	ENVIA_LCD_CMD@dato,w,c
  1167  000B30  0BF0               	andlw	240
  1168  000B32  6E03               	movwf	ENVIA_LCD_CMD@aux,c
  1169                           
  1170                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1171  000B34  5003               	movf	ENVIA_LCD_CMD@aux,w,c
  1172  000B36  ECDD  F005         	call	_ENVIA_NIBBLE
  1173                           
  1174                           ;LCD.c: 117:  aux = dato<<4;
  1175  000B3A  3802               	swapf	ENVIA_LCD_CMD@dato,w,c
  1176  000B3C  0BF0               	andlw	240
  1177  000B3E  6E03               	movwf	ENVIA_LCD_CMD@aux,c
  1178                           
  1179                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1180  000B40  5003               	movf	ENVIA_LCD_CMD@aux,w,c
  1181  000B42  ECDD  F005         	call	_ENVIA_NIBBLE
  1182  000B46  0012               	return		;funcret
  1183  000B48                     __end_of_ENVIA_LCD_CMD:
  1184                           	opt callstack 0
  1185                           
  1186 ;; *************** function _LEER_LCD *****************
  1187 ;; Defined at:
  1188 ;;		line 121 in file "LCD.c"
  1189 ;; Parameters:    Size  Location     Type
  1190 ;;		None
  1191 ;; Auto vars:     Size  Location     Type
  1192 ;;  aux             1    0[COMRAM] unsigned char 
  1193 ;; Return value:  Size  Location     Type
  1194 ;;                  1    wreg      void 
  1195 ;; Registers used:
  1196 ;;		wreg, status,2, status,0
  1197 ;; Tracked objects:
  1198 ;;		On entry : 0/0
  1199 ;;		On exit  : 0/0
  1200 ;;		Unchanged: 0/0
  1201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1202 ;;      Params:         0       0       0       0       0       0       0       0       0
  1203 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1204 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1205 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1206 ;;Total ram usage:        1 bytes
  1207 ;; Hardware stack levels used:    1
  1208 ;; This function calls:
  1209 ;;		Nothing
  1210 ;; This function is called by:
  1211 ;;		_ENVIA_CHAR
  1212 ;;		_ENVIA_LCD_CMD
  1213 ;; This function uses a non-reentrant model
  1214 ;;
  1215                           
  1216                           	psect	text9
  1217  000A1E                     __ptext9:
  1218                           	opt callstack 0
  1219  000A1E                     _LEER_LCD:
  1220                           	opt callstack 28
  1221                           
  1222                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1223                           
  1224                           ;incstack = 0
  1225  000A1E  0EF8               	movlw	248
  1226  000A20  6E95               	movwf	3989,c	;volatile
  1227                           
  1228                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1229  000A22  908C               	bcf	3980,0,c	;volatile
  1230                           
  1231                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1232  000A24  828C               	bsf	3980,1,c	;volatile
  1233                           
  1234                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1235  000A26  848C               	bsf	3980,2,c	;volatile
  1236                           
  1237                           ;LCD.c: 128:         _delay(1200);
  1238  000A28  0EF0               	movlw	240
  1239  000A2A                     u527:
  1240  000A2A  D000               	nop2	
  1241  000A2C  2EE8               	decfsz	wreg,f,c
  1242  000A2E  D7FD               	bra	u527
  1243                           
  1244                           ;LCD.c: 130:  aux = PORTD;
  1245  000A30  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1246                           
  1247                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1248  000A34  948C               	bcf	3980,2,c	;volatile
  1249                           
  1250                           ;LCD.c: 132:         _delay(1200);
  1251  000A36  0EF0               	movlw	240
  1252  000A38                     u537:
  1253  000A38  D000               	nop2	
  1254  000A3A  2EE8               	decfsz	wreg,f,c
  1255  000A3C  D7FD               	bra	u537
  1256                           
  1257                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1258  000A3E  848C               	bsf	3980,2,c	;volatile
  1259                           
  1260                           ;LCD.c: 135:         _delay(1200);
  1261  000A40  0EF0               	movlw	240
  1262  000A42                     u547:
  1263  000A42  D000               	nop2	
  1264  000A44  2EE8               	decfsz	wreg,f,c
  1265  000A46  D7FD               	bra	u547
  1266  000A48                     l809:
  1267                           
  1268                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1269  000A48  948C               	bcf	3980,2,c	;volatile
  1270                           
  1271                           ;LCD.c: 138:  aux = aux & 0x80;
  1272  000A4A  5001               	movf	LEER_LCD@aux,w,c
  1273  000A4C  0B80               	andlw	128
  1274  000A4E  6E01               	movwf	LEER_LCD@aux,c
  1275                           
  1276                           ;LCD.c: 139:  while(aux == 0x80)
  1277  000A50  D012               	goto	l825
  1278  000A52                     l106:
  1279                           
  1280                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1281  000A52  848C               	bsf	3980,2,c	;volatile
  1282                           
  1283                           ;LCD.c: 142:             _delay(1200);
  1284  000A54  0EF0               	movlw	240
  1285  000A56                     u557:
  1286  000A56  D000               	nop2	
  1287  000A58  2EE8               	decfsz	wreg,f,c
  1288  000A5A  D7FD               	bra	u557
  1289                           
  1290                           ;LCD.c: 143:             aux = PORTD;
  1291  000A5C  CF83 F001          	movff	3971,LEER_LCD@aux	;volatile
  1292                           
  1293                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1294  000A60  948C               	bcf	3980,2,c	;volatile
  1295                           
  1296                           ;LCD.c: 145:             _delay(1200);
  1297  000A62  0EF0               	movlw	240
  1298  000A64                     u567:
  1299  000A64  D000               	nop2	
  1300  000A66  2EE8               	decfsz	wreg,f,c
  1301  000A68  D7FD               	bra	u567
  1302                           
  1303                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1304  000A6A  848C               	bsf	3980,2,c	;volatile
  1305                           
  1306                           ;LCD.c: 147:             _delay(1200);
  1307  000A6C  0EF0               	movlw	240
  1308  000A6E                     u577:
  1309  000A6E  D000               	nop2	
  1310  000A70  2EE8               	decfsz	wreg,f,c
  1311  000A72  D7FD               	bra	u577
  1312  000A74  D7E9               	goto	l809
  1313  000A76                     l825:
  1314                           
  1315                           ;LCD.c: 139:  while(aux == 0x80)
  1316  000A76  0E80               	movlw	128
  1317  000A78  1801               	xorwf	LEER_LCD@aux,w,c
  1318  000A7A  A4D8               	btfss	status,2,c
  1319  000A7C  0012               	return	
  1320  000A7E  D7E9               	goto	l106
  1321  000A80                     __end_of_LEER_LCD:
  1322                           	opt callstack 0
  1323                           
  1324 ;; *************** function _ENVIA_NIBBLE *****************
  1325 ;; Defined at:
  1326 ;;		line 93 in file "LCD.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  dato            1    wreg     unsigned char 
  1329 ;; Auto vars:     Size  Location     Type
  1330 ;;  dato            1    0[COMRAM] unsigned char 
  1331 ;; Return value:  Size  Location     Type
  1332 ;;                  1    wreg      void 
  1333 ;; Registers used:
  1334 ;;		wreg, status,2, status,0
  1335 ;; Tracked objects:
  1336 ;;		On entry : 0/0
  1337 ;;		On exit  : 0/0
  1338 ;;		Unchanged: 0/0
  1339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1340 ;;      Params:         0       0       0       0       0       0       0       0       0
  1341 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1342 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1343 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1344 ;;Total ram usage:        1 bytes
  1345 ;; Hardware stack levels used:    1
  1346 ;; This function calls:
  1347 ;;		Nothing
  1348 ;; This function is called by:
  1349 ;;		_ENVIA_CHAR
  1350 ;;		_LCD_CONFIG
  1351 ;;		_ENVIA_LCD_CMD
  1352 ;; This function uses a non-reentrant model
  1353 ;;
  1354                           
  1355                           	psect	text10
  1356  000BBA                     __ptext10:
  1357                           	opt callstack 0
  1358  000BBA                     _ENVIA_NIBBLE:
  1359                           	opt callstack 28
  1360                           
  1361                           ;incstack = 0
  1362                           ;ENVIA_NIBBLE@dato stored from wreg
  1363  000BBA  6E01               	movwf	ENVIA_NIBBLE@dato,c
  1364                           
  1365                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1366  000BBC  0E0F               	movlw	15
  1367  000BBE  168C               	andwf	3980,f,c	;volatile
  1368                           
  1369                           ;LCD.c: 96:  dato &= 0xF0;
  1370  000BC0  0EF0               	movlw	240
  1371  000BC2  1601               	andwf	ENVIA_NIBBLE@dato,f,c
  1372                           
  1373                           ;LCD.c: 97:  LATD|= dato;
  1374  000BC4  5001               	movf	ENVIA_NIBBLE@dato,w,c	;volatile
  1375  000BC6  128C               	iorwf	3980,f,c	;volatile
  1376                           
  1377                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1378  000BC8  848C               	bsf	3980,2,c	;volatile
  1379                           
  1380                           ;LCD.c: 100:         _delay(1200);
  1381  000BCA  0EF0               	movlw	240
  1382  000BCC                     u587:
  1383  000BCC  D000               	nop2	
  1384  000BCE  2EE8               	decfsz	wreg,f,c
  1385  000BD0  D7FD               	bra	u587
  1386                           
  1387                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1388  000BD2  948C               	bcf	3980,2,c	;volatile
  1389  000BD4  0012               	return		;funcret
  1390  000BD6                     __end_of_ENVIA_NIBBLE:
  1391                           	opt callstack 0
  1392                           
  1393                           	psect	rparam
  1394  0000                     tosu	equ	0xFFF
  1395                           tosh	equ	0xFFE
  1396                           tosl	equ	0xFFD
  1397                           stkptr	equ	0xFFC
  1398                           pclatu	equ	0xFFB
  1399                           pclath	equ	0xFFA
  1400                           pcl	equ	0xFF9
  1401                           tblptru	equ	0xFF8
  1402                           tblptrh	equ	0xFF7
  1403                           tblptrl	equ	0xFF6
  1404                           tablat	equ	0xFF5
  1405                           prodh	equ	0xFF4
  1406                           prodl	equ	0xFF3
  1407                           indf0	equ	0xFEF
  1408                           postinc0	equ	0xFEE
  1409                           postdec0	equ	0xFED
  1410                           preinc0	equ	0xFEC
  1411                           plusw0	equ	0xFEB
  1412                           fsr0h	equ	0xFEA
  1413                           fsr0l	equ	0xFE9
  1414                           wreg	equ	0xFE8
  1415                           indf1	equ	0xFE7
  1416                           postinc1	equ	0xFE6
  1417                           postdec1	equ	0xFE5
  1418                           preinc1	equ	0xFE4
  1419                           plusw1	equ	0xFE3
  1420                           fsr1h	equ	0xFE2
  1421                           fsr1l	equ	0xFE1
  1422                           bsr	equ	0xFE0
  1423                           indf2	equ	0xFDF
  1424                           postinc2	equ	0xFDE
  1425                           postdec2	equ	0xFDD
  1426                           preinc2	equ	0xFDC
  1427                           plusw2	equ	0xFDB
  1428                           fsr2h	equ	0xFDA
  1429                           fsr2l	equ	0xFD9
  1430                           status	equ	0xFD8


Data Sizes:
    Strings     61
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     11      11
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[11]), STR_4(CODE[11]), STR_3(CODE[11]), STR_2(CODE[11]), 
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _POS_CURSOR->_ENVIA_LCD_CMD
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1900
                                              9 COMRAM     2     2      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _ENVIA_CHAR
                    _ESCRIBE_MENSAJE
                         _LCD_CONFIG
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     284
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_CONFIG                                           1     1      0     135
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     971
                                              3 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _CURSOR_ONOFF                                         1     1      0     150
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     120
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      45
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _CURSOR_HOME
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _CURSOR_ONOFF
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ENVIA_CHAR
     _ENVIA_NIBBLE
     _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _LCD_CONFIG
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
     _ENVIA_NIBBLE
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      B       B       1       11.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed May 29 08:56:10 2019

                      l34 09C0        __CFG_FOSC$XTPLL_XT 000000             ENVIA_CHAR@aux 0003  
                     l106 0A52                       l825 0A76                       l809 0A48  
                     l909 0BAC                       u310 096C                       u320 0978  
                     u312 096E                       u322 097A                       u250 08A2  
                     u260 08AE                       u252 08A4                       u262 08B0  
                     u407 0948                       u280 0900                       u417 095A  
                     u290 090C                       u282 0902                       u507 0AEE  
                     u427 099E                       u292 090E                       u517 0B22  
                     u437 09B2                       u357 084E                       u527 0A2A  
                     u447 09EC                       u367 0866                       u537 0A38  
                     u457 0A00                       u377 08D4                       u547 0A42  
                     u467 0A12                       u387 08EA                       u557 0A56  
                     u477 0A90                       u397 0932                       u567 0A64  
                     u487 0A9E                       u577 0A6E                       u497 0AAE  
                     u587 0BCC              __CFG_BOR$OFF 000000               LEER_LCD@aux 0001  
                     wreg 000FE8              ?_CURSOR_HOME 0001            ??_ENVIA_NIBBLE 0001  
            __CFG_LVP$OFF 000000            ENVIA_CHAR@dato 0002              __CFG_WDT$OFF 000000  
                    l1043 0B52                      l1107 0964                      l1053 0B8C  
                    l1047 0B70                      l1091 08F8                      l1075 0890  
                    STR_1 0801                      STR_2 0812                      STR_3 0828  
                    STR_4 081D                      STR_5 0833                      _LATD 000F8C  
            __CFG_PWRT$ON 000000                      _main 0840                      start 0000  
           ?_CURSOR_ONOFF 0001             __CFG_MCLRE$ON 000000              ___param_bank 000000  
         ??_ENVIA_LCD_CMD 0002          __end_of_LEER_LCD 0A80       __size_of_BORRAR_LCD 0008  
           __CFG_PLLDIV$1 000000            __CFG_CCP2MX$ON 000000                     ?_main 0001  
                   _PORTD 000F83       __size_of_LCD_CONFIG 0060                     _TRISD 000F95  
     __size_of_ENVIA_CHAR 0034               ?_POS_CURSOR 0004                     tablat 000FF5  
                   status 000FD8            ??_CURSOR_ONOFF 0004           __initialization 0BD6  
            __end_of_main 0A1E           _ESCRIBE_MENSAJE 0B48                    ??_main 000A  
           __activetblptr 000001      __end_of_ENVIA_NIBBLE 0BD6       __size_of_POS_CURSOR 0024  
            __mediumconst 0000                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8              ??_BORRAR_LCD 0004      __size_of_CURSOR_HOME 0008  
               ?_LEER_LCD 0001                __accesstop 0060   __end_of__initialization 0BD6  
         __CFG_PBADEN$OFF 000000              ??_LCD_CONFIG 0004             ___rparam_used 000001  
            ??_ENVIA_CHAR 0002   __end_of_ESCRIBE_MENSAJE 0B7A            __pcstackCOMRAM 0001  
      __end_of_BORRAR_LCD 0BF4          ENVIA_LCD_CMD@aux 0003      __end_of_CURSOR_ONOFF 0BBA  
      __end_of_LCD_CONFIG 0AE0        __end_of_ENVIA_CHAR 0B14                ??_LEER_LCD 0001  
        ENVIA_NIBBLE@dato 0001              ??_POS_CURSOR 0005     __size_of_ENVIA_NIBBLE 001C  
                 __Hparam 0000                   __Lparam 0000          ?_ESCRIBE_MENSAJE 0004  
            __psmallconst 0800     __end_of_ENVIA_LCD_CMD 0B48                   __pcinit 0BD6  
      __end_of_POS_CURSOR 0B9E                   __ramtop 0800                   __ptext0 0840  
                 __ptext1 0B7A                   __ptext2 0A80                   __ptext3 0B48  
                 __ptext4 0AE0                   __ptext5 0B9E                   __ptext6 0BE4  
                 __ptext7 0BEC                   __ptext8 0B14                   __ptext9 0A1E  
            _ENVIA_NIBBLE 0BBA      end_of_initialization 0BD6     __size_of_CURSOR_ONOFF 001C  
               _PORTBbits 000F81                 _TRISEbits 000F96         __size_of_LEER_LCD 0062  
            _CURSOR_ONOFF 0B9E        CURSOR_ONOFF@estado 0004             ??_CURSOR_HOME 0004  
     start_initialization 0BD6         ENVIA_LCD_CMD@dato 0002       __end_of_CURSOR_HOME 0BEC  
             __smallconst 0800                  _LEER_LCD 0A1E                  _LATDbits 000F8C  
                _LATEbits 000F8D          ESCRIBE_MENSAJE@i 0009            POS_CURSOR@fila 0005  
__size_of_ESCRIBE_MENSAJE 0032               _CURSOR_HOME 0BE4    __size_of_ENVIA_LCD_CMD 0034  
                __Hrparam 0000                  __Lrparam 0000              __Lsmallconst 0800  
                __ptext10 0BBA                _BORRAR_LCD 0BEC             __size_of_main 01DE  
              _LCD_CONFIG 0A80                _ENVIA_CHAR 0AE0             _ENVIA_LCD_CMD 0B14  
   __CFG_CPUDIV$OSC1_PLL2 000000         ??_ESCRIBE_MENSAJE 0007     ESCRIBE_MENSAJE@cadena 0004  
          ?_ENVIA_LCD_CMD 0001               ?_BORRAR_LCD 0001             ?_ENVIA_NIBBLE 0001  
              _POS_CURSOR 0B7A               ?_LCD_CONFIG 0001        ESCRIBE_MENSAJE@tam 0006  
             ?_ENVIA_CHAR 0001         POS_CURSOR@columna 0004  
