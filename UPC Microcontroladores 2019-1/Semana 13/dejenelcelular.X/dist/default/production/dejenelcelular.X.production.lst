

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Jun 12 08:51:45 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15  0000                     
    16                           ; Version 2.05
    17                           ; Generated 20/12/2018 GMT
    18                           ; 
    19                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC18F4550 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     
    51                           	psect	idataCOMRAM
    52  007E33                     __pidataCOMRAM:
    53                           	opt callstack 0
    54                           
    55                           ;initializer for _cadena4
    56  007E33  53                 	db	83
    57  007E34  61                 	db	97
    58  007E35  6C                 	db	108
    59  007E36  69                 	db	105
    60  007E37  64                 	db	100
    61  007E38  61                 	db	97
    62  007E39  20                 	db	32
    63  007E3A  52                 	db	82
    64  007E3B  42                 	db	66
    65  007E3C  30                 	db	48
    66  007E3D  20                 	db	32
    67  007E3E  3D                 	db	61
    68  007E3F  20                 	db	32
    69  007E40  4F                 	db	79
    70  007E41  46                 	db	70
    71  007E42  46                 	db	70
    72  007E43  00                 	db	0
    73                           
    74                           ;initializer for _cadena3
    75  007E44  53                 	db	83
    76  007E45  61                 	db	97
    77  007E46  6C                 	db	108
    78  007E47  69                 	db	105
    79  007E48  64                 	db	100
    80  007E49  61                 	db	97
    81  007E4A  20                 	db	32
    82  007E4B  52                 	db	82
    83  007E4C  42                 	db	66
    84  007E4D  30                 	db	48
    85  007E4E  20                 	db	32
    86  007E4F  3D                 	db	61
    87  007E50  20                 	db	32
    88  007E51  4F                 	db	79
    89  007E52  4E                 	db	78
    90  007E53  00                 	db	0
    91                           
    92                           ;initializer for _cadena1
    93  007E54  55                 	db	85
    94  007E55  50                 	db	80
    95  007E56  43                 	db	67
    96  007E57  20                 	db	32
    97  007E58  4D                 	db	77
    98  007E59  6F                 	db	111
    99  007E5A  6E                 	db	110
   100  007E5B  69                 	db	105
   101  007E5C  74                 	db	116
   102  007E5D  6F                 	db	111
   103  007E5E  72                 	db	114
   104  007E5F  00                 	db	0
   105                           
   106                           	psect	idataBANK0
   107  007E18                     __pidataBANK0:
   108                           	opt callstack 0
   109                           
   110                           ;initializer for _cadena2
   111  007E18  49                 	db	73
   112  007E19  6E                 	db	110
   113  007E1A  67                 	db	103
   114  007E1B  65                 	db	101
   115  007E1C  6E                 	db	110
   116  007E1D  69                 	db	105
   117  007E1E  65                 	db	101
   118  007E1F  72                 	db	114
   119  007E20  61                 	db	97
   120  007E21  20                 	db	32
   121  007E22  4D                 	db	77
   122  007E23  65                 	db	101
   123  007E24  63                 	db	99
   124  007E25  61                 	db	97
   125  007E26  2D                 	db	45
   126  007E27  45                 	db	69
   127  007E28  6C                 	db	108
   128  007E29  65                 	db	101
   129  007E2A  63                 	db	99
   130  007E2B  20                 	db	32
   131  007E2C  32                 	db	50
   132  007E2D  30                 	db	48
   133  007E2E  31                 	db	49
   134  007E2F  39                 	db	57
   135  007E30  2D                 	db	45
   136  007E31  31                 	db	49
   137  007E32  00                 	db	0
   138  0000                     _LATBbits	set	3978
   139  0000                     _PORTBbits	set	3969
   140  0000                     _TXREG	set	4013
   141  0000                     _RCSTAbits	set	4011
   142  0000                     _SPBRGH	set	4016
   143  0000                     _SPBRG	set	4015
   144  0000                     _TXSTAbits	set	4012
   145  0000                     _BAUDCONbits	set	4024
   146  0000                     _TRISCbits	set	3988
   147  0000                     _TRISBbits	set	3987
   148                           
   149                           ; #config settings
   150  0000                     
   151                           	psect	cinit
   152  007E60                     __pcinit:
   153                           	opt callstack 0
   154  007E60                     start_initialization:
   155                           	opt callstack 0
   156  007E60                     __initialization:
   157                           	opt callstack 0
   158                           
   159                           ; Initialize objects allocated to BANK0 (27 bytes)
   160                           ; load TBLPTR registers with __pidataBANK0
   161  007E60  0E18               	movlw	low __pidataBANK0
   162  007E62  6EF6               	movwf	tblptrl,c
   163  007E64  0E7E               	movlw	high __pidataBANK0
   164  007E66  6EF7               	movwf	tblptrh,c
   165  007E68  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   166  007E6A  6EF8               	movwf	tblptru,c
   167  007E6C  EE00  F060         	lfsr	0,__pdataBANK0
   168  007E70  EE10 F01B          	lfsr	1,27
   169  007E74                     copy_data0:
   170  007E74  0009               	tblrd		*+
   171  007E76  CFF5 FFEE          	movff	tablat,postinc0
   172  007E7A  50E5               	movf	postdec1,w,c
   173  007E7C  50E1               	movf	fsr1l,w,c
   174  007E7E  E1FA               	bnz	copy_data0
   175                           
   176                           ; Initialize objects allocated to COMRAM (45 bytes)
   177                           ; load TBLPTR registers with __pidataCOMRAM
   178  007E80  0E33               	movlw	low __pidataCOMRAM
   179  007E82  6EF6               	movwf	tblptrl,c
   180  007E84  0E7E               	movlw	high __pidataCOMRAM
   181  007E86  6EF7               	movwf	tblptrh,c
   182  007E88  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   183  007E8A  6EF8               	movwf	tblptru,c
   184  007E8C  EE00  F001         	lfsr	0,__pdataCOMRAM
   185  007E90  EE10 F02D          	lfsr	1,45
   186  007E94                     copy_data1:
   187  007E94  0009               	tblrd		*+
   188  007E96  CFF5 FFEE          	movff	tablat,postinc0
   189  007E9A  50E5               	movf	postdec1,w,c
   190  007E9C  50E1               	movf	fsr1l,w,c
   191  007E9E  E1FA               	bnz	copy_data1
   192                           
   193                           ; Clear objects allocated to COMRAM (16 bytes)
   194  007EA0  EE00  F02E         	lfsr	0,__pbssCOMRAM
   195  007EA4  0E10               	movlw	16
   196  007EA6                     clear_0:
   197  007EA6  6AEE               	clrf	postinc0,c
   198  007EA8  06E8               	decf	wreg,f,c
   199  007EAA  E1FD               	bnz	clear_0
   200  007EAC                     end_of_initialization:
   201                           	opt callstack 0
   202  007EAC                     __end_of__initialization:
   203                           	opt callstack 0
   204  007EAC  0100               	movlb	0
   205  007EAE  EF59  F03F         	goto	_main	;jump to C main() function
   206                           
   207                           	psect	bssCOMRAM
   208  00002E                     __pbssCOMRAM:
   209                           	opt callstack 0
   210  00002E                     _temporal3:
   211                           	opt callstack 0
   212  00002E                     	ds	2
   213  000030                     _temporal2:
   214                           	opt callstack 0
   215  000030                     	ds	2
   216  000032                     _temporal:
   217                           	opt callstack 0
   218  000032                     	ds	2
   219  000034                     _diguni:
   220                           	opt callstack 0
   221  000034                     	ds	2
   222  000036                     _digdec:
   223                           	opt callstack 0
   224  000036                     	ds	2
   225  000038                     _digcen:
   226                           	opt callstack 0
   227  000038                     	ds	2
   228  00003A                     _digmil:
   229                           	opt callstack 0
   230  00003A                     	ds	2
   231  00003C                     _digdmi:
   232                           	opt callstack 0
   233  00003C                     	ds	2
   234                           
   235                           	psect	dataCOMRAM
   236  000001                     __pdataCOMRAM:
   237                           	opt callstack 0
   238  000001                     _cadena4:
   239                           	opt callstack 0
   240  000001                     	ds	17
   241  000012                     _cadena3:
   242                           	opt callstack 0
   243  000012                     	ds	16
   244  000022                     _cadena1:
   245                           	opt callstack 0
   246  000022                     	ds	12
   247                           
   248                           	psect	dataBANK0
   249  000060                     __pdataBANK0:
   250                           	opt callstack 0
   251  000060                     _cadena2:
   252                           	opt callstack 0
   253  000060                     	ds	27
   254                           
   255                           	psect	cstackCOMRAM
   256  00003E                     __pcstackCOMRAM:
   257                           	opt callstack 0
   258  00003E                     ??_main:
   259                           
   260                           ; 1 bytes @ 0x0
   261  00003E                     	ds	2
   262  000040                     main@c:
   263                           	opt callstack 0
   264                           
   265                           ; 2 bytes @ 0x2
   266  000040                     	ds	2
   267  000042                     main@c_401:
   268                           	opt callstack 0
   269                           
   270                           ; 2 bytes @ 0x4
   271  000042                     	ds	2
   272  000044                     main@c_410:
   273                           	opt callstack 0
   274                           
   275                           ; 2 bytes @ 0x6
   276  000044                     	ds	2
   277  000046                     main@c_411:
   278                           	opt callstack 0
   279                           
   280                           ; 2 bytes @ 0x8
   281  000046                     	ds	2
   282                           
   283 ;;
   284 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   285 ;;
   286 ;; *************** function _main *****************
   287 ;; Defined at:
   288 ;;		line 51 in file "parfavaaar.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;  c               2    8[COMRAM] int 
   293 ;;  c               2    6[COMRAM] int 
   294 ;;  c               2    4[COMRAM] int 
   295 ;;  c               2    2[COMRAM] int 
   296 ;; Return value:  Size  Location     Type
   297 ;;                  1    wreg      void 
   298 ;; Registers used:
   299 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   300 ;; Tracked objects:
   301 ;;		On entry : 0/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   305 ;;      Params:         0       0       0       0       0       0       0       0       0
   306 ;;      Locals:         8       0       0       0       0       0       0       0       0
   307 ;;      Temps:          2       0       0       0       0       0       0       0       0
   308 ;;      Totals:        10       0       0       0       0       0       0       0       0
   309 ;;Total ram usage:       10 bytes
   310 ;; This function calls:
   311 ;;		Nothing
   312 ;; This function is called by:
   313 ;;		Startup code after reset
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317                           	psect	text0
   318  007EB2                     __ptext0:
   319                           	opt callstack 0
   320  007EB2                     _main:
   321                           	opt callstack 31
   322                           
   323                           ;parfavaaar.c: 52:     TRISBbits.RB0 = 0;
   324                           
   325                           ;incstack = 0
   326  007EB2  9093               	bcf	3987,0,c	;volatile
   327                           
   328                           ;parfavaaar.c: 55:     TRISCbits.RC6 = 0;
   329  007EB4  9C94               	bcf	3988,6,c	;volatile
   330                           
   331                           ;parfavaaar.c: 56:     BAUDCONbits.BRG16 = 0;
   332  007EB6  96B8               	bcf	4024,3,c	;volatile
   333                           
   334                           ;parfavaaar.c: 57:     TXSTAbits.SYNC = 0;
   335  007EB8  98AC               	bcf	4012,4,c	;volatile
   336                           
   337                           ;parfavaaar.c: 58:     TXSTAbits.BRGH = 0;
   338  007EBA  94AC               	bcf	4012,2,c	;volatile
   339                           
   340                           ;parfavaaar.c: 59:     SPBRG = 38;
   341  007EBC  0E26               	movlw	38
   342  007EBE  6EAF               	movwf	4015,c	;volatile
   343                           
   344                           ;parfavaaar.c: 60:     SPBRGH = 0;
   345  007EC0  0E00               	movlw	0
   346  007EC2  6EB0               	movwf	4016,c	;volatile
   347                           
   348                           ;parfavaaar.c: 61:     RCSTAbits.SPEN = 1;
   349  007EC4  8EAB               	bsf	4011,7,c	;volatile
   350                           
   351                           ;parfavaaar.c: 62:     RCSTAbits.CREN = 1;
   352  007EC6  88AB               	bsf	4011,4,c	;volatile
   353                           
   354                           ;parfavaaar.c: 63:     TXSTAbits.TXEN = 1;
   355  007EC8  8AAC               	bsf	4012,5,c	;volatile
   356  007ECA                     l57:
   357                           
   358                           ;parfavaaar.c: 69:         for (int c=0;c<11;c++) {
   359  007ECA  0E00               	movlw	0
   360  007ECC  6E41               	movwf	main@c+1,c
   361  007ECE  0E00               	movlw	0
   362  007ED0  6E40               	movwf	main@c,c
   363  007ED2                     l874:
   364                           
   365                           ;parfavaaar.c: 70:             TXREG = cadena1[c];
   366  007ED2  0E22               	movlw	low _cadena1
   367  007ED4  2440               	addwf	main@c,w,c
   368  007ED6  6ED9               	movwf	fsr2l,c
   369  007ED8  0E00               	movlw	high _cadena1
   370  007EDA  2041               	addwfc	main@c+1,w,c
   371  007EDC  6EDA               	movwf	fsr2h,c
   372  007EDE  50DF               	movf	indf2,w,c
   373  007EE0  6EAD               	movwf	4013,c	;volatile
   374  007EE2                     l60:
   375  007EE2  A2AC               	btfss	4012,1,c	;volatile
   376  007EE4  D7FE               	goto	l60
   377                           
   378                           ;parfavaaar.c: 72:         }
   379  007EE6  4A40               	infsnz	main@c,f,c
   380  007EE8  2A41               	incf	main@c+1,f,c
   381  007EEA  BE41               	btfsc	main@c+1,7,c
   382  007EEC  D7F2               	goto	l874
   383  007EEE  5041               	movf	main@c+1,w,c
   384  007EF0  E104               	bnz	u210
   385  007EF2  0E0B               	movlw	11
   386  007EF4  5C40               	subwf	main@c,w,c
   387  007EF6  A0D8               	btfss	status,0,c
   388  007EF8  D7EC               	goto	l874
   389  007EFA                     u210:
   390                           
   391                           ;parfavaaar.c: 73:         TXREG = 0x0A;
   392  007EFA  0E0A               	movlw	10
   393  007EFC  6EAD               	movwf	4013,c	;volatile
   394  007EFE                     l63:
   395  007EFE  A2AC               	btfss	4012,1,c	;volatile
   396  007F00  D7FE               	goto	l63
   397                           
   398                           ;parfavaaar.c: 75:         TXREG = 0x0D;
   399  007F02  0E0D               	movlw	13
   400  007F04  6EAD               	movwf	4013,c	;volatile
   401  007F06                     l66:
   402  007F06  A2AC               	btfss	4012,1,c	;volatile
   403  007F08  D7FE               	goto	l66
   404                           
   405                           ;parfavaaar.c: 77:         for (int c=0;c<26;c++) {
   406  007F0A  0E00               	movlw	0
   407  007F0C  6E43               	movwf	main@c_401+1,c
   408  007F0E  0E00               	movlw	0
   409  007F10  6E42               	movwf	main@c_401,c
   410  007F12                     l890:
   411                           
   412                           ;parfavaaar.c: 78:             TXREG = cadena2[c];
   413  007F12  0E60               	movlw	low _cadena2
   414  007F14  2442               	addwf	main@c_401,w,c
   415  007F16  6ED9               	movwf	fsr2l,c
   416  007F18  0E00               	movlw	high _cadena2
   417  007F1A  2043               	addwfc	main@c_401+1,w,c
   418  007F1C  6EDA               	movwf	fsr2h,c
   419  007F1E  50DF               	movf	indf2,w,c
   420  007F20  6EAD               	movwf	4013,c	;volatile
   421  007F22                     l71:
   422  007F22  A2AC               	btfss	4012,1,c	;volatile
   423  007F24  D7FE               	goto	l71
   424                           
   425                           ;parfavaaar.c: 80:         }
   426  007F26  4A42               	infsnz	main@c_401,f,c
   427  007F28  2A43               	incf	main@c_401+1,f,c
   428  007F2A  BE43               	btfsc	main@c_401+1,7,c
   429  007F2C  D7F2               	goto	l890
   430  007F2E  5043               	movf	main@c_401+1,w,c
   431  007F30  E104               	bnz	u250
   432  007F32  0E1A               	movlw	26
   433  007F34  5C42               	subwf	main@c_401,w,c
   434  007F36  A0D8               	btfss	status,0,c
   435  007F38  D7EC               	goto	l890
   436  007F3A                     u250:
   437                           
   438                           ;parfavaaar.c: 81:         TXREG = 0x0A;
   439  007F3A  0E0A               	movlw	10
   440  007F3C  6EAD               	movwf	4013,c	;volatile
   441  007F3E                     l74:
   442  007F3E  A2AC               	btfss	4012,1,c	;volatile
   443  007F40  D7FE               	goto	l74
   444                           
   445                           ;parfavaaar.c: 83:         TXREG = 0x0D;
   446  007F42  0E0D               	movlw	13
   447  007F44  6EAD               	movwf	4013,c	;volatile
   448  007F46                     l77:
   449  007F46  A2AC               	btfss	4012,1,c	;volatile
   450  007F48  D7FE               	goto	l77
   451                           
   452                           ;parfavaaar.c: 85:         if (PORTBbits.RB0 == 1){
   453  007F4A  A081               	btfss	3969,0,c	;volatile
   454  007F4C  D019               	goto	l912
   455                           
   456                           ;parfavaaar.c: 86:             for (int c=0;c<15;c++) {
   457  007F4E  0E00               	movlw	0
   458  007F50  6E45               	movwf	main@c_410+1,c
   459  007F52  0E00               	movlw	0
   460  007F54  6E44               	movwf	main@c_410,c
   461  007F56                     l906:
   462                           
   463                           ;parfavaaar.c: 87:                 TXREG = cadena3[c];
   464  007F56  0E12               	movlw	low _cadena3
   465  007F58  2444               	addwf	main@c_410,w,c
   466  007F5A  6ED9               	movwf	fsr2l,c
   467  007F5C  0E00               	movlw	high _cadena3
   468  007F5E  2045               	addwfc	main@c_410+1,w,c
   469  007F60  6EDA               	movwf	fsr2h,c
   470  007F62  50DF               	movf	indf2,w,c
   471  007F64  6EAD               	movwf	4013,c	;volatile
   472  007F66                     l83:
   473  007F66  A2AC               	btfss	4012,1,c	;volatile
   474  007F68  D7FE               	goto	l83
   475                           
   476                           ;parfavaaar.c: 89:             }
   477  007F6A  4A44               	infsnz	main@c_410,f,c
   478  007F6C  2A45               	incf	main@c_410+1,f,c
   479  007F6E  BE45               	btfsc	main@c_410+1,7,c
   480  007F70  D7F2               	goto	l906
   481  007F72  5045               	movf	main@c_410+1,w,c
   482  007F74  E11D               	bnz	l924
   483  007F76  0E0F               	movlw	15
   484  007F78  5C44               	subwf	main@c_410,w,c
   485  007F7A  B0D8               	btfsc	status,0,c
   486  007F7C  D019               	goto	u320
   487  007F7E  D7EB               	goto	l906
   488  007F80                     l912:
   489                           
   490                           ;parfavaaar.c: 92:             for (int c=0;c<16;c++) {
   491  007F80  0E00               	movlw	0
   492  007F82  6E47               	movwf	main@c_411+1,c
   493  007F84  0E00               	movlw	0
   494  007F86  6E46               	movwf	main@c_411,c
   495  007F88                     l918:
   496                           
   497                           ;parfavaaar.c: 93:                 TXREG = cadena4[c];
   498  007F88  0E01               	movlw	low _cadena4
   499  007F8A  2446               	addwf	main@c_411,w,c
   500  007F8C  6ED9               	movwf	fsr2l,c
   501  007F8E  0E00               	movlw	high _cadena4
   502  007F90  2047               	addwfc	main@c_411+1,w,c
   503  007F92  6EDA               	movwf	fsr2h,c
   504  007F94  50DF               	movf	indf2,w,c
   505  007F96  6EAD               	movwf	4013,c	;volatile
   506  007F98                     l89:
   507  007F98  A2AC               	btfss	4012,1,c	;volatile
   508  007F9A  D7FE               	goto	l89
   509                           
   510                           ;parfavaaar.c: 95:             }
   511  007F9C  4A46               	infsnz	main@c_411,f,c
   512  007F9E  2A47               	incf	main@c_411+1,f,c
   513  007FA0  BE47               	btfsc	main@c_411+1,7,c
   514  007FA2  D7F2               	goto	l918
   515  007FA4  5047               	movf	main@c_411+1,w,c
   516  007FA6  E104               	bnz	u320
   517  007FA8  0E10               	movlw	16
   518  007FAA  5C46               	subwf	main@c_411,w,c
   519  007FAC  A0D8               	btfss	status,0,c
   520  007FAE  D7EC               	goto	l918
   521  007FB0                     u320:
   522  007FB0                     l924:
   523                           
   524                           ;parfavaaar.c: 97:         TXREG = 0x0A;
   525  007FB0  0E0A               	movlw	10
   526  007FB2  6EAD               	movwf	4013,c	;volatile
   527  007FB4                     l92:
   528  007FB4  A2AC               	btfss	4012,1,c	;volatile
   529  007FB6  D7FE               	goto	l92
   530                           
   531                           ;parfavaaar.c: 99:         TXREG = 0x0D;
   532  007FB8  0E0D               	movlw	13
   533  007FBA  6EAD               	movwf	4013,c	;volatile
   534  007FBC                     l95:
   535  007FBC  A2AC               	btfss	4012,1,c	;volatile
   536  007FBE  D7FE               	goto	l95
   537                           
   538                           ;parfavaaar.c: 101:         TXREG = 0x0A;
   539  007FC0  0E0A               	movlw	10
   540  007FC2  6EAD               	movwf	4013,c	;volatile
   541  007FC4                     l98:
   542  007FC4  A2AC               	btfss	4012,1,c	;volatile
   543  007FC6  D7FE               	goto	l98
   544                           
   545                           ;parfavaaar.c: 103:         TXREG = 0x0D;
   546  007FC8  0E0D               	movlw	13
   547  007FCA  6EAD               	movwf	4013,c	;volatile
   548  007FCC                     l101:
   549  007FCC  A2AC               	btfss	4012,1,c	;volatile
   550  007FCE  D7FE               	goto	l101
   551                           
   552                           ;parfavaaar.c: 105:         _delay((unsigned long)((500)*(48000000UL/4000.0)));
   553  007FD0  0E1F               	movlw	31
   554  007FD2  6E3F               	movwf	(??_main+1)& (0+255),c
   555  007FD4  0E71               	movlw	113
   556  007FD6  6E3E               	movwf	??_main& (0+255),c
   557  007FD8  0E1E               	movlw	30
   558  007FDA                     u397:
   559  007FDA  2EE8               	decfsz	wreg,f,c
   560  007FDC  D7FE               	bra	u397
   561  007FDE  2E3E               	decfsz	??_main& (0+255),f,c
   562  007FE0  D7FC               	bra	u397
   563  007FE2  2E3F               	decfsz	(??_main+1)& (0+255),f,c
   564  007FE4  D7FA               	bra	u397
   565  007FE6  D000               	nop2	
   566                           
   567                           ;parfavaaar.c: 106:         LATBbits.LB0 = !LATBbits.LB0;
   568  007FE8  B08A               	btfsc	3978,0,c	;volatile
   569  007FEA  D003               	goto	u370
   570  007FEC  6A3E               	clrf	??_main& (0+255),c
   571  007FEE  2A3E               	incf	??_main& (0+255),f,c
   572  007FF0  D001               	goto	u388
   573  007FF2                     u370:
   574  007FF2  6A3E               	clrf	??_main& (0+255),c
   575  007FF4                     u388:
   576  007FF4  508A               	movf	3978,w,c	;volatile
   577  007FF6  183E               	xorwf	??_main,w,c
   578  007FF8  0BFE               	andlw	-2
   579  007FFA  183E               	xorwf	??_main,w,c
   580  007FFC  6E8A               	movwf	3978,c	;volatile
   581  007FFE  D765               	goto	l57
   582  008000                     __end_of_main:
   583                           	opt callstack 0
   584  0000                     
   585                           	psect	rparam
   586  0000                     tosu	equ	0xFFF
   587                           tosh	equ	0xFFE
   588                           tosl	equ	0xFFD
   589                           stkptr	equ	0xFFC
   590                           pclatu	equ	0xFFB
   591                           pclath	equ	0xFFA
   592                           pcl	equ	0xFF9
   593                           tblptru	equ	0xFF8
   594                           tblptrh	equ	0xFF7
   595                           tblptrl	equ	0xFF6
   596                           tablat	equ	0xFF5
   597                           prodh	equ	0xFF4
   598                           prodl	equ	0xFF3
   599                           indf0	equ	0xFEF
   600                           postinc0	equ	0xFEE
   601                           postdec0	equ	0xFED
   602                           preinc0	equ	0xFEC
   603                           plusw0	equ	0xFEB
   604                           fsr0h	equ	0xFEA
   605                           fsr0l	equ	0xFE9
   606                           wreg	equ	0xFE8
   607                           indf1	equ	0xFE7
   608                           postinc1	equ	0xFE6
   609                           postdec1	equ	0xFE5
   610                           preinc1	equ	0xFE4
   611                           plusw1	equ	0xFE3
   612                           fsr1h	equ	0xFE2
   613                           fsr1l	equ	0xFE1
   614                           bsr	equ	0xFE0
   615                           indf2	equ	0xFDF
   616                           postinc2	equ	0xFDE
   617                           postdec2	equ	0xFDD
   618                           preinc2	equ	0xFDC
   619                           plusw2	equ	0xFDB
   620                           fsr2h	equ	0xFDA
   621                           fsr2l	equ	0xFD9
   622                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        72
    BSS         16
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     10      71
    BANK0           160      0      27
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0     272
                                              0 COMRAM    10    10      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      1B       5       16.9%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      A      47       1       74.7%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      62      20        0.0%
DATA                 0      0      62       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Jun 12 08:51:45 2019

                     l60 7EE2                       l71 7F22                       l63 7EFE  
                     l57 7ECA                       l74 7F3E                       l66 7F06  
                     l83 7F66                       l92 7FB4                       l77 7F46  
                     l95 7FBC                       l89 7F98                       l98 7FC4  
     __CFG_FOSC$XTPLL_XT 000000                      l101 7FCC                      l912 7F80  
                    l906 7F56                      l924 7FB0                      l918 7F88  
                    l890 7F12                      l874 7ED2                      u210 7EFA  
                    u320 7FB0                      u250 7F3A                      u370 7FF2  
                    u388 7FF4                      u397 7FDA             __CFG_BOR$OFF 000000  
                    wreg 000FE8             __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000  
           __CFG_PWRT$ON 000000                     _main 7EB2                     indf2 000FDF  
                   fsr1l 000FE1                     fsr2l 000FD9                     start 0000  
          __CFG_MCLRE$ON 000000             ___param_bank 000000            __CFG_PLLDIV$1 000000  
         __CFG_CCP2MX$ON 000000                    ?_main 003E                    _SPBRG 000FAF  
                  _TXREG 000FAD                    main@c 0040                    tablat 000FF5  
                  status 000FD8          __initialization 7E60             __end_of_main 8000  
                 ??_main 003E            __activetblptr 000000                   _SPBRGH 000FB0  
                 _digdec 0036                   _digcen 0038                   _digdmi 003C  
                 _digmil 003A                   _diguni 0034                   clear_0 7EA6  
           __pdataCOMRAM 0001                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 7EAC  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 003E  
           __pidataBANK0 7E18                  __Hparam 0000                  __Lparam 0000  
                _cadena1 0022                  _cadena2 0060                  _cadena3 0012  
                _cadena4 0001                  __pcinit 7E60                  __ramtop 0800  
                __ptext0 7EB2     end_of_initialization 7EAC                _RCSTAbits 000FAB  
                postdec1 000FE5                  postinc0 000FEE                _PORTBbits 000F81  
              _TRISBbits 000F93                _TRISCbits 000F94                _TXSTAbits 000FAC  
            _BAUDCONbits 000FB8            __pidataCOMRAM 7E33      start_initialization 7E60  
            __pdataBANK0 0060              __pbssCOMRAM 002E                 _LATBbits 000F8A  
              _temporal2 0030                _temporal3 002E                main@c_401 0042  
              main@c_410 0044                main@c_411 0046                copy_data0 7E74  
              copy_data1 7E94                 __Hrparam 0000                 __Lrparam 0000  
          __size_of_main 014E                 _temporal 0032    __CFG_CPUDIV$OSC1_PLL2 000000  
