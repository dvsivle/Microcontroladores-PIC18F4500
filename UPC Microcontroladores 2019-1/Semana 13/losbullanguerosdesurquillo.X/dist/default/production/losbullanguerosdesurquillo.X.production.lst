

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Thu Jun 13 18:21:14 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    30  0000                     
    31                           ; Version 2.05
    32                           ; Generated 20/12/2018 GMT
    33                           ; 
    34                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC18F4550 Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     
    66                           	psect	idataCOMRAM
    67  000460                     __pidataCOMRAM:
    68                           	opt callstack 0
    69                           
    70                           ;initializer for _mensaje_blighton
    71  000460  42                 	db	66
    72  000461  61                 	db	97
    73  000462  63                 	db	99
    74  000463  6B                 	db	107
    75  000464  6C                 	db	108
    76  000465  69                 	db	105
    77  000466  67                 	db	103
    78  000467  68                 	db	104
    79  000468  74                 	db	116
    80  000469  20                 	db	32
    81  00046A  65                 	db	101
    82  00046B  6E                 	db	110
    83  00046C  63                 	db	99
    84  00046D  65                 	db	101
    85  00046E  6E                 	db	110
    86  00046F  64                 	db	100
    87  000470  69                 	db	105
    88  000471  64                 	db	100
    89  000472  6F                 	db	111
    90  000473  00                 	db	0
    91                           
    92                           ;initializer for _mensaje_blightoff
    93  000474  42                 	db	66
    94  000475  61                 	db	97
    95  000476  63                 	db	99
    96  000477  6B                 	db	107
    97  000478  6C                 	db	108
    98  000479  69                 	db	105
    99  00047A  67                 	db	103
   100  00047B  68                 	db	104
   101  00047C  74                 	db	116
   102  00047D  20                 	db	32
   103  00047E  61                 	db	97
   104  00047F  70                 	db	112
   105  000480  61                 	db	97
   106  000481  67                 	db	103
   107  000482  61                 	db	97
   108  000483  6F                 	db	111
   109  000484  00                 	db	0
   110                           
   111                           ;initializer for _mensaje_lcd2
   112  000485  4D                 	db	77
   113  000486  69                 	db	105
   114  000487  63                 	db	99
   115  000488  72                 	db	114
   116  000489  6F                 	db	111
   117  00048A  63                 	db	99
   118  00048B  6F                 	db	111
   119  00048C  6E                 	db	110
   120  00048D  74                 	db	116
   121  00048E  72                 	db	114
   122  00048F  6F                 	db	111
   123  000490  6C                 	db	108
   124  000491  61                 	db	97
   125  000492  64                 	db	100
   126  000493  6F                 	db	111
   127  000494  72                 	db	114
   128  000495  65                 	db	101
   129  000496  73                 	db	115
   130  000497  00                 	db	0
   131                           
   132                           ;initializer for _mensaje_lcd1
   133  000498  55                 	db	85
   134  000499  50                 	db	80
   135  00049A  43                 	db	67
   136  00049B  20                 	db	32
   137  00049C  32                 	db	50
   138  00049D  30                 	db	48
   139  00049E  31                 	db	49
   140  00049F  39                 	db	57
   141  0004A0  2D                 	db	45
   142  0004A1  31                 	db	49
   143  0004A2  00                 	db	0
   144                           
   145                           	psect	idataBANK0
   146  000312                     __pidataBANK0:
   147                           	opt callstack 0
   148                           
   149                           ;initializer for _mensaje_pserial3
   150  000312  4A                 	db	74
   151  000313  61                 	db	97
   152  000314  6A                 	db	106
   153  000315  61                 	db	97
   154  000316  6A                 	db	106
   155  000317  61                 	db	97
   156  000318  20                 	db	32
   157  000319  65                 	db	101
   158  00031A  72                 	db	114
   159  00031B  61                 	db	97
   160  00031C  20                 	db	32
   161  00031D  62                 	db	98
   162  00031E  72                 	db	114
   163  00031F  6F                 	db	111
   164  000320  6D                 	db	109
   165  000321  61                 	db	97
   166  000322  2E                 	db	46
   167  000323  20                 	db	32
   168  000324  27                 	db	39
   169  000325  51                 	db	81
   170  000326  27                 	db	39
   171  000327  20                 	db	32
   172  000328  70                 	db	112
   173  000329  61                 	db	97
   174  00032A  72                 	db	114
   175  00032B  61                 	db	97
   176  00032C  20                 	db	32
   177  00032D  65                 	db	101
   178  00032E  6E                 	db	110
   179  00032F  63                 	db	99
   180  000330  65                 	db	101
   181  000331  6E                 	db	110
   182  000332  64                 	db	100
   183  000333  65                 	db	101
   184  000334  72                 	db	114
   185  000335  20                 	db	32
   186  000336  62                 	db	98
   187  000337  61                 	db	97
   188  000338  63                 	db	99
   189  000339  6B                 	db	107
   190  00033A  6C                 	db	108
   191  00033B  69                 	db	105
   192  00033C  67                 	db	103
   193  00033D  68                 	db	104
   194  00033E  74                 	db	116
   195  00033F  00                 	db	0
   196                           
   197                           ;initializer for _mensaje_error
   198  000340  4F                 	db	79
   199  000341  65                 	db	101
   200  000342  20                 	db	32
   201  000343  68                 	db	104
   202  000344  61                 	db	97
   203  000345  73                 	db	115
   204  000346  20                 	db	32
   205  000347  70                 	db	112
   206  000348  72                 	db	114
   207  000349  65                 	db	101
   208  00034A  73                 	db	115
   209  00034B  69                 	db	105
   210  00034C  6F                 	db	111
   211  00034D  6E                 	db	110
   212  00034E  61                 	db	97
   213  00034F  6F                 	db	111
   214  000350  20                 	db	32
   215  000351  6F                 	db	111
   216  000352  70                 	db	112
   217  000353  63                 	db	99
   218  000354  69                 	db	105
   219  000355  6F                 	db	111
   220  000356  6E                 	db	110
   221  000357  20                 	db	32
   222  000358  69                 	db	105
   223  000359  6E                 	db	110
   224  00035A  76                 	db	118
   225  00035B  61                 	db	97
   226  00035C  6C                 	db	108
   227  00035D  69                 	db	105
   228  00035E  64                 	db	100
   229  00035F  61                 	db	97
   230  000360  00                 	db	0
   231                           
   232                           ;initializer for _mensaje_pserial4
   233  000361  27                 	db	39
   234  000362  52                 	db	82
   235  000363  27                 	db	39
   236  000364  20                 	db	32
   237  000365  70                 	db	112
   238  000366  61                 	db	97
   239  000367  72                 	db	114
   240  000368  61                 	db	97
   241  000369  20                 	db	32
   242  00036A  61                 	db	97
   243  00036B  70                 	db	112
   244  00036C  61                 	db	97
   245  00036D  67                 	db	103
   246  00036E  61                 	db	97
   247  00036F  72                 	db	114
   248  000370  20                 	db	32
   249  000371  62                 	db	98
   250  000372  61                 	db	97
   251  000373  63                 	db	99
   252  000374  6B                 	db	107
   253  000375  6C                 	db	108
   254  000376  69                 	db	105
   255  000377  67                 	db	103
   256  000378  68                 	db	104
   257  000379  74                 	db	116
   258  00037A  00                 	db	0
   259                           
   260                           ;initializer for _mensaje_pserial1
   261  00037B  55                 	db	85
   262  00037C  50                 	db	80
   263  00037D  43                 	db	67
   264  00037E  20                 	db	32
   265  00037F  4D                 	db	77
   266  000380  69                 	db	105
   267  000381  63                 	db	99
   268  000382  72                 	db	114
   269  000383  6F                 	db	111
   270  000384  63                 	db	99
   271  000385  6F                 	db	111
   272  000386  6E                 	db	110
   273  000387  74                 	db	116
   274  000388  72                 	db	114
   275  000389  6F                 	db	111
   276  00038A  6C                 	db	108
   277  00038B  61                 	db	97
   278  00038C  64                 	db	100
   279  00038D  6F                 	db	111
   280  00038E  72                 	db	114
   281  00038F  65                 	db	101
   282  000390  73                 	db	115
   283  000391  00                 	db	0
   284                           
   285                           	psect	idataBANK1
   286  000514                     __pidataBANK1:
   287                           	opt callstack 0
   288                           
   289                           ;initializer for _mensaje_pserial2
   290  000514  4D                 	db	77
   291  000515  65                 	db	101
   292  000516  6E                 	db	110
   293  000517  75                 	db	117
   294  000518  3A                 	db	58
   295  000519  20                 	db	32
   296  00051A  50                 	db	80
   297  00051B  61                 	db	97
   298  00051C  70                 	db	112
   299  00051D  61                 	db	97
   300  00051E  20                 	db	32
   301  00051F  61                 	db	97
   302  000520  20                 	db	32
   303  000521  6C                 	db	108
   304  000522  61                 	db	97
   305  000523  20                 	db	32
   306  000524  68                 	db	104
   307  000525  75                 	db	117
   308  000526  61                 	db	97
   309  000527  6E                 	db	110
   310  000528  63                 	db	99
   311  000529  61                 	db	97
   312  00052A  69                 	db	105
   313  00052B  6E                 	db	110
   314  00052C  61                 	db	97
   315  00052D  20                 	db	32
   316  00052E  63                 	db	99
   317  00052F  6F                 	db	111
   318  000530  6E                 	db	110
   319  000531  20                 	db	32
   320  000532  74                 	db	116
   321  000533  61                 	db	97
   322  000534  6C                 	db	108
   323  000535  6C                 	db	108
   324  000536  61                 	db	97
   325  000537  72                 	db	114
   326  000538  69                 	db	105
   327  000539  6E                 	db	110
   328  00053A  65                 	db	101
   329  00053B  73                 	db	115
   330  00053C  20                 	db	32
   331  00053D  76                 	db	118
   332  00053E  65                 	db	101
   333  00053F  72                 	db	114
   334  000540  64                 	db	100
   335  000541  65                 	db	101
   336  000542  73                 	db	115
   337  000543  00                 	db	0
   338  0000                     _PORTD	set	3971
   339  0000                     _LATD	set	3980
   340  0000                     _LATDbits	set	3980
   341  0000                     _RCREG	set	4014
   342  0000                     _PIR1bits	set	3998
   343  0000                     _LATCbits	set	3979
   344  0000                     _TXREG	set	4013
   345  0000                     _TRISD	set	3989
   346  0000                     _PIE1bits	set	3997
   347  0000                     _INTCONbits	set	4082
   348  0000                     _RCSTAbits	set	4011
   349  0000                     _SPBRGH	set	4016
   350  0000                     _SPBRG	set	4015
   351  0000                     _TXSTAbits	set	4012
   352  0000                     _BAUDCONbits	set	4024
   353  0000                     _TRISCbits	set	3988
   354                           
   355                           ; #config settings
   356  0000                     
   357                           	psect	cinit
   358  000392                     __pcinit:
   359                           	opt callstack 0
   360  000392                     start_initialization:
   361                           	opt callstack 0
   362  000392                     __initialization:
   363                           	opt callstack 0
   364                           
   365                           ; Initialize objects allocated to BANK1 (48 bytes)
   366                           ; load TBLPTR registers with __pidataBANK1
   367  000392  0E14               	movlw	low __pidataBANK1
   368  000394  6EF6               	movwf	tblptrl,c
   369  000396  0E05               	movlw	high __pidataBANK1
   370  000398  6EF7               	movwf	tblptrh,c
   371  00039A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   372  00039C  6EF8               	movwf	tblptru,c
   373  00039E  EE01  F000         	lfsr	0,__pdataBANK1
   374  0003A2  EE10 F030          	lfsr	1,48
   375  0003A6                     copy_data0:
   376  0003A6  0009               	tblrd		*+
   377  0003A8  CFF5 FFEE          	movff	tablat,postinc0
   378  0003AC  50E5               	movf	postdec1,w,c
   379  0003AE  50E1               	movf	fsr1l,w,c
   380  0003B0  E1FA               	bnz	copy_data0
   381                           
   382                           ; Initialize objects allocated to BANK0 (128 bytes)
   383                           ; load TBLPTR registers with __pidataBANK0
   384  0003B2  0E12               	movlw	low __pidataBANK0
   385  0003B4  6EF6               	movwf	tblptrl,c
   386  0003B6  0E03               	movlw	high __pidataBANK0
   387  0003B8  6EF7               	movwf	tblptrh,c
   388  0003BA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   389  0003BC  6EF8               	movwf	tblptru,c
   390  0003BE  EE00  F060         	lfsr	0,__pdataBANK0
   391  0003C2  EE10 F080          	lfsr	1,128
   392  0003C6                     copy_data1:
   393  0003C6  0009               	tblrd		*+
   394  0003C8  CFF5 FFEE          	movff	tablat,postinc0
   395  0003CC  50E5               	movf	postdec1,w,c
   396  0003CE  50E1               	movf	fsr1l,w,c
   397  0003D0  E1FA               	bnz	copy_data1
   398                           
   399                           ; Initialize objects allocated to COMRAM (67 bytes)
   400                           ; load TBLPTR registers with __pidataCOMRAM
   401  0003D2  0E60               	movlw	low __pidataCOMRAM
   402  0003D4  6EF6               	movwf	tblptrl,c
   403  0003D6  0E04               	movlw	high __pidataCOMRAM
   404  0003D8  6EF7               	movwf	tblptrh,c
   405  0003DA  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   406  0003DC  6EF8               	movwf	tblptru,c
   407  0003DE  EE00  F001         	lfsr	0,__pdataCOMRAM
   408  0003E2  EE10 F043          	lfsr	1,67
   409  0003E6                     copy_data2:
   410  0003E6  0009               	tblrd		*+
   411  0003E8  CFF5 FFEE          	movff	tablat,postinc0
   412  0003EC  50E5               	movf	postdec1,w,c
   413  0003EE  50E1               	movf	fsr1l,w,c
   414  0003F0  E1FA               	bnz	copy_data2
   415                           
   416                           ; Clear objects allocated to COMRAM (1 bytes)
   417  0003F2  6A5B               	clrf	__pbssCOMRAM& (0+255),c
   418  0003F4                     end_of_initialization:
   419                           	opt callstack 0
   420  0003F4                     __end_of__initialization:
   421                           	opt callstack 0
   422  0003F4  905C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   423  0003F6  925C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   424  0003F8  0100               	movlb	0
   425  0003FA  EF09  F000         	goto	_main	;jump to C main() function
   426                           
   427                           	psect	bssCOMRAM
   428  00005B                     __pbssCOMRAM:
   429                           	opt callstack 0
   430  00005B                     _estado:
   431                           	opt callstack 0
   432  00005B                     	ds	1
   433                           
   434                           	psect	dataCOMRAM
   435  000001                     __pdataCOMRAM:
   436                           	opt callstack 0
   437  000001                     _mensaje_blighton:
   438                           	opt callstack 0
   439  000001                     	ds	20
   440  000015                     _mensaje_blightoff:
   441                           	opt callstack 0
   442  000015                     	ds	17
   443  000026                     _mensaje_lcd2:
   444                           	opt callstack 0
   445  000026                     	ds	19
   446  000039                     _mensaje_lcd1:
   447                           	opt callstack 0
   448  000039                     	ds	11
   449                           
   450                           	psect	dataBANK0
   451  000060                     __pdataBANK0:
   452                           	opt callstack 0
   453  000060                     _mensaje_pserial3:
   454                           	opt callstack 0
   455  000060                     	ds	46
   456  00008E                     _mensaje_error:
   457                           	opt callstack 0
   458  00008E                     	ds	33
   459  0000AF                     _mensaje_pserial4:
   460                           	opt callstack 0
   461  0000AF                     	ds	26
   462  0000C9                     _mensaje_pserial1:
   463                           	opt callstack 0
   464  0000C9                     	ds	23
   465                           
   466                           	psect	dataBANK1
   467  000100                     __pdataBANK1:
   468                           	opt callstack 0
   469  000100                     _mensaje_pserial2:
   470                           	opt callstack 0
   471  000100                     	ds	48
   472                           
   473                           	psect	cstackCOMRAM
   474  000044                     __pcstackCOMRAM:
   475                           	opt callstack 0
   476  000044                     ENVIA_NIBBLE@dato:
   477                           	opt callstack 0
   478  000044                     LEER_LCD@aux:
   479                           	opt callstack 0
   480                           
   481                           ; 1 bytes @ 0x0
   482  000044                     	ds	1
   483  000045                     ENVIA_CHAR@dato:
   484                           	opt callstack 0
   485  000045                     ENVIA_LCD_CMD@dato:
   486                           	opt callstack 0
   487                           
   488                           ; 1 bytes @ 0x1
   489  000045                     	ds	1
   490  000046                     ENVIA_CHAR@aux:
   491                           	opt callstack 0
   492  000046                     ENVIA_LCD_CMD@aux:
   493                           	opt callstack 0
   494                           
   495                           ; 1 bytes @ 0x2
   496  000046                     	ds	1
   497  000047                     ??_LCD_CONFIG:
   498  000047                     POS_CURSOR@columna:
   499                           	opt callstack 0
   500  000047                     CURSOR_ONOFF@estado:
   501                           	opt callstack 0
   502  000047                     ESCRIBE_MENSAJE@cadena:
   503                           	opt callstack 0
   504                           
   505                           ; 2 bytes @ 0x3
   506  000047                     	ds	1
   507  000048                     POS_CURSOR@fila:
   508                           	opt callstack 0
   509                           
   510                           ; 1 bytes @ 0x4
   511  000048                     	ds	1
   512  000049                     ESCRIBE_MENSAJE@tam:
   513                           	opt callstack 0
   514                           
   515                           ; 1 bytes @ 0x5
   516  000049                     	ds	1
   517  00004A                     ESCRIBE_MENSAJE@i:
   518                           	opt callstack 0
   519                           
   520                           ; 1 bytes @ 0x6
   521  00004A                     	ds	1
   522  00004B                     ??_main:
   523                           
   524                           ; 1 bytes @ 0x7
   525  00004B                     	ds	2
   526  00004D                     main@c:
   527                           	opt callstack 0
   528                           
   529                           ; 2 bytes @ 0x9
   530  00004D                     	ds	2
   531  00004F                     main@c_456:
   532                           	opt callstack 0
   533                           
   534                           ; 2 bytes @ 0xB
   535  00004F                     	ds	2
   536  000051                     main@c_457:
   537                           	opt callstack 0
   538                           
   539                           ; 2 bytes @ 0xD
   540  000051                     	ds	2
   541  000053                     main@c_458:
   542                           	opt callstack 0
   543                           
   544                           ; 2 bytes @ 0xF
   545  000053                     	ds	2
   546  000055                     main@c_465:
   547                           	opt callstack 0
   548                           
   549                           ; 2 bytes @ 0x11
   550  000055                     	ds	2
   551  000057                     main@c_466:
   552                           	opt callstack 0
   553                           
   554                           ; 2 bytes @ 0x13
   555  000057                     	ds	2
   556  000059                     main@c_467:
   557                           	opt callstack 0
   558                           
   559                           ; 2 bytes @ 0x15
   560  000059                     	ds	2
   561                           
   562 ;;
   563 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   564 ;;
   565 ;; *************** function _main *****************
   566 ;; Defined at:
   567 ;;		line 32 in file "nenene.c"
   568 ;; Parameters:    Size  Location     Type
   569 ;;		None
   570 ;; Auto vars:     Size  Location     Type
   571 ;;  c               2   21[COMRAM] int 
   572 ;;  c               2   19[COMRAM] int 
   573 ;;  c               2   17[COMRAM] int 
   574 ;;  c               2   15[COMRAM] int 
   575 ;;  c               2   13[COMRAM] int 
   576 ;;  c               2   11[COMRAM] int 
   577 ;;  c               2    9[COMRAM] int 
   578 ;; Return value:  Size  Location     Type
   579 ;;                  1    wreg      void 
   580 ;; Registers used:
   581 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   587 ;;      Params:         0       0       0       0       0       0       0       0       0
   588 ;;      Locals:        14       0       0       0       0       0       0       0       0
   589 ;;      Temps:          2       0       0       0       0       0       0       0       0
   590 ;;      Totals:        16       0       0       0       0       0       0       0       0
   591 ;;Total ram usage:       16 bytes
   592 ;; Hardware stack levels required when called:    4
   593 ;; This function calls:
   594 ;;		_BORRAR_LCD
   595 ;;		_CURSOR_HOME
   596 ;;		_CURSOR_ONOFF
   597 ;;		_ESCRIBE_MENSAJE
   598 ;;		_LCD_CONFIG
   599 ;;		_POS_CURSOR
   600 ;; This function is called by:
   601 ;;		Startup code after reset
   602 ;; This function uses a non-reentrant model
   603 ;;
   604                           
   605                           	psect	text0
   606  000012                     __ptext0:
   607                           	opt callstack 0
   608  000012                     _main:
   609                           	opt callstack 27
   610                           
   611                           ;nenene.c: 34:     TRISCbits.RC6 = 0;
   612                           
   613                           ;incstack = 0
   614  000012  9C94               	bcf	3988,6,c	;volatile
   615                           
   616                           ;nenene.c: 35:     BAUDCONbits.BRG16 = 0;
   617  000014  96B8               	bcf	4024,3,c	;volatile
   618                           
   619                           ;nenene.c: 36:     TXSTAbits.SYNC = 0;
   620  000016  98AC               	bcf	4012,4,c	;volatile
   621                           
   622                           ;nenene.c: 37:     TXSTAbits.BRGH = 0;
   623  000018  94AC               	bcf	4012,2,c	;volatile
   624                           
   625                           ;nenene.c: 38:     SPBRG = 19;
   626  00001A  0E13               	movlw	19
   627  00001C  6EAF               	movwf	4015,c	;volatile
   628                           
   629                           ;nenene.c: 39:     SPBRGH = 0;
   630  00001E  0E00               	movlw	0
   631  000020  6EB0               	movwf	4016,c	;volatile
   632                           
   633                           ;nenene.c: 40:     RCSTAbits.SPEN = 1;
   634  000022  8EAB               	bsf	4011,7,c	;volatile
   635                           
   636                           ;nenene.c: 41:     RCSTAbits.CREN = 1;
   637  000024  88AB               	bsf	4011,4,c	;volatile
   638                           
   639                           ;nenene.c: 42:     TXSTAbits.TXEN = 1;
   640  000026  8AAC               	bsf	4012,5,c	;volatile
   641                           
   642                           ;nenene.c: 45:     INTCONbits.GIE = 1;
   643  000028  8EF2               	bsf	4082,7,c	;volatile
   644                           
   645                           ;nenene.c: 46:     INTCONbits.PEIE = 1;
   646  00002A  8CF2               	bsf	4082,6,c	;volatile
   647                           
   648                           ;nenene.c: 47:     PIE1bits.RC1IE = 1;
   649  00002C  8A9D               	bsf	3997,5,c	;volatile
   650                           
   651                           ;nenene.c: 49:     TRISD = 0x00;
   652  00002E  0E00               	movlw	0
   653  000030  6E95               	movwf	3989,c	;volatile
   654                           
   655                           ;nenene.c: 50:     TRISCbits.RC2 = 0;
   656  000032  9494               	bcf	3988,2,c	;volatile
   657                           
   658                           ;nenene.c: 52:     _delay((unsigned long)((500)*(48000000UL/4000.0)));
   659  000034  0E1F               	movlw	31
   660  000036  6E4C               	movwf	(??_main+1)& (0+255),c
   661  000038  0E71               	movlw	113
   662  00003A  6E4B               	movwf	??_main& (0+255),c
   663  00003C  0E1E               	movlw	30
   664  00003E                     u907:
   665  00003E  2EE8               	decfsz	wreg,f,c
   666  000040  D7FE               	bra	u907
   667  000042  2E4B               	decfsz	??_main& (0+255),f,c
   668  000044  D7FC               	bra	u907
   669  000046  2E4C               	decfsz	(??_main+1)& (0+255),f,c
   670  000048  D7FA               	bra	u907
   671  00004A  D000               	nop2	
   672                           
   673                           ;nenene.c: 53:     LCD_CONFIG();
   674  00004C  EC43  F001         	call	_LCD_CONFIG	;wreg free
   675                           
   676                           ;nenene.c: 54:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   677  000050  0EEA               	movlw	234
   678  000052  6E4B               	movwf	??_main& (0+255),c
   679  000054  0EC3               	movlw	195
   680  000056                     u917:
   681  000056  2EE8               	decfsz	wreg,f,c
   682  000058  D7FE               	bra	u917
   683  00005A  2E4B               	decfsz	??_main& (0+255),f,c
   684  00005C  D7FC               	bra	u917
   685  00005E  F000               	nop	
   686                           
   687                           ;nenene.c: 55:     BORRAR_LCD();
   688  000060  EC04  F003         	call	_BORRAR_LCD	;wreg free
   689                           
   690                           ;nenene.c: 56:     CURSOR_ONOFF(1);
   691  000064  0E01               	movlw	1
   692  000066  ECF2  F002         	call	_CURSOR_ONOFF
   693  00006A                     l1455:
   694                           
   695                           ;nenene.c: 58:         CURSOR_HOME();
   696  00006A  EC00  F003         	call	_CURSOR_HOME	;wreg free
   697                           
   698                           ;nenene.c: 59:         ESCRIBE_MENSAJE(mensaje_lcd1, 10);
   699  00006E  0E39               	movlw	low _mensaje_lcd1
   700  000070  6E47               	movwf	ESCRIBE_MENSAJE@cadena,c
   701  000072  0E00               	movlw	high _mensaje_lcd1
   702  000074  6E48               	movwf	ESCRIBE_MENSAJE@cadena+1,c
   703  000076  0E0A               	movlw	10
   704  000078  6E49               	movwf	ESCRIBE_MENSAJE@tam,c
   705  00007A  ECBA  F002         	call	_ESCRIBE_MENSAJE	;wreg free
   706                           
   707                           ;nenene.c: 60:         POS_CURSOR(2,0);
   708  00007E  0E00               	movlw	0
   709  000080  6E47               	movwf	POS_CURSOR@columna,c
   710  000082  0E02               	movlw	2
   711  000084  ECCE  F002         	call	_POS_CURSOR
   712                           
   713                           ;nenene.c: 61:         ESCRIBE_MENSAJE(mensaje_lcd2, 18);
   714  000088  0E26               	movlw	low _mensaje_lcd2
   715  00008A  6E47               	movwf	ESCRIBE_MENSAJE@cadena,c
   716  00008C  0E00               	movlw	high _mensaje_lcd2
   717  00008E  6E48               	movwf	ESCRIBE_MENSAJE@cadena+1,c
   718  000090  0E12               	movlw	18
   719  000092  6E49               	movwf	ESCRIBE_MENSAJE@tam,c
   720  000094  ECBA  F002         	call	_ESCRIBE_MENSAJE	;wreg free
   721                           
   722                           ;nenene.c: 62:         if(estado == 1){
   723  000098  045B               	decf	_estado,w,c
   724  00009A  A4D8               	btfss	status,2,c
   725  00009C  D083               	goto	l1531
   726                           
   727                           ;nenene.c: 63:             for (int c=0;c<22;c++) {
   728  00009E  0E00               	movlw	0
   729  0000A0  6E4E               	movwf	main@c+1,c
   730  0000A2  0E00               	movlw	0
   731  0000A4  6E4D               	movwf	main@c,c
   732  0000A6                     l1471:
   733                           
   734                           ;nenene.c: 64:                 TXREG = mensaje_pserial1[c];
   735  0000A6  0EC9               	movlw	low _mensaje_pserial1
   736  0000A8  244D               	addwf	main@c,w,c
   737  0000AA  6ED9               	movwf	fsr2l,c
   738  0000AC  0E00               	movlw	high _mensaje_pserial1
   739  0000AE  204E               	addwfc	main@c+1,w,c
   740  0000B0  6EDA               	movwf	fsr2h,c
   741  0000B2  50DF               	movf	indf2,w,c
   742  0000B4  6EAD               	movwf	4013,c	;volatile
   743  0000B6                     l69:
   744  0000B6  A2AC               	btfss	4012,1,c	;volatile
   745  0000B8  D7FE               	goto	l69
   746                           
   747                           ;nenene.c: 66:             }
   748  0000BA  4A4D               	infsnz	main@c,f,c
   749  0000BC  2A4E               	incf	main@c+1,f,c
   750  0000BE  BE4E               	btfsc	main@c+1,7,c
   751  0000C0  D7F2               	goto	l1471
   752  0000C2  504E               	movf	main@c+1,w,c
   753  0000C4  E104               	bnz	u550
   754  0000C6  0E16               	movlw	22
   755  0000C8  5C4D               	subwf	main@c,w,c
   756  0000CA  A0D8               	btfss	status,0,c
   757  0000CC  D7EC               	goto	l1471
   758  0000CE                     u550:
   759                           
   760                           ;nenene.c: 67:             TXREG = 0x0A;
   761  0000CE  0E0A               	movlw	10
   762  0000D0  6EAD               	movwf	4013,c	;volatile
   763  0000D2                     l72:
   764  0000D2  A2AC               	btfss	4012,1,c	;volatile
   765  0000D4  D7FE               	goto	l72
   766                           
   767                           ;nenene.c: 69:             TXREG = 0x0D;
   768  0000D6  0E0D               	movlw	13
   769  0000D8  6EAD               	movwf	4013,c	;volatile
   770  0000DA                     l75:
   771  0000DA  A2AC               	btfss	4012,1,c	;volatile
   772  0000DC  D7FE               	goto	l75
   773                           
   774                           ;nenene.c: 71:             for (int c=0;c<47;c++) {
   775  0000DE  0E00               	movlw	0
   776  0000E0  6E50               	movwf	main@c_456+1,c
   777  0000E2  0E00               	movlw	0
   778  0000E4  6E4F               	movwf	main@c_456,c
   779  0000E6                     l1487:
   780                           
   781                           ;nenene.c: 72:                 TXREG = mensaje_pserial2[c];
   782  0000E6  0E00               	movlw	low _mensaje_pserial2
   783  0000E8  244F               	addwf	main@c_456,w,c
   784  0000EA  6ED9               	movwf	fsr2l,c
   785  0000EC  0E01               	movlw	high _mensaje_pserial2
   786  0000EE  2050               	addwfc	main@c_456+1,w,c
   787  0000F0  6EDA               	movwf	fsr2h,c
   788  0000F2  50DF               	movf	indf2,w,c
   789  0000F4  6EAD               	movwf	4013,c	;volatile
   790  0000F6                     l80:
   791  0000F6  A2AC               	btfss	4012,1,c	;volatile
   792  0000F8  D7FE               	goto	l80
   793                           
   794                           ;nenene.c: 74:             }
   795  0000FA  4A4F               	infsnz	main@c_456,f,c
   796  0000FC  2A50               	incf	main@c_456+1,f,c
   797  0000FE  BE50               	btfsc	main@c_456+1,7,c
   798  000100  D7F2               	goto	l1487
   799  000102  5050               	movf	main@c_456+1,w,c
   800  000104  E104               	bnz	u590
   801  000106  0E2F               	movlw	47
   802  000108  5C4F               	subwf	main@c_456,w,c
   803  00010A  A0D8               	btfss	status,0,c
   804  00010C  D7EC               	goto	l1487
   805  00010E                     u590:
   806                           
   807                           ;nenene.c: 75:             TXREG = 0x0A;
   808  00010E  0E0A               	movlw	10
   809  000110  6EAD               	movwf	4013,c	;volatile
   810  000112                     l83:
   811  000112  A2AC               	btfss	4012,1,c	;volatile
   812  000114  D7FE               	goto	l83
   813                           
   814                           ;nenene.c: 77:             TXREG = 0x0D;
   815  000116  0E0D               	movlw	13
   816  000118  6EAD               	movwf	4013,c	;volatile
   817  00011A                     l86:
   818  00011A  A2AC               	btfss	4012,1,c	;volatile
   819  00011C  D7FE               	goto	l86
   820                           
   821                           ;nenene.c: 79:             for (int c=0;c<45;c++) {
   822  00011E  0E00               	movlw	0
   823  000120  6E52               	movwf	main@c_457+1,c
   824  000122  0E00               	movlw	0
   825  000124  6E51               	movwf	main@c_457,c
   826  000126                     l1503:
   827                           
   828                           ;nenene.c: 80:                 TXREG = mensaje_pserial3[c];
   829  000126  0E60               	movlw	low _mensaje_pserial3
   830  000128  2451               	addwf	main@c_457,w,c
   831  00012A  6ED9               	movwf	fsr2l,c
   832  00012C  0E00               	movlw	high _mensaje_pserial3
   833  00012E  2052               	addwfc	main@c_457+1,w,c
   834  000130  6EDA               	movwf	fsr2h,c
   835  000132  50DF               	movf	indf2,w,c
   836  000134  6EAD               	movwf	4013,c	;volatile
   837  000136                     l91:
   838  000136  A2AC               	btfss	4012,1,c	;volatile
   839  000138  D7FE               	goto	l91
   840                           
   841                           ;nenene.c: 82:             }
   842  00013A  4A51               	infsnz	main@c_457,f,c
   843  00013C  2A52               	incf	main@c_457+1,f,c
   844  00013E  BE52               	btfsc	main@c_457+1,7,c
   845  000140  D7F2               	goto	l1503
   846  000142  5052               	movf	main@c_457+1,w,c
   847  000144  E104               	bnz	u630
   848  000146  0E2D               	movlw	45
   849  000148  5C51               	subwf	main@c_457,w,c
   850  00014A  A0D8               	btfss	status,0,c
   851  00014C  D7EC               	goto	l1503
   852  00014E                     u630:
   853                           
   854                           ;nenene.c: 83:             TXREG = 0x0A;
   855  00014E  0E0A               	movlw	10
   856  000150  6EAD               	movwf	4013,c	;volatile
   857  000152                     l94:
   858  000152  A2AC               	btfss	4012,1,c	;volatile
   859  000154  D7FE               	goto	l94
   860                           
   861                           ;nenene.c: 85:             TXREG = 0x0D;
   862  000156  0E0D               	movlw	13
   863  000158  6EAD               	movwf	4013,c	;volatile
   864  00015A                     l97:
   865  00015A  A2AC               	btfss	4012,1,c	;volatile
   866  00015C  D7FE               	goto	l97
   867                           
   868                           ;nenene.c: 87:             for (int c=0;c<25;c++) {
   869  00015E  0E00               	movlw	0
   870  000160  6E54               	movwf	main@c_458+1,c
   871  000162  0E00               	movlw	0
   872  000164  6E53               	movwf	main@c_458,c
   873  000166                     l1519:
   874                           
   875                           ;nenene.c: 88:                 TXREG = mensaje_pserial4[c];
   876  000166  0EAF               	movlw	low _mensaje_pserial4
   877  000168  2453               	addwf	main@c_458,w,c
   878  00016A  6ED9               	movwf	fsr2l,c
   879  00016C  0E00               	movlw	high _mensaje_pserial4
   880  00016E  2054               	addwfc	main@c_458+1,w,c
   881  000170  6EDA               	movwf	fsr2h,c
   882  000172  50DF               	movf	indf2,w,c
   883  000174  6EAD               	movwf	4013,c	;volatile
   884  000176                     l102:
   885  000176  A2AC               	btfss	4012,1,c	;volatile
   886  000178  D7FE               	goto	l102
   887                           
   888                           ;nenene.c: 90:             }
   889  00017A  4A53               	infsnz	main@c_458,f,c
   890  00017C  2A54               	incf	main@c_458+1,f,c
   891  00017E  BE54               	btfsc	main@c_458+1,7,c
   892  000180  D7F2               	goto	l1519
   893  000182  5054               	movf	main@c_458+1,w,c
   894  000184  E104               	bnz	u670
   895  000186  0E19               	movlw	25
   896  000188  5C53               	subwf	main@c_458,w,c
   897  00018A  A0D8               	btfss	status,0,c
   898  00018C  D7EC               	goto	l1519
   899  00018E                     u670:
   900                           
   901                           ;nenene.c: 91:             TXREG = 0x0A;
   902  00018E  0E0A               	movlw	10
   903  000190  6EAD               	movwf	4013,c	;volatile
   904  000192                     l105:
   905  000192  A2AC               	btfss	4012,1,c	;volatile
   906  000194  D7FE               	goto	l105
   907                           
   908                           ;nenene.c: 93:             TXREG = 0x0D;
   909  000196  0E0D               	movlw	13
   910  000198  6EAD               	movwf	4013,c	;volatile
   911  00019A                     l108:
   912  00019A  A2AC               	btfss	4012,1,c	;volatile
   913  00019C  D7FE               	goto	l108
   914  00019E                     u690:
   915                           
   916                           ;nenene.c: 95:             estado = 0;
   917  00019E  0E00               	movlw	0
   918  0001A0  6E5B               	movwf	_estado,c
   919                           
   920                           ;nenene.c: 96:         }
   921  0001A2  D763               	goto	l1455
   922  0001A4                     l1531:
   923  0001A4  0E02               	movlw	2
   924  0001A6  185B               	xorwf	_estado,w,c
   925  0001A8  A4D8               	btfss	status,2,c
   926  0001AA  D022               	goto	l1553
   927                           
   928                           ;nenene.c: 98:             LATCbits.LC2 = 1;
   929  0001AC  848B               	bsf	3979,2,c	;volatile
   930                           
   931                           ;nenene.c: 99:             for (int c=0;c<19;c++) {
   932  0001AE  0E00               	movlw	0
   933  0001B0  6E56               	movwf	main@c_465+1,c
   934  0001B2  0E00               	movlw	0
   935  0001B4  6E55               	movwf	main@c_465,c
   936  0001B6                     l1541:
   937                           
   938                           ;nenene.c: 100:                 TXREG = mensaje_blighton[c];
   939  0001B6  0E01               	movlw	low _mensaje_blighton
   940  0001B8  2455               	addwf	main@c_465,w,c
   941  0001BA  6ED9               	movwf	fsr2l,c
   942  0001BC  0E00               	movlw	high _mensaje_blighton
   943  0001BE  2056               	addwfc	main@c_465+1,w,c
   944  0001C0  6EDA               	movwf	fsr2h,c
   945  0001C2  50DF               	movf	indf2,w,c
   946  0001C4  6EAD               	movwf	4013,c	;volatile
   947  0001C6                     l115:
   948  0001C6  A2AC               	btfss	4012,1,c	;volatile
   949  0001C8  D7FE               	goto	l115
   950                           
   951                           ;nenene.c: 102:             }
   952  0001CA  4A55               	infsnz	main@c_465,f,c
   953  0001CC  2A56               	incf	main@c_465+1,f,c
   954  0001CE  BE56               	btfsc	main@c_465+1,7,c
   955  0001D0  D7F2               	goto	l1541
   956  0001D2  5056               	movf	main@c_465+1,w,c
   957  0001D4  E104               	bnz	u720
   958  0001D6  0E13               	movlw	19
   959  0001D8  5C55               	subwf	main@c_465,w,c
   960  0001DA  A0D8               	btfss	status,0,c
   961  0001DC  D7EC               	goto	l1541
   962  0001DE                     u720:
   963                           
   964                           ;nenene.c: 103:             TXREG = 0x0A;
   965  0001DE  0E0A               	movlw	10
   966  0001E0  6EAD               	movwf	4013,c	;volatile
   967  0001E2                     l118:
   968  0001E2  A2AC               	btfss	4012,1,c	;volatile
   969  0001E4  D7FE               	goto	l118
   970                           
   971                           ;nenene.c: 105:             TXREG = 0x0D;
   972  0001E6  0E0D               	movlw	13
   973  0001E8  6EAD               	movwf	4013,c	;volatile
   974  0001EA                     l121:
   975  0001EA  B2AC               	btfsc	4012,1,c	;volatile
   976  0001EC  D7D8               	goto	u690
   977  0001EE  D7FD               	goto	l121
   978  0001F0                     l1553:
   979  0001F0  0E03               	movlw	3
   980  0001F2  185B               	xorwf	_estado,w,c
   981  0001F4  A4D8               	btfss	status,2,c
   982  0001F6  D022               	goto	l1573
   983                           
   984                           ;nenene.c: 110:             for (int c=0;c<16;c++) {
   985  0001F8  0E00               	movlw	0
   986  0001FA  6E58               	movwf	main@c_466+1,c
   987  0001FC  0E00               	movlw	0
   988  0001FE  6E57               	movwf	main@c_466,c
   989  000200                     l1561:
   990                           
   991                           ;nenene.c: 111:                 TXREG = mensaje_blightoff[c];
   992  000200  0E15               	movlw	low _mensaje_blightoff
   993  000202  2457               	addwf	main@c_466,w,c
   994  000204  6ED9               	movwf	fsr2l,c
   995  000206  0E00               	movlw	high _mensaje_blightoff
   996  000208  2058               	addwfc	main@c_466+1,w,c
   997  00020A  6EDA               	movwf	fsr2h,c
   998  00020C  50DF               	movf	indf2,w,c
   999  00020E  6EAD               	movwf	4013,c	;volatile
  1000  000210                     l128:
  1001  000210  A2AC               	btfss	4012,1,c	;volatile
  1002  000212  D7FE               	goto	l128
  1003                           
  1004                           ;nenene.c: 113:             }
  1005  000214  4A57               	infsnz	main@c_466,f,c
  1006  000216  2A58               	incf	main@c_466+1,f,c
  1007  000218  BE58               	btfsc	main@c_466+1,7,c
  1008  00021A  D7F2               	goto	l1561
  1009  00021C  5058               	movf	main@c_466+1,w,c
  1010  00021E  E104               	bnz	u770
  1011  000220  0E10               	movlw	16
  1012  000222  5C57               	subwf	main@c_466,w,c
  1013  000224  A0D8               	btfss	status,0,c
  1014  000226  D7EC               	goto	l1561
  1015  000228                     u770:
  1016                           
  1017                           ;nenene.c: 114:             TXREG = 0x0A;
  1018  000228  0E0A               	movlw	10
  1019  00022A  6EAD               	movwf	4013,c	;volatile
  1020  00022C                     l131:
  1021  00022C  A2AC               	btfss	4012,1,c	;volatile
  1022  00022E  D7FE               	goto	l131
  1023                           
  1024                           ;nenene.c: 116:             TXREG = 0x0D;
  1025  000230  0E0D               	movlw	13
  1026  000232  6EAD               	movwf	4013,c	;volatile
  1027  000234                     l134:
  1028  000234  A2AC               	btfss	4012,1,c	;volatile
  1029  000236  D7FE               	goto	l134
  1030                           
  1031                           ;nenene.c: 118:             LATCbits.LC2 = 0;
  1032  000238  948B               	bcf	3979,2,c	;volatile
  1033  00023A  D7B1               	goto	u690
  1034  00023C                     l1573:
  1035  00023C  0E04               	movlw	4
  1036  00023E  185B               	xorwf	_estado,w,c
  1037  000240  A4D8               	btfss	status,2,c
  1038  000242  D713               	goto	l1455
  1039                           
  1040                           ;nenene.c: 122:             for (int c=0;c<32;c++) {
  1041  000244  0E00               	movlw	0
  1042  000246  6E5A               	movwf	main@c_467+1,c
  1043  000248  0E00               	movlw	0
  1044  00024A  6E59               	movwf	main@c_467,c
  1045  00024C                     l1581:
  1046                           
  1047                           ;nenene.c: 123:                 TXREG = mensaje_error[c];
  1048  00024C  0E8E               	movlw	low _mensaje_error
  1049  00024E  2459               	addwf	main@c_467,w,c
  1050  000250  6ED9               	movwf	fsr2l,c
  1051  000252  0E00               	movlw	high _mensaje_error
  1052  000254  205A               	addwfc	main@c_467+1,w,c
  1053  000256  6EDA               	movwf	fsr2h,c
  1054  000258  50DF               	movf	indf2,w,c
  1055  00025A  6EAD               	movwf	4013,c	;volatile
  1056  00025C                     l141:
  1057  00025C  A2AC               	btfss	4012,1,c	;volatile
  1058  00025E  D7FE               	goto	l141
  1059                           
  1060                           ;nenene.c: 125:             }
  1061  000260  4A59               	infsnz	main@c_467,f,c
  1062  000262  2A5A               	incf	main@c_467+1,f,c
  1063  000264  BE5A               	btfsc	main@c_467+1,7,c
  1064  000266  D7F2               	goto	l1581
  1065  000268  505A               	movf	main@c_467+1,w,c
  1066  00026A  E104               	bnz	u820
  1067  00026C  0E20               	movlw	32
  1068  00026E  5C59               	subwf	main@c_467,w,c
  1069  000270  A0D8               	btfss	status,0,c
  1070  000272  D7EC               	goto	l1581
  1071  000274                     u820:
  1072                           
  1073                           ;nenene.c: 126:             TXREG = 0x0A;
  1074  000274  0E0A               	movlw	10
  1075  000276  6EAD               	movwf	4013,c	;volatile
  1076  000278                     l144:
  1077  000278  A2AC               	btfss	4012,1,c	;volatile
  1078  00027A  D7FE               	goto	l144
  1079                           
  1080                           ;nenene.c: 128:             TXREG = 0x0D;
  1081  00027C  0E0D               	movlw	13
  1082  00027E  6EAD               	movwf	4013,c	;volatile
  1083  000280                     l147:
  1084  000280  B2AC               	btfsc	4012,1,c	;volatile
  1085  000282  D78D               	goto	u690
  1086  000284  D7FD               	goto	l147
  1087  000286                     __end_of_main:
  1088                           	opt callstack 0
  1089                           
  1090 ;; *************** function _POS_CURSOR *****************
  1091 ;; Defined at:
  1092 ;;		line 6 in file "LCD.c"
  1093 ;; Parameters:    Size  Location     Type
  1094 ;;  fila            1    wreg     unsigned char 
  1095 ;;  columna         1    3[COMRAM] unsigned char 
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;  fila            1    4[COMRAM] unsigned char 
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg, status,2, status,0, cstack
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1107 ;;      Params:         1       0       0       0       0       0       0       0       0
  1108 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1109 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1110 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1111 ;;Total ram usage:        2 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:    3
  1114 ;; This function calls:
  1115 ;;		_ENVIA_LCD_CMD
  1116 ;; This function is called by:
  1117 ;;		_main
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           	psect	text1
  1122  00059C                     __ptext1:
  1123                           	opt callstack 0
  1124  00059C                     _POS_CURSOR:
  1125                           	opt callstack 27
  1126                           
  1127                           ;incstack = 0
  1128                           ;POS_CURSOR@fila stored from wreg
  1129  00059C  6E48               	movwf	POS_CURSOR@fila,c
  1130                           
  1131                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1132  00059E  0448               	decf	POS_CURSOR@fila,w,c
  1133  0005A0  A4D8               	btfss	status,2,c
  1134  0005A2  D005               	goto	l1423
  1135                           
  1136                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1137  0005A4  5047               	movf	POS_CURSOR@columna,w,c
  1138  0005A6  0F80               	addlw	128
  1139  0005A8  EC52  F002         	call	_ENVIA_LCD_CMD
  1140                           
  1141                           ;LCD.c: 11:  }
  1142  0005AC  0012               	return	
  1143  0005AE                     l1423:
  1144  0005AE  0E02               	movlw	2
  1145  0005B0  1848               	xorwf	POS_CURSOR@fila,w,c
  1146  0005B2  A4D8               	btfss	status,2,c
  1147  0005B4  0012               	return	
  1148                           
  1149                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1150  0005B6  5047               	movf	POS_CURSOR@columna,w,c
  1151  0005B8  0FC0               	addlw	192
  1152  0005BA  EC52  F002         	call	_ENVIA_LCD_CMD
  1153  0005BE  0012               	return		;funcret
  1154  0005C0                     __end_of_POS_CURSOR:
  1155                           	opt callstack 0
  1156                           
  1157 ;; *************** function _LCD_CONFIG *****************
  1158 ;; Defined at:
  1159 ;;		line 73 in file "LCD.c"
  1160 ;; Parameters:    Size  Location     Type
  1161 ;;		None
  1162 ;; Auto vars:     Size  Location     Type
  1163 ;;		None
  1164 ;; Return value:  Size  Location     Type
  1165 ;;                  1    wreg      void 
  1166 ;; Registers used:
  1167 ;;		wreg, status,2, status,0, cstack
  1168 ;; Tracked objects:
  1169 ;;		On entry : 0/0
  1170 ;;		On exit  : 0/0
  1171 ;;		Unchanged: 0/0
  1172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1173 ;;      Params:         0       0       0       0       0       0       0       0       0
  1174 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1175 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1176 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1177 ;;Total ram usage:        1 bytes
  1178 ;; Hardware stack levels used:    1
  1179 ;; Hardware stack levels required when called:    3
  1180 ;; This function calls:
  1181 ;;		_ENVIA_LCD_CMD
  1182 ;;		_ENVIA_NIBBLE
  1183 ;; This function is called by:
  1184 ;;		_main
  1185 ;; This function uses a non-reentrant model
  1186 ;;
  1187                           
  1188                           	psect	text2
  1189  000286                     __ptext2:
  1190                           	opt callstack 0
  1191  000286                     _LCD_CONFIG:
  1192                           	opt callstack 27
  1193                           
  1194                           ;LCD.c: 75:  LATDbits.LATD0 = 0;
  1195                           
  1196                           ;incstack = 0
  1197  000286  908C               	bcf	3980,0,c	;volatile
  1198                           
  1199                           ;LCD.c: 76:  LATDbits.LATD1 = 0;
  1200  000288  928C               	bcf	3980,1,c	;volatile
  1201                           
  1202                           ;LCD.c: 77:  ENVIA_NIBBLE(0x30);
  1203  00028A  0E30               	movlw	48
  1204  00028C  ECE0  F002         	call	_ENVIA_NIBBLE
  1205                           
  1206                           ;LCD.c: 82:     _delay((unsigned long)((4)*(48000000UL/4000.0)));
  1207  000290  0E3F               	movlw	63
  1208  000292  6E47               	movwf	??_LCD_CONFIG& (0+255),c
  1209  000294  0E55               	movlw	85
  1210  000296                     u927:
  1211  000296  2EE8               	decfsz	wreg,f,c
  1212  000298  D7FE               	bra	u927
  1213  00029A  2E47               	decfsz	??_LCD_CONFIG& (0+255),f,c
  1214  00029C  D7FC               	bra	u927
  1215  00029E  F000               	nop	
  1216                           
  1217                           ;LCD.c: 83:  ENVIA_NIBBLE(0x30);
  1218  0002A0  0E30               	movlw	48
  1219  0002A2  ECE0  F002         	call	_ENVIA_NIBBLE
  1220                           
  1221                           ;LCD.c: 86:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  1222  0002A6  0EF0               	movlw	240
  1223  0002A8                     u937:
  1224  0002A8  D000               	nop2	
  1225  0002AA  2EE8               	decfsz	wreg,f,c
  1226  0002AC  D7FD               	bra	u937
  1227                           
  1228                           ;LCD.c: 88:     ENVIA_NIBBLE(0x30);
  1229  0002AE  0E30               	movlw	48
  1230  0002B0  ECE0  F002         	call	_ENVIA_NIBBLE
  1231                           
  1232                           ;LCD.c: 89:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  1233  0002B4  0EF0               	movlw	240
  1234  0002B6                     u947:
  1235  0002B6  D000               	nop2	
  1236  0002B8  2EE8               	decfsz	wreg,f,c
  1237  0002BA  D7FD               	bra	u947
  1238                           
  1239                           ;LCD.c: 90:  ENVIA_NIBBLE(0x20);
  1240  0002BC  0E20               	movlw	32
  1241  0002BE  ECE0  F002         	call	_ENVIA_NIBBLE
  1242                           
  1243                           ;LCD.c: 91:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  1244  0002C2  0EF0               	movlw	240
  1245  0002C4                     u957:
  1246  0002C4  D000               	nop2	
  1247  0002C6  2EE8               	decfsz	wreg,f,c
  1248  0002C8  D7FD               	bra	u957
  1249                           
  1250                           ;LCD.c: 92:  ENVIA_LCD_CMD(0x01);
  1251  0002CA  0E01               	movlw	1
  1252  0002CC  EC52  F002         	call	_ENVIA_LCD_CMD
  1253                           
  1254                           ;LCD.c: 93:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  1255  0002D0  0EF0               	movlw	240
  1256  0002D2                     u967:
  1257  0002D2  D000               	nop2	
  1258  0002D4  2EE8               	decfsz	wreg,f,c
  1259  0002D6  D7FD               	bra	u967
  1260                           
  1261                           ;LCD.c: 94:  ENVIA_LCD_CMD(0x28);
  1262  0002D8  0E28               	movlw	40
  1263  0002DA  EC52  F002         	call	_ENVIA_LCD_CMD
  1264                           
  1265                           ;LCD.c: 95:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  1266  0002DE  0EF0               	movlw	240
  1267  0002E0                     u977:
  1268  0002E0  D000               	nop2	
  1269  0002E2  2EE8               	decfsz	wreg,f,c
  1270  0002E4  D7FD               	bra	u977
  1271                           
  1272                           ;LCD.c: 96:  ENVIA_LCD_CMD(0x0F);
  1273  0002E6  0E0F               	movlw	15
  1274  0002E8  EC52  F002         	call	_ENVIA_LCD_CMD
  1275                           
  1276                           ;LCD.c: 97:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  1277  0002EC  0EF0               	movlw	240
  1278  0002EE                     u987:
  1279  0002EE  D000               	nop2	
  1280  0002F0  2EE8               	decfsz	wreg,f,c
  1281  0002F2  D7FD               	bra	u987
  1282                           
  1283                           ;LCD.c: 98:  ENVIA_LCD_CMD(0x06);
  1284  0002F4  0E06               	movlw	6
  1285  0002F6  EC52  F002         	call	_ENVIA_LCD_CMD
  1286                           
  1287                           ;LCD.c: 99:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  1288  0002FA  0EF0               	movlw	240
  1289  0002FC                     u997:
  1290  0002FC  D000               	nop2	
  1291  0002FE  2EE8               	decfsz	wreg,f,c
  1292  000300  D7FD               	bra	u997
  1293                           
  1294                           ;LCD.c: 100:  ENVIA_LCD_CMD(0x01);
  1295  000302  0E01               	movlw	1
  1296  000304  EC52  F002         	call	_ENVIA_LCD_CMD
  1297                           
  1298                           ;LCD.c: 101:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  1299  000308  0EF0               	movlw	240
  1300  00030A                     u1007:
  1301  00030A  D000               	nop2	
  1302  00030C  2EE8               	decfsz	wreg,f,c
  1303  00030E  D7FD               	bra	u1007
  1304  000310  0012               	return		;funcret
  1305  000312                     __end_of_LCD_CONFIG:
  1306                           	opt callstack 0
  1307                           
  1308 ;; *************** function _ESCRIBE_MENSAJE *****************
  1309 ;; Defined at:
  1310 ;;		line 41 in file "LCD.c"
  1311 ;; Parameters:    Size  Location     Type
  1312 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  1313 ;;		 -> mensaje_lcd2(19), mensaje_lcd1(11), 
  1314 ;;  tam             1    5[COMRAM] unsigned char 
  1315 ;; Auto vars:     Size  Location     Type
  1316 ;;  i               1    6[COMRAM] unsigned char 
  1317 ;; Return value:  Size  Location     Type
  1318 ;;                  1    wreg      void 
  1319 ;; Registers used:
  1320 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1321 ;; Tracked objects:
  1322 ;;		On entry : 0/0
  1323 ;;		On exit  : 0/0
  1324 ;;		Unchanged: 0/0
  1325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1326 ;;      Params:         3       0       0       0       0       0       0       0       0
  1327 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1328 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1329 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1330 ;;Total ram usage:        4 bytes
  1331 ;; Hardware stack levels used:    1
  1332 ;; Hardware stack levels required when called:    3
  1333 ;; This function calls:
  1334 ;;		_ENVIA_CHAR
  1335 ;; This function is called by:
  1336 ;;		_main
  1337 ;; This function uses a non-reentrant model
  1338 ;;
  1339                           
  1340                           	psect	text3
  1341  000574                     __ptext3:
  1342                           	opt callstack 0
  1343  000574                     _ESCRIBE_MENSAJE:
  1344                           	opt callstack 27
  1345                           
  1346                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1347                           
  1348                           ;incstack = 0
  1349  000574  0E00               	movlw	0
  1350  000576  6E4A               	movwf	ESCRIBE_MENSAJE@i,c
  1351                           
  1352                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1353  000578  0E00               	movlw	0
  1354  00057A  6E4A               	movwf	ESCRIBE_MENSAJE@i,c
  1355  00057C  D00A               	goto	l1417
  1356  00057E                     l1413:
  1357                           
  1358                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1359  00057E  504A               	movf	ESCRIBE_MENSAJE@i,w,c
  1360  000580  2447               	addwf	ESCRIBE_MENSAJE@cadena,w,c
  1361  000582  6ED9               	movwf	fsr2l,c
  1362  000584  0E00               	movlw	0
  1363  000586  2048               	addwfc	ESCRIBE_MENSAJE@cadena+1,w,c
  1364  000588  6EDA               	movwf	fsr2h,c
  1365  00058A  50DF               	movf	indf2,w,c
  1366  00058C  EC70  F002         	call	_ENVIA_CHAR
  1367                           
  1368                           ;LCD.c: 47:  }
  1369  000590  2A4A               	incf	ESCRIBE_MENSAJE@i,f,c
  1370  000592                     l1417:
  1371  000592  5049               	movf	ESCRIBE_MENSAJE@tam,w,c
  1372  000594  5C4A               	subwf	ESCRIBE_MENSAJE@i,w,c
  1373  000596  B0D8               	btfsc	status,0,c
  1374  000598  0012               	return	
  1375  00059A  D7F1               	goto	l1413
  1376  00059C                     __end_of_ESCRIBE_MENSAJE:
  1377                           	opt callstack 0
  1378                           
  1379 ;; *************** function _ENVIA_CHAR *****************
  1380 ;; Defined at:
  1381 ;;		line 50 in file "LCD.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  dato            1    wreg     unsigned char 
  1384 ;; Auto vars:     Size  Location     Type
  1385 ;;  dato            1    1[COMRAM] unsigned char 
  1386 ;;  aux             1    2[COMRAM] unsigned char 
  1387 ;; Return value:  Size  Location     Type
  1388 ;;                  1    wreg      void 
  1389 ;; Registers used:
  1390 ;;		wreg, status,2, status,0, cstack
  1391 ;; Tracked objects:
  1392 ;;		On entry : 0/0
  1393 ;;		On exit  : 0/0
  1394 ;;		Unchanged: 0/0
  1395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1396 ;;      Params:         0       0       0       0       0       0       0       0       0
  1397 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1398 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1399 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1400 ;;Total ram usage:        2 bytes
  1401 ;; Hardware stack levels used:    1
  1402 ;; Hardware stack levels required when called:    2
  1403 ;; This function calls:
  1404 ;;		_ENVIA_NIBBLE
  1405 ;;		_LEER_LCD
  1406 ;; This function is called by:
  1407 ;;		_ESCRIBE_MENSAJE
  1408 ;;		_GENERACARACTER
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text4
  1413  0004E0                     __ptext4:
  1414                           	opt callstack 0
  1415  0004E0                     _ENVIA_CHAR:
  1416                           	opt callstack 27
  1417                           
  1418                           ;incstack = 0
  1419                           ;ENVIA_CHAR@dato stored from wreg
  1420  0004E0  6E45               	movwf	ENVIA_CHAR@dato,c
  1421                           
  1422                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1423  0004E2  808C               	bsf	3980,0,c	;volatile
  1424                           
  1425                           ;LCD.c: 54:  LEER_LCD();
  1426  0004E4  ECFF  F001         	call	_LEER_LCD	;wreg free
  1427                           
  1428                           ;LCD.c: 55:  TRISD = 0x00;
  1429  0004E8  0E00               	movlw	0
  1430  0004EA  6E95               	movwf	3989,c	;volatile
  1431                           
  1432                           ;LCD.c: 57:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  1433  0004EC  0EF0               	movlw	240
  1434  0004EE                     u1017:
  1435  0004EE  D000               	nop2	
  1436  0004F0  2EE8               	decfsz	wreg,f,c
  1437  0004F2  D7FD               	bra	u1017
  1438                           
  1439                           ;LCD.c: 59:  LATDbits.LATD1 = 0;
  1440  0004F4  928C               	bcf	3980,1,c	;volatile
  1441                           
  1442                           ;LCD.c: 60:  LATDbits.LATD2 = 0;
  1443  0004F6  948C               	bcf	3980,2,c	;volatile
  1444                           
  1445                           ;LCD.c: 61:  LATDbits.LATD0 = 1;
  1446  0004F8  808C               	bsf	3980,0,c	;volatile
  1447                           
  1448                           ;LCD.c: 62:  aux = dato & 0xF0;
  1449  0004FA  5045               	movf	ENVIA_CHAR@dato,w,c
  1450  0004FC  0BF0               	andlw	240
  1451  0004FE  6E46               	movwf	ENVIA_CHAR@aux,c
  1452                           
  1453                           ;LCD.c: 63:  ENVIA_NIBBLE(aux);
  1454  000500  5046               	movf	ENVIA_CHAR@aux,w,c
  1455  000502  ECE0  F002         	call	_ENVIA_NIBBLE
  1456                           
  1457                           ;LCD.c: 64:  aux = dato << 4;
  1458  000506  3845               	swapf	ENVIA_CHAR@dato,w,c
  1459  000508  0BF0               	andlw	240
  1460  00050A  6E46               	movwf	ENVIA_CHAR@aux,c
  1461                           
  1462                           ;LCD.c: 65:  ENVIA_NIBBLE(aux);
  1463  00050C  5046               	movf	ENVIA_CHAR@aux,w,c
  1464  00050E  ECE0  F002         	call	_ENVIA_NIBBLE
  1465  000512  0012               	return		;funcret
  1466  000514                     __end_of_ENVIA_CHAR:
  1467                           	opt callstack 0
  1468                           
  1469 ;; *************** function _CURSOR_ONOFF *****************
  1470 ;; Defined at:
  1471 ;;		line 35 in file "LCD.c"
  1472 ;; Parameters:    Size  Location     Type
  1473 ;;  estado          1    wreg     unsigned char 
  1474 ;; Auto vars:     Size  Location     Type
  1475 ;;  estado          1    3[COMRAM] unsigned char 
  1476 ;; Return value:  Size  Location     Type
  1477 ;;                  1    wreg      void 
  1478 ;; Registers used:
  1479 ;;		wreg, status,2, status,0, cstack
  1480 ;; Tracked objects:
  1481 ;;		On entry : 0/0
  1482 ;;		On exit  : 0/0
  1483 ;;		Unchanged: 0/0
  1484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1485 ;;      Params:         0       0       0       0       0       0       0       0       0
  1486 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1487 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1488 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1489 ;;Total ram usage:        1 bytes
  1490 ;; Hardware stack levels used:    1
  1491 ;; Hardware stack levels required when called:    3
  1492 ;; This function calls:
  1493 ;;		_ENVIA_LCD_CMD
  1494 ;; This function is called by:
  1495 ;;		_main
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           
  1499                           	psect	text5
  1500  0005E4                     __ptext5:
  1501                           	opt callstack 0
  1502  0005E4                     _CURSOR_ONOFF:
  1503                           	opt callstack 27
  1504                           
  1505                           ;incstack = 0
  1506                           ;CURSOR_ONOFF@estado stored from wreg
  1507  0005E4  6E47               	movwf	CURSOR_ONOFF@estado,c
  1508                           
  1509                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
  1510  0005E6  5047               	movf	CURSOR_ONOFF@estado,w,c
  1511  0005E8  A4D8               	btfss	status,2,c
  1512  0005EA  D003               	goto	l1405
  1513  0005EC  0E0E               	movlw	14
  1514  0005EE  EC52  F002         	call	_ENVIA_LCD_CMD
  1515  0005F2                     l1405:
  1516                           
  1517                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
  1518  0005F2  0447               	decf	CURSOR_ONOFF@estado,w,c
  1519  0005F4  A4D8               	btfss	status,2,c
  1520  0005F6  0012               	return	
  1521  0005F8  0E0C               	movlw	12
  1522  0005FA  EC52  F002         	call	_ENVIA_LCD_CMD
  1523  0005FE  0012               	return		;funcret
  1524  000600                     __end_of_CURSOR_ONOFF:
  1525                           	opt callstack 0
  1526                           
  1527 ;; *************** function _CURSOR_HOME *****************
  1528 ;; Defined at:
  1529 ;;		line 30 in file "LCD.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      void 
  1536 ;; Registers used:
  1537 ;;		wreg, status,2, status,0, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1543 ;;      Params:         0       0       0       0       0       0       0       0       0
  1544 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1546 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1547 ;;Total ram usage:        0 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    3
  1550 ;; This function calls:
  1551 ;;		_ENVIA_LCD_CMD
  1552 ;; This function is called by:
  1553 ;;		_main
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text6
  1558  000600                     __ptext6:
  1559                           	opt callstack 0
  1560  000600                     _CURSOR_HOME:
  1561                           	opt callstack 27
  1562                           
  1563                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  1564                           
  1565                           ;incstack = 0
  1566  000600  0E02               	movlw	2
  1567  000602  EC52  F002         	call	_ENVIA_LCD_CMD
  1568  000606  0012               	return		;funcret
  1569  000608                     __end_of_CURSOR_HOME:
  1570                           	opt callstack 0
  1571                           
  1572 ;; *************** function _BORRAR_LCD *****************
  1573 ;; Defined at:
  1574 ;;		line 68 in file "LCD.c"
  1575 ;; Parameters:    Size  Location     Type
  1576 ;;		None
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;		None
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  1    wreg      void 
  1581 ;; Registers used:
  1582 ;;		wreg, status,2, status,0, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1588 ;;      Params:         0       0       0       0       0       0       0       0       0
  1589 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1590 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1591 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1592 ;;Total ram usage:        0 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; Hardware stack levels required when called:    3
  1595 ;; This function calls:
  1596 ;;		_ENVIA_LCD_CMD
  1597 ;; This function is called by:
  1598 ;;		_main
  1599 ;; This function uses a non-reentrant model
  1600 ;;
  1601                           
  1602                           	psect	text7
  1603  000608                     __ptext7:
  1604                           	opt callstack 0
  1605  000608                     _BORRAR_LCD:
  1606                           	opt callstack 27
  1607                           
  1608                           ;LCD.c: 70:  ENVIA_LCD_CMD(0x01);
  1609                           
  1610                           ;incstack = 0
  1611  000608  0E01               	movlw	1
  1612  00060A  EC52  F002         	call	_ENVIA_LCD_CMD
  1613  00060E  0012               	return		;funcret
  1614  000610                     __end_of_BORRAR_LCD:
  1615                           	opt callstack 0
  1616                           
  1617 ;; *************** function _ENVIA_LCD_CMD *****************
  1618 ;; Defined at:
  1619 ;;		line 117 in file "LCD.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;  dato            1    wreg     unsigned char 
  1622 ;; Auto vars:     Size  Location     Type
  1623 ;;  dato            1    1[COMRAM] unsigned char 
  1624 ;;  aux             1    2[COMRAM] unsigned char 
  1625 ;; Return value:  Size  Location     Type
  1626 ;;                  1    wreg      void 
  1627 ;; Registers used:
  1628 ;;		wreg, status,2, status,0, cstack
  1629 ;; Tracked objects:
  1630 ;;		On entry : 0/0
  1631 ;;		On exit  : 0/0
  1632 ;;		Unchanged: 0/0
  1633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1634 ;;      Params:         0       0       0       0       0       0       0       0       0
  1635 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1636 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1637 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1638 ;;Total ram usage:        2 bytes
  1639 ;; Hardware stack levels used:    1
  1640 ;; Hardware stack levels required when called:    2
  1641 ;; This function calls:
  1642 ;;		_ENVIA_NIBBLE
  1643 ;;		_LEER_LCD
  1644 ;; This function is called by:
  1645 ;;		_POS_CURSOR
  1646 ;;		_CURSOR_HOME
  1647 ;;		_CURSOR_ONOFF
  1648 ;;		_BORRAR_LCD
  1649 ;;		_LCD_CONFIG
  1650 ;;		_BLINK_CURSOR
  1651 ;;		_DISPLAY_ONOFF
  1652 ;;		_GENERACARACTER
  1653 ;; This function uses a non-reentrant model
  1654 ;;
  1655                           
  1656                           	psect	text8
  1657  0004A4                     __ptext8:
  1658                           	opt callstack 0
  1659  0004A4                     _ENVIA_LCD_CMD:
  1660                           	opt callstack 27
  1661                           
  1662                           ;incstack = 0
  1663                           ;ENVIA_LCD_CMD@dato stored from wreg
  1664  0004A4  6E45               	movwf	ENVIA_LCD_CMD@dato,c
  1665                           
  1666                           ;LCD.c: 117: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 118: {;LCD.c: 119:  unsigned 
      +                          char aux;;LCD.c: 120:  LATDbits.LATD0 = 0;
  1667  0004A6  908C               	bcf	3980,0,c	;volatile
  1668                           
  1669                           ;LCD.c: 121:  LEER_LCD();
  1670  0004A8  ECFF  F001         	call	_LEER_LCD	;wreg free
  1671                           
  1672                           ;LCD.c: 122:  TRISD = 0b00000000;
  1673  0004AC  0E00               	movlw	0
  1674  0004AE  6E95               	movwf	3989,c	;volatile
  1675                           
  1676                           ;LCD.c: 125:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  1677  0004B0  0EF0               	movlw	240
  1678  0004B2                     u1027:
  1679  0004B2  D000               	nop2	
  1680  0004B4  2EE8               	decfsz	wreg,f,c
  1681  0004B6  D7FD               	bra	u1027
  1682                           
  1683                           ;LCD.c: 126:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  1684  0004B8  0EF0               	movlw	240
  1685  0004BA                     u1037:
  1686  0004BA  D000               	nop2	
  1687  0004BC  2EE8               	decfsz	wreg,f,c
  1688  0004BE  D7FD               	bra	u1037
  1689                           
  1690                           ;LCD.c: 127:     LATDbits.LATD1 = 0;
  1691  0004C0  928C               	bcf	3980,1,c	;volatile
  1692                           
  1693                           ;LCD.c: 128:  LATDbits.LATD2 = 0;
  1694  0004C2  948C               	bcf	3980,2,c	;volatile
  1695                           
  1696                           ;LCD.c: 129:  LATDbits.LATD0 = 0;
  1697  0004C4  908C               	bcf	3980,0,c	;volatile
  1698                           
  1699                           ;LCD.c: 130:  aux = dato & 0xF0;
  1700  0004C6  5045               	movf	ENVIA_LCD_CMD@dato,w,c
  1701  0004C8  0BF0               	andlw	240
  1702  0004CA  6E46               	movwf	ENVIA_LCD_CMD@aux,c
  1703                           
  1704                           ;LCD.c: 131:  ENVIA_NIBBLE(aux);
  1705  0004CC  5046               	movf	ENVIA_LCD_CMD@aux,w,c
  1706  0004CE  ECE0  F002         	call	_ENVIA_NIBBLE
  1707                           
  1708                           ;LCD.c: 132:  aux = dato<<4;
  1709  0004D2  3845               	swapf	ENVIA_LCD_CMD@dato,w,c
  1710  0004D4  0BF0               	andlw	240
  1711  0004D6  6E46               	movwf	ENVIA_LCD_CMD@aux,c
  1712                           
  1713                           ;LCD.c: 133:  ENVIA_NIBBLE(aux);
  1714  0004D8  5046               	movf	ENVIA_LCD_CMD@aux,w,c
  1715  0004DA  ECE0  F002         	call	_ENVIA_NIBBLE
  1716  0004DE  0012               	return		;funcret
  1717  0004E0                     __end_of_ENVIA_LCD_CMD:
  1718                           	opt callstack 0
  1719                           
  1720 ;; *************** function _LEER_LCD *****************
  1721 ;; Defined at:
  1722 ;;		line 136 in file "LCD.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;  aux             1    0[COMRAM] unsigned char 
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		wreg, status,2, status,0
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1736 ;;      Params:         0       0       0       0       0       0       0       0       0
  1737 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1738 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1739 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1740 ;;Total ram usage:        1 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    1
  1743 ;; This function calls:
  1744 ;;		Nothing
  1745 ;; This function is called by:
  1746 ;;		_ENVIA_CHAR
  1747 ;;		_ENVIA_LCD_CMD
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text9
  1752  0003FE                     __ptext9:
  1753                           	opt callstack 0
  1754  0003FE                     _LEER_LCD:
  1755                           	opt callstack 27
  1756                           
  1757                           ;LCD.c: 138:  unsigned char aux;;LCD.c: 139:  TRISD = 0xF8;
  1758                           
  1759                           ;incstack = 0
  1760  0003FE  0EF8               	movlw	248
  1761  000400  6E95               	movwf	3989,c	;volatile
  1762                           
  1763                           ;LCD.c: 140:  LATDbits.LATD0 = 0;
  1764  000402  908C               	bcf	3980,0,c	;volatile
  1765                           
  1766                           ;LCD.c: 141:  LATDbits.LATD1 = 1;
  1767  000404  828C               	bsf	3980,1,c	;volatile
  1768                           
  1769                           ;LCD.c: 142:  LATDbits.LATD2 = 1;
  1770  000406  848C               	bsf	3980,2,c	;volatile
  1771                           
  1772                           ;LCD.c: 143:         _delay(1200);
  1773  000408  0EF0               	movlw	240
  1774  00040A                     u1047:
  1775  00040A  D000               	nop2	
  1776  00040C  2EE8               	decfsz	wreg,f,c
  1777  00040E  D7FD               	bra	u1047
  1778                           
  1779                           ;LCD.c: 145:  aux = PORTD;
  1780  000410  CF83 F044          	movff	3971,LEER_LCD@aux	;volatile
  1781                           
  1782                           ;LCD.c: 146:  LATDbits.LATD2 = 0;
  1783  000414  948C               	bcf	3980,2,c	;volatile
  1784                           
  1785                           ;LCD.c: 147:         _delay(1200);
  1786  000416  0EF0               	movlw	240
  1787  000418                     u1057:
  1788  000418  D000               	nop2	
  1789  00041A  2EE8               	decfsz	wreg,f,c
  1790  00041C  D7FD               	bra	u1057
  1791                           
  1792                           ;LCD.c: 149:  LATDbits.LATD2 = 1;
  1793  00041E  848C               	bsf	3980,2,c	;volatile
  1794                           
  1795                           ;LCD.c: 150:         _delay(1200);
  1796  000420  0EF0               	movlw	240
  1797  000422                     u1067:
  1798  000422  D000               	nop2	
  1799  000424  2EE8               	decfsz	wreg,f,c
  1800  000426  D7FD               	bra	u1067
  1801  000428                     l1297:
  1802                           
  1803                           ;LCD.c: 152:  LATDbits.LATD2 = 0;
  1804  000428  948C               	bcf	3980,2,c	;volatile
  1805                           
  1806                           ;LCD.c: 153:  aux = aux & 0x80;
  1807  00042A  5044               	movf	LEER_LCD@aux,w,c
  1808  00042C  0B80               	andlw	128
  1809  00042E  6E44               	movwf	LEER_LCD@aux,c
  1810                           
  1811                           ;LCD.c: 154:  while(aux == 0x80)
  1812  000430  D012               	goto	l1313
  1813  000432                     l230:
  1814                           
  1815                           ;LCD.c: 155:         {;LCD.c: 156:             LATDbits.LATD2 = 1;
  1816  000432  848C               	bsf	3980,2,c	;volatile
  1817                           
  1818                           ;LCD.c: 157:             _delay(1200);
  1819  000434  0EF0               	movlw	240
  1820  000436                     u1077:
  1821  000436  D000               	nop2	
  1822  000438  2EE8               	decfsz	wreg,f,c
  1823  00043A  D7FD               	bra	u1077
  1824                           
  1825                           ;LCD.c: 158:             aux = PORTD;
  1826  00043C  CF83 F044          	movff	3971,LEER_LCD@aux	;volatile
  1827                           
  1828                           ;LCD.c: 159:             LATDbits.LATD2 = 0;
  1829  000440  948C               	bcf	3980,2,c	;volatile
  1830                           
  1831                           ;LCD.c: 160:             _delay(1200);
  1832  000442  0EF0               	movlw	240
  1833  000444                     u1087:
  1834  000444  D000               	nop2	
  1835  000446  2EE8               	decfsz	wreg,f,c
  1836  000448  D7FD               	bra	u1087
  1837                           
  1838                           ;LCD.c: 161:             LATDbits.LATD2 = 1;
  1839  00044A  848C               	bsf	3980,2,c	;volatile
  1840                           
  1841                           ;LCD.c: 162:             _delay(1200);
  1842  00044C  0EF0               	movlw	240
  1843  00044E                     u1097:
  1844  00044E  D000               	nop2	
  1845  000450  2EE8               	decfsz	wreg,f,c
  1846  000452  D7FD               	bra	u1097
  1847  000454  D7E9               	goto	l1297
  1848  000456                     l1313:
  1849                           
  1850                           ;LCD.c: 154:  while(aux == 0x80)
  1851  000456  0E80               	movlw	128
  1852  000458  1844               	xorwf	LEER_LCD@aux,w,c
  1853  00045A  A4D8               	btfss	status,2,c
  1854  00045C  0012               	return	
  1855  00045E  D7E9               	goto	l230
  1856  000460                     __end_of_LEER_LCD:
  1857                           	opt callstack 0
  1858                           
  1859 ;; *************** function _ENVIA_NIBBLE *****************
  1860 ;; Defined at:
  1861 ;;		line 104 in file "LCD.c"
  1862 ;; Parameters:    Size  Location     Type
  1863 ;;  dato            1    wreg     unsigned char 
  1864 ;; Auto vars:     Size  Location     Type
  1865 ;;  dato            1    0[COMRAM] unsigned char 
  1866 ;; Return value:  Size  Location     Type
  1867 ;;                  1    wreg      void 
  1868 ;; Registers used:
  1869 ;;		wreg, status,2, status,0
  1870 ;; Tracked objects:
  1871 ;;		On entry : 0/0
  1872 ;;		On exit  : 0/0
  1873 ;;		Unchanged: 0/0
  1874 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1875 ;;      Params:         0       0       0       0       0       0       0       0       0
  1876 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1877 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1878 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1879 ;;Total ram usage:        1 bytes
  1880 ;; Hardware stack levels used:    1
  1881 ;; Hardware stack levels required when called:    1
  1882 ;; This function calls:
  1883 ;;		Nothing
  1884 ;; This function is called by:
  1885 ;;		_ENVIA_CHAR
  1886 ;;		_LCD_CONFIG
  1887 ;;		_ENVIA_LCD_CMD
  1888 ;; This function uses a non-reentrant model
  1889 ;;
  1890                           
  1891                           	psect	text10
  1892  0005C0                     __ptext10:
  1893                           	opt callstack 0
  1894  0005C0                     _ENVIA_NIBBLE:
  1895                           	opt callstack 27
  1896                           
  1897                           ;incstack = 0
  1898                           ;ENVIA_NIBBLE@dato stored from wreg
  1899  0005C0  6E44               	movwf	ENVIA_NIBBLE@dato,c
  1900                           
  1901                           ;LCD.c: 104: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  LATD &= 0x
      +                          0F;
  1902  0005C2  0E0F               	movlw	15
  1903  0005C4  168C               	andwf	3980,f,c	;volatile
  1904                           
  1905                           ;LCD.c: 107:  dato &= 0xF0;
  1906  0005C6  0EF0               	movlw	240
  1907  0005C8  1644               	andwf	ENVIA_NIBBLE@dato,f,c
  1908                           
  1909                           ;LCD.c: 108:  LATD|= dato;
  1910  0005CA  5044               	movf	ENVIA_NIBBLE@dato,w,c	;volatile
  1911  0005CC  128C               	iorwf	3980,f,c	;volatile
  1912                           
  1913                           ;LCD.c: 109:  LATDbits.LATD2 = 1;
  1914  0005CE  848C               	bsf	3980,2,c	;volatile
  1915                           
  1916                           ;LCD.c: 112:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  1917  0005D0  0EF0               	movlw	240
  1918  0005D2                     u1107:
  1919  0005D2  D000               	nop2	
  1920  0005D4  2EE8               	decfsz	wreg,f,c
  1921  0005D6  D7FD               	bra	u1107
  1922                           
  1923                           ;LCD.c: 113:     _delay((unsigned long)((100)*(48000000UL/4000000.0)));
  1924  0005D8  0EF0               	movlw	240
  1925  0005DA                     u1117:
  1926  0005DA  D000               	nop2	
  1927  0005DC  2EE8               	decfsz	wreg,f,c
  1928  0005DE  D7FD               	bra	u1117
  1929                           
  1930                           ;LCD.c: 114:  LATDbits.LATD2 = 0;
  1931  0005E0  948C               	bcf	3980,2,c	;volatile
  1932  0005E2  0012               	return		;funcret
  1933  0005E4                     __end_of_ENVIA_NIBBLE:
  1934                           	opt callstack 0
  1935                           
  1936 ;; *************** function _RCIsr *****************
  1937 ;; Defined at:
  1938 ;;		line 135 in file "nenene.c"
  1939 ;; Parameters:    Size  Location     Type
  1940 ;;		None
  1941 ;; Auto vars:     Size  Location     Type
  1942 ;;		None
  1943 ;; Return value:  Size  Location     Type
  1944 ;;                  1    wreg      void 
  1945 ;; Registers used:
  1946 ;;		wreg, status,2, status,0
  1947 ;; Tracked objects:
  1948 ;;		On entry : 0/0
  1949 ;;		On exit  : 0/0
  1950 ;;		Unchanged: 0/0
  1951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1952 ;;      Params:         0       0       0       0       0       0       0       0       0
  1953 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1954 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1955 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1956 ;;Total ram usage:        0 bytes
  1957 ;; Hardware stack levels used:    1
  1958 ;; This function calls:
  1959 ;;		Nothing
  1960 ;; This function is called by:
  1961 ;;		Interrupt level 2
  1962 ;; This function uses a non-reentrant model
  1963 ;;
  1964                           
  1965                           	psect	intcode
  1966  000008                     __pintcode:
  1967                           	opt callstack 0
  1968  000008                     _RCIsr:
  1969                           	opt callstack 27
  1970                           
  1971                           ;incstack = 0
  1972  000008  825C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  1973  00000A  EDA2  F002         	call	int_func,f	;refresh shadow registers
  1974                           
  1975                           	psect	intcode_body
  1976  000544                     __pintcode_body:
  1977                           	opt callstack 27
  1978  000544                     int_func:
  1979                           	opt callstack 27
  1980  000544  0006               	pop		; remove dummy address from shadow register refresh
  1981                           
  1982                           ;nenene.c: 136:     PIR1bits.RC1IF = 0;
  1983  000546  9A9E               	bcf	3998,5,c	;volatile
  1984                           
  1985                           ;nenene.c: 137:     if (RCREG == 0x0D){
  1986  000548  0E0D               	movlw	13
  1987  00054A  18AE               	xorwf	4014,w,c	;volatile
  1988  00054C  A4D8               	btfss	status,2,c
  1989  00054E  D002               	goto	i2l1235
  1990                           
  1991                           ;nenene.c: 138:         estado = 1;
  1992  000550  0E01               	movlw	1
  1993  000552  D00D               	goto	L1
  1994  000554                     i2l1235:
  1995  000554  0E51               	movlw	81
  1996  000556  18AE               	xorwf	4014,w,c	;volatile
  1997  000558  A4D8               	btfss	status,2,c
  1998  00055A  D002               	goto	i2l1239
  1999                           
  2000                           ;nenene.c: 141:         estado = 2;
  2001  00055C  0E02               	movlw	2
  2002  00055E  D007               	goto	L1
  2003  000560                     i2l1239:
  2004  000560  0E52               	movlw	82
  2005  000562  18AE               	xorwf	4014,w,c	;volatile
  2006  000564  A4D8               	btfss	status,2,c
  2007  000566  D002               	goto	i2l1243
  2008                           
  2009                           ;nenene.c: 144:         estado = 3;
  2010  000568  0E03               	movlw	3
  2011  00056A  D001               	goto	L1
  2012  00056C                     i2l1243:
  2013                           
  2014                           ;nenene.c: 147:         estado = 4;
  2015  00056C  0E04               	movlw	4
  2016  00056E                     L1:
  2017  00056E  6E5B               	movwf	_estado,c
  2018  000570  925C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2019  000572  0011               	retfie		f
  2020  000574                     __end_of_RCIsr:
  2021                           	opt callstack 0
  2022  0000                     
  2023                           	psect	rparam
  2024  0000                     
  2025                           	psect	temp
  2026  00005C                     btemp:
  2027                           	opt callstack 0
  2028  00005C                     	ds	1
  2029  0000                     int$flags	set	btemp
  2030  0000                     wtemp8	set	btemp+1
  2031  0000                     ttemp5	set	btemp+1
  2032  0000                     ttemp6	set	btemp+4
  2033  0000                     ttemp7	set	btemp+8
  2034                           tosu	equ	0xFFF
  2035                           tosh	equ	0xFFE
  2036                           tosl	equ	0xFFD
  2037                           stkptr	equ	0xFFC
  2038                           pclatu	equ	0xFFB
  2039                           pclath	equ	0xFFA
  2040                           pcl	equ	0xFF9
  2041                           tblptru	equ	0xFF8
  2042                           tblptrh	equ	0xFF7
  2043                           tblptrl	equ	0xFF6
  2044                           tablat	equ	0xFF5
  2045                           prodh	equ	0xFF4
  2046                           prodl	equ	0xFF3
  2047                           indf0	equ	0xFEF
  2048                           postinc0	equ	0xFEE
  2049                           postdec0	equ	0xFED
  2050                           preinc0	equ	0xFEC
  2051                           plusw0	equ	0xFEB
  2052                           fsr0h	equ	0xFEA
  2053                           fsr0l	equ	0xFE9
  2054                           wreg	equ	0xFE8
  2055                           indf1	equ	0xFE7
  2056                           postinc1	equ	0xFE6
  2057                           postdec1	equ	0xFE5
  2058                           preinc1	equ	0xFE4
  2059                           plusw1	equ	0xFE3
  2060                           fsr1h	equ	0xFE2
  2061                           fsr1l	equ	0xFE1
  2062                           bsr	equ	0xFE0
  2063                           indf2	equ	0xFDF
  2064                           postinc2	equ	0xFDE
  2065                           postdec2	equ	0xFDD
  2066                           preinc2	equ	0xFDC
  2067                           plusw2	equ	0xFDB
  2068                           fsr2h	equ	0xFDA
  2069                           fsr2l	equ	0xFD9
  2070                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        243
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     23      91
    BANK0           160      0     128
    BANK1           256      0      48
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 19
		 -> mensaje_lcd2(COMRAM[19]), mensaje_lcd1(COMRAM[11]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _POS_CURSOR->_ENVIA_LCD_CMD
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _RCIsr in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _RCIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RCIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RCIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RCIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _RCIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _RCIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _RCIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _RCIsr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    2200
                                              7 COMRAM    16    16      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                    _ESCRIBE_MENSAJE
                         _LCD_CONFIG
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (1) _POS_CURSOR                                           2     1      1     347
                                              3 COMRAM     2     1      1
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_CONFIG                                           1     1      0     206
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      4     1      3     578
                                              3 COMRAM     4     1      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     183
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _CURSOR_ONOFF                                         1     1      0     227
                                              3 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _CURSOR_HOME                                          0     0      0     183
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _BORRAR_LCD                                           0     0      0     183
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ENVIA_LCD_CMD                                        2     2      0     183
                                              1 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (3) _LEER_LCD                                             1     1      0      70
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _RCIsr                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _BORRAR_LCD
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _CURSOR_HOME
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _CURSOR_ONOFF
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _LCD_CONFIG
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD
     _ENVIA_NIBBLE
   _POS_CURSOR
     _ENVIA_LCD_CMD
       _ENVIA_NIBBLE
       _LEER_LCD

 _RCIsr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      30       7       18.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0      80       5       80.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     17      5B       1       96.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     10B      20        0.0%
DATA                 0      0     10B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Thu Jun 13 18:21:14 2019

                      l80 00F6                        l72 00D2                        l91 0136  
                      l83 0112                        l75 00DA                        l69 00B6  
                      l94 0152                        l86 011A                        l97 015A  
             __CFG_BORV$3 000000        __CFG_FOSC$XTPLL_XT 000000             ENVIA_CHAR@aux 0046  
                     l102 0176                       l121 01EA                       l105 0192  
                     l131 022C                       l115 01C6                       l108 019A  
                     l141 025C                       l230 0432                       l134 0234  
                     l118 01E2                       l144 0278                       l128 0210  
                     l147 0280                       u630 014E                       u550 00CE  
                     u720 01DE                       u820 0274                       u670 018E  
                     u590 010E                       u770 0228                       u690 019E  
                     u907 003E                       u917 0056                       u927 0296  
                     u937 02A8                       u947 02B6                       u957 02C4  
                     u967 02D2                       u977 02E0                       u987 02EE  
                     u997 02FC              __CFG_BOR$OFF 000000               LEER_LCD@aux 0044  
                     wreg 000FE8              ?_CURSOR_HOME 0044            ??_ENVIA_NIBBLE 0044  
            __CFG_LVP$OFF 000000            ENVIA_CHAR@dato 0045              __CFG_WDT$OFF 000000  
                    l1313 0456                      l1405 05F2                      l1413 057E  
                    l1423 05AE                      l1503 0126                      l1417 0592  
                    l1531 01A4                      l1541 01B6                      l1519 0166  
                    l1471 00A6                      l1455 006A                      l1297 0428  
                    l1561 0200                      l1553 01F0                      l1581 024C  
                    l1573 023C                      l1487 00E6                      u1007 030A  
                    u1017 04EE                      u1107 05D2                      u1027 04B2  
                    u1117 05DA                      u1037 04BA                      u1047 040A  
                    u1057 0418                      u1067 0422                      u1077 0436  
                    u1087 0444                      _LATD 000F8C                      u1097 044E  
            __CFG_PWRT$ON 000000                      _main 0012                      indf2 000FDF  
                    fsr1l 000FE1                      fsr2l 000FD9                      btemp 005C  
                    start 000E             ?_CURSOR_ONOFF 0044             __CFG_MCLRE$ON 000000  
            ___param_bank 000000           ??_ENVIA_LCD_CMD 0045          __end_of_LEER_LCD 0460  
     __size_of_BORRAR_LCD 0008             __CFG_PLLDIV$1 000000            __CFG_CCP2MX$ON 000000  
                   ?_main 0044                     _RCREG 000FAE                     _SPBRG 000FAF  
                   _PORTD 000F83                     _RCIsr 0008       __size_of_LCD_CONFIG 008C  
                   _TRISD 000F95                     _TXREG 000FAD       __size_of_ENVIA_CHAR 0034  
             ?_POS_CURSOR 0047                     main@c 004D                     tablat 000FF5  
                   ttemp5 005D                     ttemp6 0060                     ttemp7 0064  
                   status 000FD8                     wtemp8 005D            ??_CURSOR_ONOFF 0047  
          __CFG_PBADEN$ON 000000           __initialization 0392              __end_of_main 0286  
         _ESCRIBE_MENSAJE 0574                    ??_main 004B             __activetblptr 000000  
                  ?_RCIsr 0044                    i2l1243 056C                    i2l1235 0554  
                  i2l1239 0560                    _SPBRGH 000FB0      __end_of_ENVIA_NIBBLE 05E4  
                  _estado 005B       __size_of_POS_CURSOR 0024              __pdataCOMRAM 0001  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
            ??_BORRAR_LCD 0047      __size_of_CURSOR_HOME 0008                 ?_LEER_LCD 0044  
              __accesstop 0060   __end_of__initialization 03F4              ??_LCD_CONFIG 0047  
           ___rparam_used 000001              ??_ENVIA_CHAR 0045             __end_of_RCIsr 0574  
 __end_of_ESCRIBE_MENSAJE 059C            __pcstackCOMRAM 0044              __pidataBANK0 0312  
            __pidataBANK1 0514        __end_of_BORRAR_LCD 0610                   ??_RCIsr 0044  
        ENVIA_LCD_CMD@aux 0046      __end_of_CURSOR_ONOFF 0600        __end_of_LCD_CONFIG 0312  
      __end_of_ENVIA_CHAR 0514                ??_LEER_LCD 0044          ENVIA_NIBBLE@dato 0044  
           _mensaje_error 008E              ??_POS_CURSOR 0048     __size_of_ENVIA_NIBBLE 0024  
                 __Hparam 0000                   __Lparam 0000          ?_ESCRIBE_MENSAJE 0047  
   __end_of_ENVIA_LCD_CMD 04E0                   __pcinit 0392        __end_of_POS_CURSOR 05C0  
                 __ramtop 0800                   __ptext0 0012                   __ptext1 059C  
                 __ptext2 0286                   __ptext3 0574                   __ptext4 04E0  
                 __ptext5 05E4                   __ptext6 0600                   __ptext7 0608  
                 __ptext8 04A4                   __ptext9 03FE            __pintcode_body 0544  
            _ENVIA_NIBBLE 05C0      end_of_initialization 03F4                   int_func 0544  
               _RCSTAbits 000FAB                   postdec1 000FE5                   postinc0 000FEE  
   __size_of_CURSOR_ONOFF 001C                 _TRISCbits 000F94                 _TXSTAbits 000FAC  
       __size_of_LEER_LCD 0062              _CURSOR_ONOFF 05E4        CURSOR_ONOFF@estado 0047  
       _mensaje_blightoff 0015               _BAUDCONbits 000FB8             __pidataCOMRAM 0460  
           ??_CURSOR_HOME 0047       start_initialization 0392         ENVIA_LCD_CMD@dato 0045  
             __pdataBANK0 0060               __pdataBANK1 0100               __pbssCOMRAM 005B  
     __end_of_CURSOR_HOME 0608                 __pintcode 0008              _mensaje_lcd1 0039  
            _mensaje_lcd2 0026            __size_of_RCIsr 056C                  _LEER_LCD 03FE  
                _LATCbits 000F8B                  _LATDbits 000F8C                  _PIE1bits 000F9D  
                _PIR1bits 000F9E          ESCRIBE_MENSAJE@i 004A            POS_CURSOR@fila 0048  
               main@c_456 004F                 main@c_465 0055                 main@c_457 0051  
               main@c_466 0057                 main@c_458 0053                 main@c_467 0059  
__size_of_ESCRIBE_MENSAJE 0028               _CURSOR_HOME 0600          _mensaje_blighton 0001  
               copy_data0 03A6                 copy_data1 03C6                 copy_data2 03E6  
  __size_of_ENVIA_LCD_CMD 003C                  __Hrparam 0000                  __Lrparam 0000  
        _mensaje_pserial1 00C9          _mensaje_pserial2 0100          _mensaje_pserial3 0060  
        _mensaje_pserial4 00AF                  __ptext10 05C0                _BORRAR_LCD 0608  
           __size_of_main 0274                _LCD_CONFIG 0286                _ENVIA_CHAR 04E0  
                int$flags 005C             _ENVIA_LCD_CMD 04A4     __CFG_CPUDIV$OSC1_PLL2 000000  
              _INTCONbits 000FF2         ??_ESCRIBE_MENSAJE 004A                  intlevel2 0000  
   ESCRIBE_MENSAJE@cadena 0047            ?_ENVIA_LCD_CMD 0044               ?_BORRAR_LCD 0044  
           ?_ENVIA_NIBBLE 0044                _POS_CURSOR 059C               ?_LCD_CONFIG 0044  
      ESCRIBE_MENSAJE@tam 0049               ?_ENVIA_CHAR 0044         POS_CURSOR@columna 0047  
