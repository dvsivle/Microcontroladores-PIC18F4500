

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Jun 09 10:55:51 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	text1,global,reloc=2,class=CODE,delta=1
    12                           	psect	text2,global,reloc=2,class=CODE,delta=1
    13                           	psect	text3,global,reloc=2,class=CODE,delta=1
    14                           	psect	text4,global,reloc=2,class=CODE,delta=1
    15                           	psect	text5,global,reloc=2,class=CODE,delta=1
    16                           	psect	text6,global,reloc=2,class=CODE,delta=1
    17                           	psect	text7,global,reloc=2,class=CODE,delta=1
    18                           	psect	text8,global,reloc=2,class=CODE,delta=1
    19                           	psect	text9,global,reloc=2,class=CODE,delta=1
    20                           	psect	text10,global,reloc=2,class=CODE,delta=1
    21                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    22                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F4550 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	idataCOMRAM
    71  000412                     __pidataCOMRAM:
    72                           	callstack 0
    73                           
    74                           ;initializer for _cadena
    75  000412  49                 	db	73
    76  000413  6E                 	db	110
    77  000414  67                 	db	103
    78  000415  72                 	db	114
    79  000416  65                 	db	101
    80  000417  73                 	db	115
    81  000418  61                 	db	97
    82  000419  20                 	db	32
    83  00041A  75                 	db	117
    84  00041B  6E                 	db	110
    85  00041C  61                 	db	97
    86  00041D  20                 	db	32
    87  00041E  63                 	db	99
    88  00041F  61                 	db	97
    89  000420  64                 	db	100
    90  000421  65                 	db	101
    91  000422  6E                 	db	110
    92  000423  61                 	db	97
    93  000424  3A                 	db	58
    94  000425  00                 	db	0
    95  0000                     _PORTD	set	3971
    96  0000                     _LATD	set	3980
    97  0000                     _LATDbits	set	3980
    98  0000                     _RCREG	set	4014
    99  0000                     _PIR1bits	set	3998
   100  0000                     _TXREG	set	4013
   101  0000                     _INTCONbits	set	4082
   102  0000                     _PIE1bits	set	3997
   103  0000                     _TRISCbits	set	3988
   104  0000                     _RCSTAbits	set	4011
   105  0000                     _SPBRG	set	4015
   106  0000                     _SPBRGH	set	4016
   107  0000                     _TXSTAbits	set	4012
   108  0000                     _BAUDCONbits	set	4024
   109  0000                     _TRISD	set	3989
   110                           
   111                           ; #config settings
   112                           
   113                           	psect	cinit
   114  000342                     __pcinit:
   115                           	callstack 0
   116  000342                     start_initialization:
   117                           	callstack 0
   118  000342                     __initialization:
   119                           	callstack 0
   120                           
   121                           ; Initialize objects allocated to COMRAM (20 bytes)
   122                           ; load TBLPTR registers with __pidataCOMRAM
   123  000342  0E12               	movlw	low __pidataCOMRAM
   124  000344  6EF6               	movwf	tblptrl,c
   125  000346  0E04               	movlw	high __pidataCOMRAM
   126  000348  6EF7               	movwf	tblptrh,c
   127  00034A  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   128  00034C  6EF8               	movwf	tblptru,c
   129  00034E  EE00  F001         	lfsr	0,__pdataCOMRAM
   130  000352  EE10 F014          	lfsr	1,20
   131  000356                     copy_data0:
   132  000356  0009               	tblrd		*+
   133  000358  CFF5 FFEE          	movff	tablat,postinc0
   134  00035C  50E5               	movf	postdec1,w,c
   135  00035E  50E1               	movf	fsr1l,w,c
   136  000360  E1FA               	bnz	copy_data0
   137                           
   138                           ; Clear objects allocated to COMRAM (1 bytes)
   139  000362  6A25               	clrf	__pbssCOMRAM& (0+255),c
   140  000364                     end_of_initialization:
   141                           	callstack 0
   142  000364                     __end_of__initialization:
   143                           	callstack 0
   144  000364  9026               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   145  000366  9226               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   146  000368  0100               	movlb	0
   147  00036A  EFDA  F000         	goto	_main	;jump to C main() function
   148                           
   149                           	psect	bssCOMRAM
   150  000025                     __pbssCOMRAM:
   151                           	callstack 0
   152  000025                     _numero:
   153                           	callstack 0
   154  000025                     	ds	1
   155  000026                     _ingreso:
   156                           	callstack 0
   157  000026                     	ds	0
   158                           
   159                           	psect	dataCOMRAM
   160  000001                     __pdataCOMRAM:
   161                           	callstack 0
   162  000001                     _cadena:
   163                           	callstack 0
   164  000001                     	ds	20
   165                           
   166                           	psect	cstackCOMRAM
   167  000015                     __pcstackCOMRAM:
   168                           	callstack 0
   169  000015                     i2ENVIA_NIBBLE@dato:
   170                           	callstack 0
   171  000015                     i2LEER_LCD@aux:
   172                           	callstack 0
   173                           
   174                           ; 1 bytes @ 0x0
   175  000015                     	ds	1
   176  000016                     ENVIA_CHAR@dato:
   177                           	callstack 0
   178  000016                     i2ENVIA_LCD_CMD@dato:
   179                           	callstack 0
   180                           
   181                           ; 1 bytes @ 0x1
   182  000016                     	ds	1
   183  000017                     ENVIA_CHAR@aux:
   184                           	callstack 0
   185  000017                     i2ENVIA_LCD_CMD@aux:
   186                           	callstack 0
   187                           
   188                           ; 1 bytes @ 0x2
   189  000017                     	ds	1
   190  000018                     POS_CURSOR@columna:
   191                           	callstack 0
   192  000018                     ESCRIBE_MENSAJE@cadena:
   193                           	callstack 0
   194                           
   195                           ; 2 bytes @ 0x3
   196  000018                     	ds	1
   197  000019                     POS_CURSOR@fila:
   198                           	callstack 0
   199                           
   200                           ; 1 bytes @ 0x4
   201  000019                     	ds	1
   202  00001A                     ESCRIBE_MENSAJE@tam:
   203                           	callstack 0
   204                           
   205                           ; 1 bytes @ 0x5
   206  00001A                     	ds	1
   207  00001B                     ESCRIBE_MENSAJE@i:
   208                           	callstack 0
   209                           
   210                           ; 1 bytes @ 0x6
   211  00001B                     	ds	1
   212  00001C                     ??_RCIsr:
   213                           
   214                           ; 1 bytes @ 0x7
   215  00001C                     	ds	2
   216  00001E                     ENVIA_NIBBLE@dato:
   217                           	callstack 0
   218  00001E                     LEER_LCD@aux:
   219                           	callstack 0
   220                           
   221                           ; 1 bytes @ 0x9
   222  00001E                     	ds	1
   223  00001F                     ENVIA_LCD_CMD@dato:
   224                           	callstack 0
   225                           
   226                           ; 1 bytes @ 0xA
   227  00001F                     	ds	1
   228  000020                     ENVIA_LCD_CMD@aux:
   229                           	callstack 0
   230                           
   231                           ; 1 bytes @ 0xB
   232  000020                     	ds	1
   233  000021                     ??_LCD_CONFIG:
   234  000021                     CURSOR_ONOFF@estado:
   235                           	callstack 0
   236                           
   237                           ; 1 bytes @ 0xC
   238  000021                     	ds	1
   239  000022                     ??_lcd_init:
   240                           
   241                           ; 1 bytes @ 0xD
   242  000022                     	ds	1
   243  000023                     main@i:
   244                           	callstack 0
   245                           
   246                           ; 2 bytes @ 0xE
   247  000023                     	ds	2
   248                           
   249 ;;
   250 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   251 ;;
   252 ;; *************** function _main *****************
   253 ;; Defined at:
   254 ;;		line 64 in file "maincode.c"
   255 ;; Parameters:    Size  Location     Type
   256 ;;		None
   257 ;; Auto vars:     Size  Location     Type
   258 ;;  i               2   14[COMRAM] unsigned int 
   259 ;; Return value:  Size  Location     Type
   260 ;;                  1    wreg      void 
   261 ;; Registers used:
   262 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   263 ;; Tracked objects:
   264 ;;		On entry : 0/0
   265 ;;		On exit  : 0/0
   266 ;;		Unchanged: 0/0
   267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   268 ;;      Params:         0       0       0       0       0       0       0       0       0
   269 ;;      Locals:         2       0       0       0       0       0       0       0       0
   270 ;;      Temps:          0       0       0       0       0       0       0       0       0
   271 ;;      Totals:         2       0       0       0       0       0       0       0       0
   272 ;;Total ram usage:        2 bytes
   273 ;; Hardware stack levels required when called:    8
   274 ;; This function calls:
   275 ;;		_configuracion
   276 ;;		_lcd_init
   277 ;;		_serial_siguientelinea
   278 ;; This function is called by:
   279 ;;		Startup code after reset
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           	psect	text0
   284  0001B4                     __ptext0:
   285                           	callstack 0
   286  0001B4                     _main:
   287                           	callstack 23
   288  0001B4                     
   289                           ;maincode.c: 65:     configuracion();
   290  0001B4  ECDE  F001         	call	_configuracion	;wreg free
   291  0001B8                     
   292                           ;maincode.c: 66:     lcd_init();
   293  0001B8  ECB7  F001         	call	_lcd_init	;wreg free
   294  0001BC                     
   295                           ;maincode.c: 67:     for (unsigned int i=0;i<18;i++){
   296  0001BC  0E00               	movlw	0
   297  0001BE  6E24               	movwf	(main@i+1)^0,c
   298  0001C0  0E00               	movlw	0
   299  0001C2  6E23               	movwf	main@i^0,c
   300  0001C4                     l1081:
   301                           
   302                           ;maincode.c: 68:         TXREG = cadena[i];
   303  0001C4  0E01               	movlw	low _cadena
   304  0001C6  2423               	addwf	main@i^0,w,c
   305  0001C8  6ED9               	movwf	fsr2l,c
   306  0001CA  0E00               	movlw	high _cadena
   307  0001CC  2024               	addwfc	(main@i+1)^0,w,c
   308  0001CE  6EDA               	movwf	fsr2h,c
   309  0001D0  50DF               	movf	indf2,w,c
   310  0001D2  6EAD               	movwf	173,c	;volatile
   311  0001D4                     l66:
   312  0001D4  A2AC               	btfss	172,1,c	;volatile
   313  0001D6  EFEF  F000         	goto	u101
   314  0001DA  EFF1  F000         	goto	u100
   315  0001DE                     u101:
   316  0001DE  EFEA  F000         	goto	l66
   317  0001E2                     u100:
   318  0001E2                     
   319                           ;maincode.c: 70:     }
   320  0001E2  4A23               	infsnz	main@i^0,f,c
   321  0001E4  2A24               	incf	(main@i+1)^0,f,c
   322  0001E6  5024               	movf	(main@i+1)^0,w,c
   323  0001E8  E109               	bnz	u110
   324  0001EA  0E12               	movlw	18
   325  0001EC  5C23               	subwf	main@i^0,w,c
   326  0001EE  A0D8               	btfss	status,0,c
   327  0001F0  EFFC  F000         	goto	u111
   328  0001F4  EFFE  F000         	goto	u110
   329  0001F8                     u111:
   330  0001F8  EFE2  F000         	goto	l1081
   331  0001FC                     u110:
   332  0001FC                     
   333                           ;maincode.c: 71:     serial_siguientelinea();
   334  0001FC  ECCB  F001         	call	_serial_siguientelinea	;wreg free
   335  000200                     l69:
   336  000200  EF00  F001         	goto	l69
   337  000204  EF07  F000         	goto	start
   338  000208                     __end_of_main:
   339                           	callstack 0
   340                           
   341 ;; *************** function _serial_siguientelinea *****************
   342 ;; Defined at:
   343 ;;		line 57 in file "maincode.c"
   344 ;; Parameters:    Size  Location     Type
   345 ;;		None
   346 ;; Auto vars:     Size  Location     Type
   347 ;;		None
   348 ;; Return value:  Size  Location     Type
   349 ;;                  1    wreg      void 
   350 ;; Registers used:
   351 ;;		wreg, status,2
   352 ;; Tracked objects:
   353 ;;		On entry : 0/0
   354 ;;		On exit  : 0/0
   355 ;;		Unchanged: 0/0
   356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   357 ;;      Params:         0       0       0       0       0       0       0       0       0
   358 ;;      Locals:         0       0       0       0       0       0       0       0       0
   359 ;;      Temps:          0       0       0       0       0       0       0       0       0
   360 ;;      Totals:         0       0       0       0       0       0       0       0       0
   361 ;;Total ram usage:        0 bytes
   362 ;; Hardware stack levels used:    1
   363 ;; Hardware stack levels required when called:    4
   364 ;; This function calls:
   365 ;;		Nothing
   366 ;; This function is called by:
   367 ;;		_main
   368 ;; This function uses a non-reentrant model
   369 ;;
   370                           
   371                           	psect	text1
   372  000396                     __ptext1:
   373                           	callstack 0
   374  000396                     _serial_siguientelinea:
   375                           	callstack 26
   376  000396                     
   377                           ;maincode.c: 58:     TXREG = 0x0A;
   378  000396  0E0A               	movlw	10
   379  000398  6EAD               	movwf	173,c	;volatile
   380  00039A                     l53:
   381  00039A  A2AC               	btfss	172,1,c	;volatile
   382  00039C  EFD2  F001         	goto	u51
   383  0003A0  EFD4  F001         	goto	u50
   384  0003A4                     u51:
   385  0003A4  EFCD  F001         	goto	l53
   386  0003A8                     u50:
   387  0003A8                     
   388                           ;maincode.c: 60:     TXREG = 0x0D;
   389  0003A8  0E0D               	movlw	13
   390  0003AA  6EAD               	movwf	173,c	;volatile
   391  0003AC                     l56:
   392  0003AC  A2AC               	btfss	172,1,c	;volatile
   393  0003AE  EFDB  F001         	goto	u61
   394  0003B2  EFDD  F001         	goto	u60
   395  0003B6                     u61:
   396  0003B6  EFD6  F001         	goto	l56
   397  0003BA                     u60:
   398  0003BA  0012               	return		;funcret
   399  0003BC                     __end_of_serial_siguientelinea:
   400                           	callstack 0
   401                           
   402 ;; *************** function _lcd_init *****************
   403 ;; Defined at:
   404 ;;		line 32 in file "maincode.c"
   405 ;; Parameters:    Size  Location     Type
   406 ;;		None
   407 ;; Auto vars:     Size  Location     Type
   408 ;;		None
   409 ;; Return value:  Size  Location     Type
   410 ;;                  1    wreg      void 
   411 ;; Registers used:
   412 ;;		wreg, status,2, status,0, cstack
   413 ;; Tracked objects:
   414 ;;		On entry : 0/0
   415 ;;		On exit  : 0/0
   416 ;;		Unchanged: 0/0
   417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   418 ;;      Params:         0       0       0       0       0       0       0       0       0
   419 ;;      Locals:         0       0       0       0       0       0       0       0       0
   420 ;;      Temps:          1       0       0       0       0       0       0       0       0
   421 ;;      Totals:         1       0       0       0       0       0       0       0       0
   422 ;;Total ram usage:        1 bytes
   423 ;; Hardware stack levels used:    1
   424 ;; Hardware stack levels required when called:    7
   425 ;; This function calls:
   426 ;;		_BORRAR_LCD
   427 ;;		_CURSOR_HOME
   428 ;;		_CURSOR_ONOFF
   429 ;;		_LCD_CONFIG
   430 ;; This function is called by:
   431 ;;		_main
   432 ;; This function uses a non-reentrant model
   433 ;;
   434                           
   435                           	psect	text2
   436  00036E                     __ptext2:
   437                           	callstack 0
   438  00036E                     _lcd_init:
   439                           	callstack 23
   440  00036E                     
   441                           ;maincode.c: 33:     TRISD = 0x00;
   442  00036E  0E00               	movlw	0
   443  000370  6E95               	movwf	149,c	;volatile
   444  000372                     
   445                           ;maincode.c: 34:     LCD_CONFIG();
   446  000372  EC7B  F000         	call	_LCD_CONFIG	;wreg free
   447  000376                     
   448                           ;maincode.c: 35:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   449  000376  0EEA               	movlw	234
   450  000378  6E22               	movwf	??_lcd_init^0,c
   451  00037A  0EC3               	movlw	195
   452  00037C                     u247:
   453  00037C  2EE8               	decfsz	wreg,f,c
   454  00037E  D7FE               	bra	u247
   455  000380  2E22               	decfsz	??_lcd_init^0,f,c
   456  000382  D7FC               	bra	u247
   457  000384  F000               	nop	
   458  000386                     
   459                           ;maincode.c: 36:     BORRAR_LCD();
   460  000386  EC17  F002         	call	_BORRAR_LCD	;wreg free
   461  00038A                     
   462                           ;maincode.c: 37:     CURSOR_HOME();
   463  00038A  EC13  F002         	call	_CURSOR_HOME	;wreg free
   464  00038E                     
   465                           ;maincode.c: 38:     CURSOR_ONOFF(1);
   466  00038E  0E01               	movlw	1
   467  000390  EC89  F001         	call	_CURSOR_ONOFF
   468  000394  0012               	return		;funcret
   469  000396                     __end_of_lcd_init:
   470                           	callstack 0
   471                           
   472 ;; *************** function _LCD_CONFIG *****************
   473 ;; Defined at:
   474 ;;		line 72 in file "LCD.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;		None
   479 ;; Return value:  Size  Location     Type
   480 ;;                  1    wreg      void 
   481 ;; Registers used:
   482 ;;		wreg, status,2, status,0, cstack
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   488 ;;      Params:         0       0       0       0       0       0       0       0       0
   489 ;;      Locals:         0       0       0       0       0       0       0       0       0
   490 ;;      Temps:          1       0       0       0       0       0       0       0       0
   491 ;;      Totals:         1       0       0       0       0       0       0       0       0
   492 ;;Total ram usage:        1 bytes
   493 ;; Hardware stack levels used:    1
   494 ;; Hardware stack levels required when called:    6
   495 ;; This function calls:
   496 ;;		_ENVIA_LCD_CMD
   497 ;;		_ENVIA_NIBBLE
   498 ;; This function is called by:
   499 ;;		_lcd_init
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           	psect	text3
   504  0000F6                     __ptext3:
   505                           	callstack 0
   506  0000F6                     _LCD_CONFIG:
   507                           	callstack 23
   508  0000F6                     
   509                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   510  0000F6  908C               	bcf	140,0,c	;volatile
   511                           
   512                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   513  0000F8  928C               	bcf	140,1,c	;volatile
   514  0000FA                     
   515                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   516  0000FA  0E30               	movlw	48
   517  0000FC  ECED  F001         	call	_ENVIA_NIBBLE
   518  000100                     
   519                           ;LCD.c: 77:         _delay(24000);
   520  000100  0E20               	movlw	32
   521  000102  6E21               	movwf	??_LCD_CONFIG^0,c
   522  000104  0E2A               	movlw	42
   523  000106                     u257:
   524  000106  2EE8               	decfsz	wreg,f,c
   525  000108  D7FE               	bra	u257
   526  00010A  2E21               	decfsz	??_LCD_CONFIG^0,f,c
   527  00010C  D7FC               	bra	u257
   528  00010E                     
   529                           ;LCD.c: 78:         _delay(24000);
   530  00010E  0E20               	movlw	32
   531  000110  6E21               	movwf	??_LCD_CONFIG^0,c
   532  000112  0E2A               	movlw	42
   533  000114                     u267:
   534  000114  2EE8               	decfsz	wreg,f,c
   535  000116  D7FE               	bra	u267
   536  000118  2E21               	decfsz	??_LCD_CONFIG^0,f,c
   537  00011A  D7FC               	bra	u267
   538                           
   539                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   540  00011C  0E30               	movlw	48
   541  00011E  ECED  F001         	call	_ENVIA_NIBBLE
   542  000122                     
   543                           ;LCD.c: 83:  _delay(1200);
   544  000122  0EF0               	movlw	240
   545  000124                     u277:
   546  000124  D000               	nop2	
   547  000126  2EE8               	decfsz	wreg,f,c
   548  000128  D7FD               	bra	u277
   549  00012A                     
   550                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   551  00012A  0E30               	movlw	48
   552  00012C  ECED  F001         	call	_ENVIA_NIBBLE
   553  000130                     
   554                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   555  000130  0E20               	movlw	32
   556  000132  ECED  F001         	call	_ENVIA_NIBBLE
   557  000136                     
   558                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   559  000136  0E01               	movlw	1
   560  000138  EC21  F001         	call	_ENVIA_LCD_CMD
   561  00013C                     
   562                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   563  00013C  0E28               	movlw	40
   564  00013E  EC21  F001         	call	_ENVIA_LCD_CMD
   565  000142                     
   566                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   567  000142  0E0F               	movlw	15
   568  000144  EC21  F001         	call	_ENVIA_LCD_CMD
   569  000148                     
   570                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   571  000148  0E06               	movlw	6
   572  00014A  EC21  F001         	call	_ENVIA_LCD_CMD
   573  00014E                     
   574                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   575  00014E  0E01               	movlw	1
   576  000150  EC21  F001         	call	_ENVIA_LCD_CMD
   577  000154  0012               	return		;funcret
   578  000156                     __end_of_LCD_CONFIG:
   579                           	callstack 0
   580                           
   581 ;; *************** function _CURSOR_ONOFF *****************
   582 ;; Defined at:
   583 ;;		line 35 in file "LCD.c"
   584 ;; Parameters:    Size  Location     Type
   585 ;;  estado          1    wreg     unsigned char 
   586 ;; Auto vars:     Size  Location     Type
   587 ;;  estado          1   12[COMRAM] unsigned char 
   588 ;; Return value:  Size  Location     Type
   589 ;;                  1    wreg      void 
   590 ;; Registers used:
   591 ;;		wreg, status,2, status,0, cstack
   592 ;; Tracked objects:
   593 ;;		On entry : 0/0
   594 ;;		On exit  : 0/0
   595 ;;		Unchanged: 0/0
   596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   597 ;;      Params:         0       0       0       0       0       0       0       0       0
   598 ;;      Locals:         1       0       0       0       0       0       0       0       0
   599 ;;      Temps:          0       0       0       0       0       0       0       0       0
   600 ;;      Totals:         1       0       0       0       0       0       0       0       0
   601 ;;Total ram usage:        1 bytes
   602 ;; Hardware stack levels used:    1
   603 ;; Hardware stack levels required when called:    6
   604 ;; This function calls:
   605 ;;		_ENVIA_LCD_CMD
   606 ;; This function is called by:
   607 ;;		_lcd_init
   608 ;; This function uses a non-reentrant model
   609 ;;
   610                           
   611                           	psect	text4
   612  000312                     __ptext4:
   613                           	callstack 0
   614  000312                     _CURSOR_ONOFF:
   615                           	callstack 23
   616                           
   617                           ;incstack = 0
   618                           ;CURSOR_ONOFF@estado stored from wreg
   619  000312  6E21               	movwf	CURSOR_ONOFF@estado^0,c
   620  000314                     
   621                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   622  000314  5021               	movf	CURSOR_ONOFF@estado^0,w,c
   623  000316  A4D8               	btfss	status,2,c
   624  000318  EF90  F001         	goto	u31
   625  00031C  EF92  F001         	goto	u30
   626  000320                     u31:
   627  000320  EF95  F001         	goto	l975
   628  000324                     u30:
   629  000324  0E0E               	movlw	14
   630  000326  EC21  F001         	call	_ENVIA_LCD_CMD
   631  00032A                     l975:
   632                           
   633                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   634  00032A  0421               	decf	CURSOR_ONOFF@estado^0,w,c
   635  00032C  A4D8               	btfss	status,2,c
   636  00032E  EF9B  F001         	goto	u41
   637  000332  EF9D  F001         	goto	u40
   638  000336                     u41:
   639  000336  EFA0  F001         	goto	l121
   640  00033A                     u40:
   641  00033A  0E0C               	movlw	12
   642  00033C  EC21  F001         	call	_ENVIA_LCD_CMD
   643  000340                     l121:
   644  000340  0012               	return		;funcret
   645  000342                     __end_of_CURSOR_ONOFF:
   646                           	callstack 0
   647                           
   648 ;; *************** function _CURSOR_HOME *****************
   649 ;; Defined at:
   650 ;;		line 30 in file "LCD.c"
   651 ;; Parameters:    Size  Location     Type
   652 ;;		None
   653 ;; Auto vars:     Size  Location     Type
   654 ;;		None
   655 ;; Return value:  Size  Location     Type
   656 ;;                  1    wreg      void 
   657 ;; Registers used:
   658 ;;		wreg, status,2, status,0, cstack
   659 ;; Tracked objects:
   660 ;;		On entry : 0/0
   661 ;;		On exit  : 0/0
   662 ;;		Unchanged: 0/0
   663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   664 ;;      Params:         0       0       0       0       0       0       0       0       0
   665 ;;      Locals:         0       0       0       0       0       0       0       0       0
   666 ;;      Temps:          0       0       0       0       0       0       0       0       0
   667 ;;      Totals:         0       0       0       0       0       0       0       0       0
   668 ;;Total ram usage:        0 bytes
   669 ;; Hardware stack levels used:    1
   670 ;; Hardware stack levels required when called:    6
   671 ;; This function calls:
   672 ;;		_ENVIA_LCD_CMD
   673 ;; This function is called by:
   674 ;;		_lcd_init
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           	psect	text5
   679  000426                     __ptext5:
   680                           	callstack 0
   681  000426                     _CURSOR_HOME:
   682                           	callstack 23
   683  000426                     
   684                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   685  000426  0E02               	movlw	2
   686  000428  EC21  F001         	call	_ENVIA_LCD_CMD
   687  00042C  0012               	return		;funcret
   688  00042E                     __end_of_CURSOR_HOME:
   689                           	callstack 0
   690                           
   691 ;; *************** function _BORRAR_LCD *****************
   692 ;; Defined at:
   693 ;;		line 67 in file "LCD.c"
   694 ;; Parameters:    Size  Location     Type
   695 ;;		None
   696 ;; Auto vars:     Size  Location     Type
   697 ;;		None
   698 ;; Return value:  Size  Location     Type
   699 ;;                  1    wreg      void 
   700 ;; Registers used:
   701 ;;		wreg, status,2, status,0, cstack
   702 ;; Tracked objects:
   703 ;;		On entry : 0/0
   704 ;;		On exit  : 0/0
   705 ;;		Unchanged: 0/0
   706 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   707 ;;      Params:         0       0       0       0       0       0       0       0       0
   708 ;;      Locals:         0       0       0       0       0       0       0       0       0
   709 ;;      Temps:          0       0       0       0       0       0       0       0       0
   710 ;;      Totals:         0       0       0       0       0       0       0       0       0
   711 ;;Total ram usage:        0 bytes
   712 ;; Hardware stack levels used:    1
   713 ;; Hardware stack levels required when called:    6
   714 ;; This function calls:
   715 ;;		_ENVIA_LCD_CMD
   716 ;; This function is called by:
   717 ;;		_lcd_init
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           	psect	text6
   722  00042E                     __ptext6:
   723                           	callstack 0
   724  00042E                     _BORRAR_LCD:
   725                           	callstack 23
   726  00042E                     
   727                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   728  00042E  0E01               	movlw	1
   729  000430  EC21  F001         	call	_ENVIA_LCD_CMD
   730  000434  0012               	return		;funcret
   731  000436                     __end_of_BORRAR_LCD:
   732                           	callstack 0
   733                           
   734 ;; *************** function _ENVIA_LCD_CMD *****************
   735 ;; Defined at:
   736 ;;		line 104 in file "LCD.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;  dato            1    wreg     unsigned char 
   739 ;; Auto vars:     Size  Location     Type
   740 ;;  dato            1   10[COMRAM] unsigned char 
   741 ;;  aux             1   11[COMRAM] unsigned char 
   742 ;; Return value:  Size  Location     Type
   743 ;;                  1    wreg      void 
   744 ;; Registers used:
   745 ;;		wreg, status,2, status,0, cstack
   746 ;; Tracked objects:
   747 ;;		On entry : 0/0
   748 ;;		On exit  : 0/0
   749 ;;		Unchanged: 0/0
   750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   751 ;;      Params:         0       0       0       0       0       0       0       0       0
   752 ;;      Locals:         2       0       0       0       0       0       0       0       0
   753 ;;      Temps:          0       0       0       0       0       0       0       0       0
   754 ;;      Totals:         2       0       0       0       0       0       0       0       0
   755 ;;Total ram usage:        2 bytes
   756 ;; Hardware stack levels used:    1
   757 ;; Hardware stack levels required when called:    5
   758 ;; This function calls:
   759 ;;		_ENVIA_NIBBLE
   760 ;;		_LEER_LCD
   761 ;; This function is called by:
   762 ;;		_CURSOR_HOME
   763 ;;		_CURSOR_ONOFF
   764 ;;		_BORRAR_LCD
   765 ;;		_LCD_CONFIG
   766 ;;		_BLINK_CURSOR
   767 ;;		_DISPLAY_ONOFF
   768 ;;		_GENERACARACTER
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           	psect	text7
   773  000242                     __ptext7:
   774                           	callstack 0
   775  000242                     _ENVIA_LCD_CMD:
   776                           	callstack 23
   777                           
   778                           ;incstack = 0
   779                           ;ENVIA_LCD_CMD@dato stored from wreg
   780  000242  6E1F               	movwf	ENVIA_LCD_CMD@dato^0,c
   781  000244                     
   782                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
   783  000244  908C               	bcf	140,0,c	;volatile
   784  000246                     
   785                           ;LCD.c: 108:  LEER_LCD();
   786  000246  EC09  F000         	call	_LEER_LCD	;wreg free
   787  00024A                     
   788                           ;LCD.c: 109:  TRISD = 0b00000000;
   789  00024A  0E00               	movlw	0
   790  00024C  6E95               	movwf	149,c	;volatile
   791  00024E                     
   792                           ;LCD.c: 111:         _delay(1200);
   793  00024E  0EF0               	movlw	240
   794  000250                     u287:
   795  000250  D000               	nop2	
   796  000252  2EE8               	decfsz	wreg,f,c
   797  000254  D7FD               	bra	u287
   798  000256                     
   799                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
   800  000256  928C               	bcf	140,1,c	;volatile
   801  000258                     
   802                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
   803  000258  948C               	bcf	140,2,c	;volatile
   804  00025A                     
   805                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
   806  00025A  908C               	bcf	140,0,c	;volatile
   807  00025C                     
   808                           ;LCD.c: 115:  aux = dato & 0xF0;
   809  00025C  501F               	movf	ENVIA_LCD_CMD@dato^0,w,c
   810  00025E  0BF0               	andlw	240
   811  000260  6E20               	movwf	ENVIA_LCD_CMD@aux^0,c
   812  000262                     
   813                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
   814  000262  5020               	movf	ENVIA_LCD_CMD@aux^0,w,c
   815  000264  ECED  F001         	call	_ENVIA_NIBBLE
   816  000268                     
   817                           ;LCD.c: 117:  aux = dato<<4;
   818  000268  381F               	swapf	ENVIA_LCD_CMD@dato^0,w,c
   819  00026A  0BF0               	andlw	240
   820  00026C  6E20               	movwf	ENVIA_LCD_CMD@aux^0,c
   821  00026E                     
   822                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
   823  00026E  5020               	movf	ENVIA_LCD_CMD@aux^0,w,c
   824  000270  ECED  F001         	call	_ENVIA_NIBBLE
   825  000274  0012               	return		;funcret
   826  000276                     __end_of_ENVIA_LCD_CMD:
   827                           	callstack 0
   828                           
   829 ;; *************** function _LEER_LCD *****************
   830 ;; Defined at:
   831 ;;		line 121 in file "LCD.c"
   832 ;; Parameters:    Size  Location     Type
   833 ;;		None
   834 ;; Auto vars:     Size  Location     Type
   835 ;;  aux             1    9[COMRAM] unsigned char 
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, status,2, status,0
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   845 ;;      Params:         0       0       0       0       0       0       0       0       0
   846 ;;      Locals:         1       0       0       0       0       0       0       0       0
   847 ;;      Temps:          0       0       0       0       0       0       0       0       0
   848 ;;      Totals:         1       0       0       0       0       0       0       0       0
   849 ;;Total ram usage:        1 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; Hardware stack levels required when called:    4
   852 ;; This function calls:
   853 ;;		Nothing
   854 ;; This function is called by:
   855 ;;		_ENVIA_LCD_CMD
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           	psect	text8
   860  000012                     __ptext8:
   861                           	callstack 0
   862  000012                     _LEER_LCD:
   863                           	callstack 23
   864  000012                     
   865                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
   866  000012  0EF8               	movlw	248
   867  000014  6E95               	movwf	149,c	;volatile
   868  000016                     
   869                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
   870  000016  908C               	bcf	140,0,c	;volatile
   871  000018                     
   872                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
   873  000018  828C               	bsf	140,1,c	;volatile
   874  00001A                     
   875                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
   876  00001A  848C               	bsf	140,2,c	;volatile
   877  00001C                     
   878                           ;LCD.c: 128:         _delay(1200);
   879  00001C  0EF0               	movlw	240
   880  00001E                     u297:
   881  00001E  D000               	nop2	
   882  000020  2EE8               	decfsz	wreg,f,c
   883  000022  D7FD               	bra	u297
   884  000024                     
   885                           ;LCD.c: 130:  aux = PORTD;
   886  000024  CF83 F01E          	movff	3971,LEER_LCD@aux	;volatile
   887  000028                     
   888                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
   889  000028  948C               	bcf	140,2,c	;volatile
   890  00002A                     
   891                           ;LCD.c: 132:         _delay(1200);
   892  00002A  0EF0               	movlw	240
   893  00002C                     u307:
   894  00002C  D000               	nop2	
   895  00002E  2EE8               	decfsz	wreg,f,c
   896  000030  D7FD               	bra	u307
   897  000032                     
   898                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
   899  000032  848C               	bsf	140,2,c	;volatile
   900  000034                     
   901                           ;LCD.c: 135:         _delay(1200);
   902  000034  0EF0               	movlw	240
   903  000036                     u317:
   904  000036  D000               	nop2	
   905  000038  2EE8               	decfsz	wreg,f,c
   906  00003A  D7FD               	bra	u317
   907  00003C                     
   908                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
   909  00003C  948C               	bcf	140,2,c	;volatile
   910  00003E                     l851:
   911                           
   912                           ;LCD.c: 138:  aux = aux & 0x80;
   913  00003E  501E               	movf	LEER_LCD@aux^0,w,c
   914  000040  0B80               	andlw	128
   915  000042  6E1E               	movwf	LEER_LCD@aux^0,c
   916                           
   917                           ;LCD.c: 139:  while(aux == 0x80)
   918  000044  EF38  F000         	goto	l865
   919  000048                     l146:
   920                           
   921                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
   922  000048  848C               	bsf	140,2,c	;volatile
   923  00004A                     
   924                           ;LCD.c: 142:             _delay(1200);
   925  00004A  0EF0               	movlw	240
   926  00004C                     u327:
   927  00004C  D000               	nop2	
   928  00004E  2EE8               	decfsz	wreg,f,c
   929  000050  D7FD               	bra	u327
   930  000052                     
   931                           ;LCD.c: 143:             aux = PORTD;
   932  000052  CF83 F01E          	movff	3971,LEER_LCD@aux	;volatile
   933  000056                     
   934                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
   935  000056  948C               	bcf	140,2,c	;volatile
   936                           
   937                           ;LCD.c: 145:             _delay(1200);
   938  000058  0EF0               	movlw	240
   939  00005A                     u337:
   940  00005A  D000               	nop2	
   941  00005C  2EE8               	decfsz	wreg,f,c
   942  00005E  D7FD               	bra	u337
   943  000060                     
   944                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
   945  000060  848C               	bsf	140,2,c	;volatile
   946                           
   947                           ;LCD.c: 147:             _delay(1200);
   948  000062  0EF0               	movlw	240
   949  000064                     u347:
   950  000064  D000               	nop2	
   951  000066  2EE8               	decfsz	wreg,f,c
   952  000068  D7FD               	bra	u347
   953  00006A                     
   954                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
   955  00006A  948C               	bcf	140,2,c	;volatile
   956  00006C  EF1F  F000         	goto	l851
   957  000070                     l865:
   958                           
   959                           ;LCD.c: 139:  while(aux == 0x80)
   960  000070  0E80               	movlw	128
   961  000072  181E               	xorwf	LEER_LCD@aux^0,w,c
   962  000074  B4D8               	btfsc	status,2,c
   963  000076  EF3F  F000         	goto	u11
   964  00007A  EF41  F000         	goto	u10
   965  00007E                     u11:
   966  00007E  EF24  F000         	goto	l146
   967  000082                     u10:
   968  000082  0012               	return		;funcret
   969  000084                     __end_of_LEER_LCD:
   970                           	callstack 0
   971                           
   972 ;; *************** function _ENVIA_NIBBLE *****************
   973 ;; Defined at:
   974 ;;		line 93 in file "LCD.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;  dato            1    wreg     unsigned char 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  dato            1    9[COMRAM] unsigned char 
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg, status,2, status,0
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   988 ;;      Params:         0       0       0       0       0       0       0       0       0
   989 ;;      Locals:         1       0       0       0       0       0       0       0       0
   990 ;;      Temps:          0       0       0       0       0       0       0       0       0
   991 ;;      Totals:         1       0       0       0       0       0       0       0       0
   992 ;;Total ram usage:        1 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; Hardware stack levels required when called:    4
   995 ;; This function calls:
   996 ;;		Nothing
   997 ;; This function is called by:
   998 ;;		_LCD_CONFIG
   999 ;;		_ENVIA_LCD_CMD
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           	psect	text9
  1004  0003DA                     __ptext9:
  1005                           	callstack 0
  1006  0003DA                     _ENVIA_NIBBLE:
  1007                           	callstack 24
  1008                           
  1009                           ;incstack = 0
  1010                           ;ENVIA_NIBBLE@dato stored from wreg
  1011  0003DA  6E1E               	movwf	ENVIA_NIBBLE@dato^0,c
  1012  0003DC                     
  1013                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1014  0003DC  0E0F               	movlw	15
  1015  0003DE  168C               	andwf	140,f,c	;volatile
  1016                           
  1017                           ;LCD.c: 96:  dato &= 0xF0;
  1018  0003E0  0EF0               	movlw	240
  1019  0003E2  161E               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1020                           
  1021                           ;LCD.c: 97:  LATD|= dato;
  1022  0003E4  501E               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1023  0003E6  128C               	iorwf	140,f,c	;volatile
  1024  0003E8                     
  1025                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1026  0003E8  848C               	bsf	140,2,c	;volatile
  1027  0003EA                     
  1028                           ;LCD.c: 100:         _delay(1200);
  1029  0003EA  0EF0               	movlw	240
  1030  0003EC                     u357:
  1031  0003EC  D000               	nop2	
  1032  0003EE  2EE8               	decfsz	wreg,f,c
  1033  0003F0  D7FD               	bra	u357
  1034  0003F2                     
  1035                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1036  0003F2  948C               	bcf	140,2,c	;volatile
  1037  0003F4  0012               	return		;funcret
  1038  0003F6                     __end_of_ENVIA_NIBBLE:
  1039                           	callstack 0
  1040                           
  1041 ;; *************** function _configuracion *****************
  1042 ;; Defined at:
  1043 ;;		line 41 in file "maincode.c"
  1044 ;; Parameters:    Size  Location     Type
  1045 ;;		None
  1046 ;; Auto vars:     Size  Location     Type
  1047 ;;		None
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  1    wreg      void 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1057 ;;      Params:         0       0       0       0       0       0       0       0       0
  1058 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1059 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1060 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1061 ;;Total ram usage:        0 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; Hardware stack levels required when called:    4
  1064 ;; This function calls:
  1065 ;;		Nothing
  1066 ;; This function is called by:
  1067 ;;		_main
  1068 ;; This function uses a non-reentrant model
  1069 ;;
  1070                           
  1071                           	psect	text10
  1072  0003BC                     __ptext10:
  1073                           	callstack 0
  1074  0003BC                     _configuracion:
  1075                           	callstack 26
  1076  0003BC                     
  1077                           ;maincode.c: 42:     BAUDCONbits.BRG16 = 1;
  1078  0003BC  86B8               	bsf	184,3,c	;volatile
  1079                           
  1080                           ;maincode.c: 43:     TXSTAbits.BRGH = 1;
  1081  0003BE  84AC               	bsf	172,2,c	;volatile
  1082                           
  1083                           ;maincode.c: 44:     TXSTAbits.SYNC = 0;
  1084  0003C0  98AC               	bcf	172,4,c	;volatile
  1085  0003C2                     
  1086                           ;maincode.c: 45:     SPBRGH = 0x04;
  1087  0003C2  0E04               	movlw	4
  1088  0003C4  6EB0               	movwf	176,c	;volatile
  1089                           
  1090                           ;maincode.c: 46:     SPBRG = 0xE1;
  1091  0003C6  0EE1               	movlw	225
  1092  0003C8  6EAF               	movwf	175,c	;volatile
  1093  0003CA                     
  1094                           ;maincode.c: 47:     RCSTAbits.SPEN = 1;
  1095  0003CA  8EAB               	bsf	171,7,c	;volatile
  1096  0003CC                     
  1097                           ;maincode.c: 48:     TXSTAbits.TXEN = 1;
  1098  0003CC  8AAC               	bsf	172,5,c	;volatile
  1099  0003CE                     
  1100                           ;maincode.c: 49:     TRISCbits.RC6 = 0;
  1101  0003CE  9C94               	bcf	148,6,c	;volatile
  1102  0003D0                     
  1103                           ;maincode.c: 50:     RCSTAbits.CREN = 1;
  1104  0003D0  88AB               	bsf	171,4,c	;volatile
  1105  0003D2                     
  1106                           ;maincode.c: 51:     PIE1bits.RCIE = 1;
  1107  0003D2  8A9D               	bsf	157,5,c	;volatile
  1108  0003D4                     
  1109                           ;maincode.c: 52:     INTCONbits.PEIE = 1;
  1110  0003D4  8CF2               	bsf	242,6,c	;volatile
  1111  0003D6                     
  1112                           ;maincode.c: 53:     INTCONbits.GIE = 1;
  1113  0003D6  8EF2               	bsf	242,7,c	;volatile
  1114  0003D8  0012               	return		;funcret
  1115  0003DA                     __end_of_configuracion:
  1116                           	callstack 0
  1117                           
  1118 ;; *************** function _RCIsr *****************
  1119 ;; Defined at:
  1120 ;;		line 77 in file "maincode.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;		None
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1134 ;;      Params:         0       0       0       0       0       0       0       0       0
  1135 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1136 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1137 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1138 ;;Total ram usage:        2 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; Hardware stack levels required when called:    3
  1141 ;; This function calls:
  1142 ;;		_ESCRIBE_MENSAJE
  1143 ;;		_POS_CURSOR
  1144 ;; This function is called by:
  1145 ;;		Interrupt level 2
  1146 ;; This function uses a non-reentrant model
  1147 ;;
  1148                           
  1149                           	psect	intcode
  1150  000008                     __pintcode:
  1151                           	callstack 0
  1152  000008                     _RCIsr:
  1153                           	callstack 23
  1154                           
  1155                           ;incstack = 0
  1156  000008  8226               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  1157  00000A  EDAB  F000         	call	int_func,f	;refresh shadow registers
  1158                           
  1159                           	psect	intcode_body
  1160  000156                     __pintcode_body:
  1161                           	callstack 23
  1162  000156                     int_func:
  1163                           	callstack 23
  1164  000156  0006               	pop		; remove dummy address from shadow register refresh
  1165  000158  CFD9 F01C          	movff	fsr2l,??_RCIsr
  1166  00015C  CFDA F01D          	movff	fsr2h,??_RCIsr+1
  1167  000160                     
  1168                           ;maincode.c: 78:     PIR1bits.RCIF = 0;
  1169  000160  9A9E               	bcf	158,5,c	;volatile
  1170  000162                     
  1171                           ;maincode.c: 79:     if (RCREG == 0x0D) {
  1172  000162  0E0D               	movlw	13
  1173  000164  18AE               	xorwf	174,w,c	;volatile
  1174  000166  A4D8               	btfss	status,2,c
  1175  000168  EFB8  F000         	goto	i2u22_41
  1176  00016C  EFBA  F000         	goto	i2u22_40
  1177  000170                     i2u22_41:
  1178  000170  EFCB  F000         	goto	i2l1251
  1179  000174                     i2u22_40:
  1180  000174                     
  1181                           ;maincode.c: 80:         POS_CURSOR(1, 0);
  1182  000174  0E00               	movlw	0
  1183  000176  6E18               	movwf	POS_CURSOR@columna^0,c
  1184  000178  0E01               	movlw	1
  1185  00017A  EC04  F001         	call	_POS_CURSOR
  1186  00017E                     
  1187                           ;maincode.c: 81:         ESCRIBE_MENSAJE(ingreso, 16);
  1188  00017E  0E26               	movlw	low _ingreso
  1189  000180  6E18               	movwf	ESCRIBE_MENSAJE@cadena^0,c
  1190  000182  0E00               	movlw	high _ingreso
  1191  000184  6E19               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
  1192  000186  0E10               	movlw	16
  1193  000188  6E1A               	movwf	ESCRIBE_MENSAJE@tam^0,c
  1194  00018A  EC55  F001         	call	_ESCRIBE_MENSAJE	;wreg free
  1195  00018E                     
  1196                           ;maincode.c: 82:         numero = 0;
  1197  00018E  0E00               	movlw	0
  1198  000190  6E25               	movwf	_numero^0,c
  1199                           
  1200                           ;maincode.c: 83:     }
  1201  000192  EFD4  F000         	goto	i2l79
  1202  000196                     i2l1251:
  1203                           
  1204                           ;maincode.c: 85:         ingreso[numero] = RCREG;
  1205  000196  0E26               	movlw	low _ingreso
  1206  000198  2425               	addwf	_numero^0,w,c
  1207  00019A  6ED9               	movwf	fsr2l,c
  1208  00019C  6ADA               	clrf	fsr2h,c
  1209  00019E  0E00               	movlw	high _ingreso
  1210  0001A0  22DA               	addwfc	fsr2h,f,c
  1211  0001A2  CFAE FFDF          	movff	4014,indf2	;volatile
  1212  0001A6                     
  1213                           ;maincode.c: 86:         numero++;
  1214  0001A6  2A25               	incf	_numero^0,f,c
  1215  0001A8                     i2l79:
  1216  0001A8  C01D  FFDA         	movff	??_RCIsr+1,fsr2h
  1217  0001AC  C01C  FFD9         	movff	??_RCIsr,fsr2l
  1218  0001B0  9226               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1219  0001B2  0011               	retfie		f
  1220  0001B4                     __end_of_RCIsr:
  1221                           	callstack 0
  1222                           
  1223 ;; *************** function _POS_CURSOR *****************
  1224 ;; Defined at:
  1225 ;;		line 6 in file "LCD.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;  fila            1    wreg     unsigned char 
  1228 ;;  columna         1    3[COMRAM] unsigned char 
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  fila            1    4[COMRAM] unsigned char 
  1231 ;; Return value:  Size  Location     Type
  1232 ;;                  1    wreg      void 
  1233 ;; Registers used:
  1234 ;;		wreg, status,2, status,0, cstack
  1235 ;; Tracked objects:
  1236 ;;		On entry : 0/0
  1237 ;;		On exit  : 0/0
  1238 ;;		Unchanged: 0/0
  1239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1240 ;;      Params:         1       0       0       0       0       0       0       0       0
  1241 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1242 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1243 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1244 ;;Total ram usage:        2 bytes
  1245 ;; Hardware stack levels used:    1
  1246 ;; Hardware stack levels required when called:    2
  1247 ;; This function calls:
  1248 ;;		i2_ENVIA_LCD_CMD
  1249 ;; This function is called by:
  1250 ;;		_RCIsr
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           	psect	text12
  1255  000208                     __ptext12:
  1256                           	callstack 0
  1257  000208                     _POS_CURSOR:
  1258                           	callstack 23
  1259                           
  1260                           ;incstack = 0
  1261                           ;POS_CURSOR@fila stored from wreg
  1262  000208  6E19               	movwf	POS_CURSOR@fila^0,c
  1263  00020A                     
  1264                           ;LCD.c: 6: void POS_CURSOR(unsigned char fila,unsigned char columna);LCD.c: 7: {;LCD.c: 
      +                          8:  if(fila == 1)
  1265  00020A  0419               	decf	POS_CURSOR@fila^0,w,c
  1266  00020C  A4D8               	btfss	status,2,c
  1267  00020E  EF0B  F001         	goto	i2u19_41
  1268  000212  EF0D  F001         	goto	i2u19_40
  1269  000216                     i2u19_41:
  1270  000216  EF13  F001         	goto	i2l1229
  1271  00021A                     i2u19_40:
  1272  00021A                     
  1273                           ;LCD.c: 9:  {;LCD.c: 10:   ENVIA_LCD_CMD(0x80+columna);
  1274  00021A  5018               	movf	POS_CURSOR@columna^0,w,c
  1275  00021C  0F80               	addlw	128
  1276  00021E  EC3B  F001         	call	i2_ENVIA_LCD_CMD
  1277                           
  1278                           ;LCD.c: 11:  }
  1279  000222  EF20  F001         	goto	i2l103
  1280  000226                     i2l1229:
  1281  000226  0E02               	movlw	2
  1282  000228  1819               	xorwf	POS_CURSOR@fila^0,w,c
  1283  00022A  A4D8               	btfss	status,2,c
  1284  00022C  EF1A  F001         	goto	i2u20_41
  1285  000230  EF1C  F001         	goto	i2u20_40
  1286  000234                     i2u20_41:
  1287  000234  EF20  F001         	goto	i2l103
  1288  000238                     i2u20_40:
  1289  000238                     
  1290                           ;LCD.c: 13:  {;LCD.c: 14:   ENVIA_LCD_CMD(0xC0+columna);
  1291  000238  5018               	movf	POS_CURSOR@columna^0,w,c
  1292  00023A  0FC0               	addlw	192
  1293  00023C  EC3B  F001         	call	i2_ENVIA_LCD_CMD
  1294  000240                     i2l103:
  1295  000240  0012               	return		;funcret
  1296  000242                     __end_of_POS_CURSOR:
  1297                           	callstack 0
  1298                           
  1299 ;; *************** function i2_ENVIA_LCD_CMD *****************
  1300 ;; Defined at:
  1301 ;;		line 104 in file "LCD.c"
  1302 ;; Parameters:    Size  Location     Type
  1303 ;;  dato            1    wreg     unsigned char 
  1304 ;; Auto vars:     Size  Location     Type
  1305 ;;  dato            1    1[COMRAM] unsigned char 
  1306 ;;  aux             1    2[COMRAM] unsigned char 
  1307 ;; Return value:  Size  Location     Type
  1308 ;;                  1    wreg      void 
  1309 ;; Registers used:
  1310 ;;		wreg, status,2, status,0, cstack
  1311 ;; Tracked objects:
  1312 ;;		On entry : 0/0
  1313 ;;		On exit  : 0/0
  1314 ;;		Unchanged: 0/0
  1315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1316 ;;      Params:         0       0       0       0       0       0       0       0       0
  1317 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1318 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1319 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1320 ;;Total ram usage:        2 bytes
  1321 ;; Hardware stack levels used:    1
  1322 ;; Hardware stack levels required when called:    1
  1323 ;; This function calls:
  1324 ;;		i2_ENVIA_NIBBLE
  1325 ;;		i2_LEER_LCD
  1326 ;; This function is called by:
  1327 ;;		_POS_CURSOR
  1328 ;; This function uses a non-reentrant model
  1329 ;;
  1330                           
  1331                           	psect	text13
  1332  000276                     __ptext13:
  1333                           	callstack 0
  1334  000276                     i2_ENVIA_LCD_CMD:
  1335                           	callstack 23
  1336                           
  1337                           ;incstack = 0
  1338                           ;i2ENVIA_LCD_CMD@dato stored from wreg
  1339  000276  6E16               	movwf	i2ENVIA_LCD_CMD@dato^0,c
  1340  000278                     
  1341                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1342  000278  908C               	bcf	140,0,c	;volatile
  1343  00027A                     
  1344                           ;LCD.c: 108:  LEER_LCD();
  1345  00027A  EC42  F000         	call	i2_LEER_LCD	;wreg free
  1346  00027E                     
  1347                           ;LCD.c: 109:  TRISD = 0b00000000;
  1348  00027E  0E00               	movlw	0
  1349  000280  6E95               	movwf	149,c	;volatile
  1350  000282                     
  1351                           ;LCD.c: 111:         _delay(1200);
  1352  000282  0EF0               	movlw	240
  1353  000284                     i2u36_47:
  1354  000284  D000               	nop2	
  1355  000286  2EE8               	decfsz	wreg,f,c
  1356  000288  D7FD               	bra	i2u36_47
  1357  00028A                     
  1358                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1359  00028A  928C               	bcf	140,1,c	;volatile
  1360  00028C                     
  1361                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1362  00028C  948C               	bcf	140,2,c	;volatile
  1363  00028E                     
  1364                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1365  00028E  908C               	bcf	140,0,c	;volatile
  1366  000290                     
  1367                           ;LCD.c: 115:  aux = dato & 0xF0;
  1368  000290  5016               	movf	i2ENVIA_LCD_CMD@dato^0,w,c
  1369  000292  0BF0               	andlw	240
  1370  000294  6E17               	movwf	i2ENVIA_LCD_CMD@aux^0,c
  1371  000296                     
  1372                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1373  000296  5017               	movf	i2ENVIA_LCD_CMD@aux^0,w,c
  1374  000298  ECFB  F001         	call	i2_ENVIA_NIBBLE
  1375  00029C                     
  1376                           ;LCD.c: 117:  aux = dato<<4;
  1377  00029C  3816               	swapf	i2ENVIA_LCD_CMD@dato^0,w,c
  1378  00029E  0BF0               	andlw	240
  1379  0002A0  6E17               	movwf	i2ENVIA_LCD_CMD@aux^0,c
  1380  0002A2                     
  1381                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1382  0002A2  5017               	movf	i2ENVIA_LCD_CMD@aux^0,w,c
  1383  0002A4  ECFB  F001         	call	i2_ENVIA_NIBBLE
  1384  0002A8  0012               	return		;funcret
  1385  0002AA                     __end_ofi2_ENVIA_LCD_CMD:
  1386                           	callstack 0
  1387                           
  1388 ;; *************** function _ESCRIBE_MENSAJE *****************
  1389 ;; Defined at:
  1390 ;;		line 41 in file "LCD.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  1393 ;;		 -> ingreso(0), 
  1394 ;;  tam             1    5[COMRAM] unsigned char 
  1395 ;; Auto vars:     Size  Location     Type
  1396 ;;  i               1    6[COMRAM] unsigned char 
  1397 ;; Return value:  Size  Location     Type
  1398 ;;                  1    wreg      void 
  1399 ;; Registers used:
  1400 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1401 ;; Tracked objects:
  1402 ;;		On entry : 0/0
  1403 ;;		On exit  : 0/0
  1404 ;;		Unchanged: 0/0
  1405 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1406 ;;      Params:         3       0       0       0       0       0       0       0       0
  1407 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1408 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1409 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1410 ;;Total ram usage:        4 bytes
  1411 ;; Hardware stack levels used:    1
  1412 ;; Hardware stack levels required when called:    2
  1413 ;; This function calls:
  1414 ;;		_ENVIA_CHAR
  1415 ;; This function is called by:
  1416 ;;		_RCIsr
  1417 ;; This function uses a non-reentrant model
  1418 ;;
  1419                           
  1420                           	psect	text14
  1421  0002AA                     __ptext14:
  1422                           	callstack 0
  1423  0002AA                     _ESCRIBE_MENSAJE:
  1424                           	callstack 23
  1425  0002AA                     
  1426                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1427  0002AA  0E00               	movlw	0
  1428  0002AC  6E1B               	movwf	ESCRIBE_MENSAJE@i^0,c
  1429                           
  1430                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1431  0002AE  0E00               	movlw	0
  1432  0002B0  6E1B               	movwf	ESCRIBE_MENSAJE@i^0,c
  1433  0002B2  EF65  F001         	goto	i2l1239
  1434  0002B6                     i2l1235:
  1435                           
  1436                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1437  0002B6  501B               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1438  0002B8  2418               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1439  0002BA  6ED9               	movwf	fsr2l,c
  1440  0002BC  0E00               	movlw	0
  1441  0002BE  2019               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1442  0002C0  6EDA               	movwf	fsr2h,c
  1443  0002C2  50DF               	movf	indf2,w,c
  1444  0002C4  EC6F  F001         	call	_ENVIA_CHAR
  1445  0002C8                     
  1446                           ;LCD.c: 47:  }
  1447  0002C8  2A1B               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1448  0002CA                     i2l1239:
  1449  0002CA  501A               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1450  0002CC  5C1B               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1451  0002CE  A0D8               	btfss	status,0,c
  1452  0002D0  EF6C  F001         	goto	i2u21_41
  1453  0002D4  EF6E  F001         	goto	i2u21_40
  1454  0002D8                     i2u21_41:
  1455  0002D8  EF5B  F001         	goto	i2l1235
  1456  0002DC                     i2u21_40:
  1457  0002DC  0012               	return		;funcret
  1458  0002DE                     __end_of_ESCRIBE_MENSAJE:
  1459                           	callstack 0
  1460                           
  1461 ;; *************** function _ENVIA_CHAR *****************
  1462 ;; Defined at:
  1463 ;;		line 50 in file "LCD.c"
  1464 ;; Parameters:    Size  Location     Type
  1465 ;;  dato            1    wreg     unsigned char 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;  dato            1    1[COMRAM] unsigned char 
  1468 ;;  aux             1    2[COMRAM] unsigned char 
  1469 ;; Return value:  Size  Location     Type
  1470 ;;                  1    wreg      void 
  1471 ;; Registers used:
  1472 ;;		wreg, status,2, status,0, cstack
  1473 ;; Tracked objects:
  1474 ;;		On entry : 0/0
  1475 ;;		On exit  : 0/0
  1476 ;;		Unchanged: 0/0
  1477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1478 ;;      Params:         0       0       0       0       0       0       0       0       0
  1479 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1480 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1481 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1482 ;;Total ram usage:        2 bytes
  1483 ;; Hardware stack levels used:    1
  1484 ;; Hardware stack levels required when called:    1
  1485 ;; This function calls:
  1486 ;;		i2_ENVIA_NIBBLE
  1487 ;;		i2_LEER_LCD
  1488 ;; This function is called by:
  1489 ;;		_ESCRIBE_MENSAJE
  1490 ;;		_GENERACARACTER
  1491 ;; This function uses a non-reentrant model
  1492 ;;
  1493                           
  1494                           	psect	text15
  1495  0002DE                     __ptext15:
  1496                           	callstack 0
  1497  0002DE                     _ENVIA_CHAR:
  1498                           	callstack 23
  1499                           
  1500                           ;incstack = 0
  1501                           ;ENVIA_CHAR@dato stored from wreg
  1502  0002DE  6E16               	movwf	ENVIA_CHAR@dato^0,c
  1503  0002E0                     
  1504                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1505  0002E0  808C               	bsf	140,0,c	;volatile
  1506  0002E2                     
  1507                           ;LCD.c: 54:  LEER_LCD();
  1508  0002E2  EC42  F000         	call	i2_LEER_LCD	;wreg free
  1509  0002E6                     
  1510                           ;LCD.c: 55:  TRISD = 0x00;
  1511  0002E6  0E00               	movlw	0
  1512  0002E8  6E95               	movwf	149,c	;volatile
  1513  0002EA                     
  1514                           ;LCD.c: 56:         _delay(1200);
  1515  0002EA  0EF0               	movlw	240
  1516  0002EC                     i2u37_47:
  1517  0002EC  D000               	nop2	
  1518  0002EE  2EE8               	decfsz	wreg,f,c
  1519  0002F0  D7FD               	bra	i2u37_47
  1520  0002F2                     
  1521                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1522  0002F2  928C               	bcf	140,1,c	;volatile
  1523  0002F4                     
  1524                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1525  0002F4  948C               	bcf	140,2,c	;volatile
  1526  0002F6                     
  1527                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1528  0002F6  808C               	bsf	140,0,c	;volatile
  1529  0002F8                     
  1530                           ;LCD.c: 61:  aux = dato & 0xF0;
  1531  0002F8  5016               	movf	ENVIA_CHAR@dato^0,w,c
  1532  0002FA  0BF0               	andlw	240
  1533  0002FC  6E17               	movwf	ENVIA_CHAR@aux^0,c
  1534  0002FE                     
  1535                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1536  0002FE  5017               	movf	ENVIA_CHAR@aux^0,w,c
  1537  000300  ECFB  F001         	call	i2_ENVIA_NIBBLE
  1538  000304                     
  1539                           ;LCD.c: 63:  aux = dato << 4;
  1540  000304  3816               	swapf	ENVIA_CHAR@dato^0,w,c
  1541  000306  0BF0               	andlw	240
  1542  000308  6E17               	movwf	ENVIA_CHAR@aux^0,c
  1543  00030A                     
  1544                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1545  00030A  5017               	movf	ENVIA_CHAR@aux^0,w,c
  1546  00030C  ECFB  F001         	call	i2_ENVIA_NIBBLE
  1547  000310  0012               	return		;funcret
  1548  000312                     __end_of_ENVIA_CHAR:
  1549                           	callstack 0
  1550                           
  1551 ;; *************** function i2_LEER_LCD *****************
  1552 ;; Defined at:
  1553 ;;		line 121 in file "LCD.c"
  1554 ;; Parameters:    Size  Location     Type
  1555 ;;		None
  1556 ;; Auto vars:     Size  Location     Type
  1557 ;;  aux             1    0[COMRAM] unsigned char 
  1558 ;; Return value:  Size  Location     Type
  1559 ;;                  1    wreg      void 
  1560 ;; Registers used:
  1561 ;;		wreg, status,2, status,0
  1562 ;; Tracked objects:
  1563 ;;		On entry : 0/0
  1564 ;;		On exit  : 0/0
  1565 ;;		Unchanged: 0/0
  1566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1567 ;;      Params:         0       0       0       0       0       0       0       0       0
  1568 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1569 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1570 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1571 ;;Total ram usage:        1 bytes
  1572 ;; Hardware stack levels used:    1
  1573 ;; This function calls:
  1574 ;;		Nothing
  1575 ;; This function is called by:
  1576 ;;		_ENVIA_CHAR
  1577 ;;		i2_ENVIA_LCD_CMD
  1578 ;; This function uses a non-reentrant model
  1579 ;;
  1580                           
  1581                           	psect	text16
  1582  000084                     __ptext16:
  1583                           	callstack 0
  1584  000084                     i2_LEER_LCD:
  1585                           	callstack 23
  1586  000084                     
  1587                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1588  000084  0EF8               	movlw	248
  1589  000086  6E95               	movwf	149,c	;volatile
  1590  000088                     
  1591                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1592  000088  908C               	bcf	140,0,c	;volatile
  1593  00008A                     
  1594                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1595  00008A  828C               	bsf	140,1,c	;volatile
  1596  00008C                     
  1597                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1598  00008C  848C               	bsf	140,2,c	;volatile
  1599  00008E                     
  1600                           ;LCD.c: 128:         _delay(1200);
  1601  00008E  0EF0               	movlw	240
  1602  000090                     i2u38_47:
  1603  000090  D000               	nop2	
  1604  000092  2EE8               	decfsz	wreg,f,c
  1605  000094  D7FD               	bra	i2u38_47
  1606  000096                     
  1607                           ;LCD.c: 130:  aux = PORTD;
  1608  000096  CF83 F015          	movff	3971,i2LEER_LCD@aux	;volatile
  1609  00009A                     
  1610                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1611  00009A  948C               	bcf	140,2,c	;volatile
  1612  00009C                     
  1613                           ;LCD.c: 132:         _delay(1200);
  1614  00009C  0EF0               	movlw	240
  1615  00009E                     i2u39_47:
  1616  00009E  D000               	nop2	
  1617  0000A0  2EE8               	decfsz	wreg,f,c
  1618  0000A2  D7FD               	bra	i2u39_47
  1619  0000A4                     
  1620                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1621  0000A4  848C               	bsf	140,2,c	;volatile
  1622  0000A6                     
  1623                           ;LCD.c: 135:         _delay(1200);
  1624  0000A6  0EF0               	movlw	240
  1625  0000A8                     i2u40_47:
  1626  0000A8  D000               	nop2	
  1627  0000AA  2EE8               	decfsz	wreg,f,c
  1628  0000AC  D7FD               	bra	i2u40_47
  1629  0000AE                     
  1630                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1631  0000AE  948C               	bcf	140,2,c	;volatile
  1632  0000B0                     i2l1165:
  1633                           
  1634                           ;LCD.c: 138:  aux = aux & 0x80;
  1635  0000B0  5015               	movf	i2LEER_LCD@aux^0,w,c
  1636  0000B2  0B80               	andlw	128
  1637  0000B4  6E15               	movwf	i2LEER_LCD@aux^0,c
  1638                           
  1639                           ;LCD.c: 139:  while(aux == 0x80)
  1640  0000B6  EF71  F000         	goto	i2l1179
  1641  0000BA                     i2l146:
  1642                           
  1643                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1644  0000BA  848C               	bsf	140,2,c	;volatile
  1645  0000BC                     
  1646                           ;LCD.c: 142:             _delay(1200);
  1647  0000BC  0EF0               	movlw	240
  1648  0000BE                     i2u41_47:
  1649  0000BE  D000               	nop2	
  1650  0000C0  2EE8               	decfsz	wreg,f,c
  1651  0000C2  D7FD               	bra	i2u41_47
  1652  0000C4                     
  1653                           ;LCD.c: 143:             aux = PORTD;
  1654  0000C4  CF83 F015          	movff	3971,i2LEER_LCD@aux	;volatile
  1655  0000C8                     
  1656                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1657  0000C8  948C               	bcf	140,2,c	;volatile
  1658                           
  1659                           ;LCD.c: 145:             _delay(1200);
  1660  0000CA  0EF0               	movlw	240
  1661  0000CC                     i2u42_47:
  1662  0000CC  D000               	nop2	
  1663  0000CE  2EE8               	decfsz	wreg,f,c
  1664  0000D0  D7FD               	bra	i2u42_47
  1665  0000D2                     
  1666                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1667  0000D2  848C               	bsf	140,2,c	;volatile
  1668                           
  1669                           ;LCD.c: 147:             _delay(1200);
  1670  0000D4  0EF0               	movlw	240
  1671  0000D6                     i2u43_47:
  1672  0000D6  D000               	nop2	
  1673  0000D8  2EE8               	decfsz	wreg,f,c
  1674  0000DA  D7FD               	bra	i2u43_47
  1675  0000DC                     
  1676                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1677  0000DC  948C               	bcf	140,2,c	;volatile
  1678  0000DE  EF58  F000         	goto	i2l1165
  1679  0000E2                     i2l1179:
  1680                           
  1681                           ;LCD.c: 139:  while(aux == 0x80)
  1682  0000E2  0E80               	movlw	128
  1683  0000E4  1815               	xorwf	i2LEER_LCD@aux^0,w,c
  1684  0000E6  B4D8               	btfsc	status,2,c
  1685  0000E8  EF78  F000         	goto	i2u18_41
  1686  0000EC  EF7A  F000         	goto	i2u18_40
  1687  0000F0                     i2u18_41:
  1688  0000F0  EF5D  F000         	goto	i2l146
  1689  0000F4                     i2u18_40:
  1690  0000F4  0012               	return		;funcret
  1691  0000F6                     __end_ofi2_LEER_LCD:
  1692                           	callstack 0
  1693                           
  1694 ;; *************** function i2_ENVIA_NIBBLE *****************
  1695 ;; Defined at:
  1696 ;;		line 93 in file "LCD.c"
  1697 ;; Parameters:    Size  Location     Type
  1698 ;;  dato            1    wreg     unsigned char 
  1699 ;; Auto vars:     Size  Location     Type
  1700 ;;  dato            1    0[COMRAM] unsigned char 
  1701 ;; Return value:  Size  Location     Type
  1702 ;;                  1    wreg      void 
  1703 ;; Registers used:
  1704 ;;		wreg, status,2, status,0
  1705 ;; Tracked objects:
  1706 ;;		On entry : 0/0
  1707 ;;		On exit  : 0/0
  1708 ;;		Unchanged: 0/0
  1709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1710 ;;      Params:         0       0       0       0       0       0       0       0       0
  1711 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1712 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1713 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1714 ;;Total ram usage:        1 bytes
  1715 ;; Hardware stack levels used:    1
  1716 ;; This function calls:
  1717 ;;		Nothing
  1718 ;; This function is called by:
  1719 ;;		_ENVIA_CHAR
  1720 ;;		i2_ENVIA_LCD_CMD
  1721 ;; This function uses a non-reentrant model
  1722 ;;
  1723                           
  1724                           	psect	text17
  1725  0003F6                     __ptext17:
  1726                           	callstack 0
  1727  0003F6                     i2_ENVIA_NIBBLE:
  1728                           	callstack 23
  1729                           
  1730                           ;incstack = 0
  1731                           ;i2ENVIA_NIBBLE@dato stored from wreg
  1732  0003F6  6E15               	movwf	i2ENVIA_NIBBLE@dato^0,c
  1733  0003F8                     
  1734                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1735  0003F8  0E0F               	movlw	15
  1736  0003FA  168C               	andwf	140,f,c	;volatile
  1737                           
  1738                           ;LCD.c: 96:  dato &= 0xF0;
  1739  0003FC  0EF0               	movlw	240
  1740  0003FE  1615               	andwf	i2ENVIA_NIBBLE@dato^0,f,c
  1741                           
  1742                           ;LCD.c: 97:  LATD|= dato;
  1743  000400  5015               	movf	i2ENVIA_NIBBLE@dato^0,w,c	;volatile
  1744  000402  128C               	iorwf	140,f,c	;volatile
  1745  000404                     
  1746                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1747  000404  848C               	bsf	140,2,c	;volatile
  1748  000406                     
  1749                           ;LCD.c: 100:         _delay(1200);
  1750  000406  0EF0               	movlw	240
  1751  000408                     i2u44_47:
  1752  000408  D000               	nop2	
  1753  00040A  2EE8               	decfsz	wreg,f,c
  1754  00040C  D7FD               	bra	i2u44_47
  1755  00040E                     
  1756                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1757  00040E  948C               	bcf	140,2,c	;volatile
  1758  000410  0012               	return		;funcret
  1759  000412                     __end_ofi2_ENVIA_NIBBLE:
  1760                           	callstack 0
  1761  0000                     
  1762                           	psect	rparam
  1763  0000                     
  1764                           	psect	temp
  1765  000026                     btemp:
  1766                           	callstack 0
  1767  000026                     	ds	1
  1768  0000                     int$flags	set	btemp
  1769  0000                     wtemp8	set	btemp+1
  1770  0000                     ttemp5	set	btemp+1
  1771  0000                     ttemp6	set	btemp+4
  1772  0000                     ttemp7	set	btemp+8
  1773                           
  1774                           	psect	idloc
  1775                           
  1776                           ;Config register IDLOC0 @ 0x200000
  1777                           ;	unspecified, using default values
  1778  200000                     	org	2097152
  1779  200000  FF                 	db	255
  1780                           
  1781                           ;Config register IDLOC1 @ 0x200001
  1782                           ;	unspecified, using default values
  1783  200001                     	org	2097153
  1784  200001  FF                 	db	255
  1785                           
  1786                           ;Config register IDLOC2 @ 0x200002
  1787                           ;	unspecified, using default values
  1788  200002                     	org	2097154
  1789  200002  FF                 	db	255
  1790                           
  1791                           ;Config register IDLOC3 @ 0x200003
  1792                           ;	unspecified, using default values
  1793  200003                     	org	2097155
  1794  200003  FF                 	db	255
  1795                           
  1796                           ;Config register IDLOC4 @ 0x200004
  1797                           ;	unspecified, using default values
  1798  200004                     	org	2097156
  1799  200004  FF                 	db	255
  1800                           
  1801                           ;Config register IDLOC5 @ 0x200005
  1802                           ;	unspecified, using default values
  1803  200005                     	org	2097157
  1804  200005  FF                 	db	255
  1805                           
  1806                           ;Config register IDLOC6 @ 0x200006
  1807                           ;	unspecified, using default values
  1808  200006                     	org	2097158
  1809  200006  FF                 	db	255
  1810                           
  1811                           ;Config register IDLOC7 @ 0x200007
  1812                           ;	unspecified, using default values
  1813  200007                     	org	2097159
  1814  200007  FF                 	db	255
  1815                           
  1816                           	psect	config
  1817                           
  1818                           ;Config register CONFIG1L @ 0x300000
  1819                           ;	PLL Prescaler Selection bits
  1820                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  1821                           ;	System Clock Postscaler Selection bits
  1822                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  1823                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  1824                           ;	USBDIV = 0x0, unprogrammed default
  1825  300000                     	org	3145728
  1826  300000  00                 	db	0
  1827                           
  1828                           ;Config register CONFIG1H @ 0x300001
  1829                           ;	Oscillator Selection bits
  1830                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  1831                           ;	Fail-Safe Clock Monitor Enable bit
  1832                           ;	FCMEN = 0x0, unprogrammed default
  1833                           ;	Internal/External Oscillator Switchover bit
  1834                           ;	IESO = 0x0, unprogrammed default
  1835  300001                     	org	3145729
  1836  300001  02                 	db	2
  1837                           
  1838                           ;Config register CONFIG2L @ 0x300002
  1839                           ;	Power-up Timer Enable bit
  1840                           ;	PWRT = ON, PWRT enabled
  1841                           ;	Brown-out Reset Enable bits
  1842                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  1843                           ;	Brown-out Reset Voltage bits
  1844                           ;	BORV = 3, Minimum setting 2.05V
  1845                           ;	USB Voltage Regulator Enable bit
  1846                           ;	VREGEN = 0x0, unprogrammed default
  1847  300002                     	org	3145730
  1848  300002  18                 	db	24
  1849                           
  1850                           ;Config register CONFIG2H @ 0x300003
  1851                           ;	Watchdog Timer Enable bit
  1852                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  1853                           ;	Watchdog Timer Postscale Select bits
  1854                           ;	WDTPS = 32768, 1:32768
  1855  300003                     	org	3145731
  1856  300003  1E                 	db	30
  1857                           
  1858                           ; Padding undefined space
  1859  300004                     	org	3145732
  1860  300004  FF                 	db	255
  1861                           
  1862                           ;Config register CONFIG3H @ 0x300005
  1863                           ;	CCP2 MUX bit
  1864                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  1865                           ;	PORTB A/D Enable bit
  1866                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  1867                           ;	Low-Power Timer 1 Oscillator Enable bit
  1868                           ;	LPT1OSC = 0x0, unprogrammed default
  1869                           ;	MCLR Pin Enable bit
  1870                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  1871  300005                     	org	3145733
  1872  300005  81                 	db	129
  1873                           
  1874                           ;Config register CONFIG4L @ 0x300006
  1875                           ;	Stack Full/Underflow Reset Enable bit
  1876                           ;	STVREN = 0x1, unprogrammed default
  1877                           ;	Single-Supply ICSP Enable bit
  1878                           ;	LVP = OFF, Single-Supply ICSP disabled
  1879                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  1880                           ;	ICPRT = 0x0, unprogrammed default
  1881                           ;	Extended Instruction Set Enable bit
  1882                           ;	XINST = 0x0, unprogrammed default
  1883                           ;	Background Debugger Enable bit
  1884                           ;	DEBUG = 0x1, unprogrammed default
  1885  300006                     	org	3145734
  1886  300006  81                 	db	129
  1887                           
  1888                           ; Padding undefined space
  1889  300007                     	org	3145735
  1890  300007  FF                 	db	255
  1891                           
  1892                           ;Config register CONFIG5L @ 0x300008
  1893                           ;	unspecified, using default values
  1894                           ;	Code Protection bit
  1895                           ;	CP0 = 0x1, unprogrammed default
  1896                           ;	Code Protection bit
  1897                           ;	CP1 = 0x1, unprogrammed default
  1898                           ;	Code Protection bit
  1899                           ;	CP2 = 0x1, unprogrammed default
  1900                           ;	Code Protection bit
  1901                           ;	CP3 = 0x1, unprogrammed default
  1902  300008                     	org	3145736
  1903  300008  0F                 	db	15
  1904                           
  1905                           ;Config register CONFIG5H @ 0x300009
  1906                           ;	unspecified, using default values
  1907                           ;	Boot Block Code Protection bit
  1908                           ;	CPB = 0x1, unprogrammed default
  1909                           ;	Data EEPROM Code Protection bit
  1910                           ;	CPD = 0x1, unprogrammed default
  1911  300009                     	org	3145737
  1912  300009  C0                 	db	192
  1913                           
  1914                           ;Config register CONFIG6L @ 0x30000A
  1915                           ;	unspecified, using default values
  1916                           ;	Write Protection bit
  1917                           ;	WRT0 = 0x1, unprogrammed default
  1918                           ;	Write Protection bit
  1919                           ;	WRT1 = 0x1, unprogrammed default
  1920                           ;	Write Protection bit
  1921                           ;	WRT2 = 0x1, unprogrammed default
  1922                           ;	Write Protection bit
  1923                           ;	WRT3 = 0x1, unprogrammed default
  1924  30000A                     	org	3145738
  1925  30000A  0F                 	db	15
  1926                           
  1927                           ;Config register CONFIG6H @ 0x30000B
  1928                           ;	unspecified, using default values
  1929                           ;	Configuration Register Write Protection bit
  1930                           ;	WRTC = 0x1, unprogrammed default
  1931                           ;	Boot Block Write Protection bit
  1932                           ;	WRTB = 0x1, unprogrammed default
  1933                           ;	Data EEPROM Write Protection bit
  1934                           ;	WRTD = 0x1, unprogrammed default
  1935  30000B                     	org	3145739
  1936  30000B  E0                 	db	224
  1937                           
  1938                           ;Config register CONFIG7L @ 0x30000C
  1939                           ;	unspecified, using default values
  1940                           ;	Table Read Protection bit
  1941                           ;	EBTR0 = 0x1, unprogrammed default
  1942                           ;	Table Read Protection bit
  1943                           ;	EBTR1 = 0x1, unprogrammed default
  1944                           ;	Table Read Protection bit
  1945                           ;	EBTR2 = 0x1, unprogrammed default
  1946                           ;	Table Read Protection bit
  1947                           ;	EBTR3 = 0x1, unprogrammed default
  1948  30000C                     	org	3145740
  1949  30000C  0F                 	db	15
  1950                           
  1951                           ;Config register CONFIG7H @ 0x30000D
  1952                           ;	unspecified, using default values
  1953                           ;	Boot Block Table Read Protection bit
  1954                           ;	EBTRB = 0x1, unprogrammed default
  1955  30000D                     	org	3145741
  1956  30000D  40                 	db	64
  1957                           tosu	equ	0xFFF
  1958                           tosh	equ	0xFFE
  1959                           tosl	equ	0xFFD
  1960                           stkptr	equ	0xFFC
  1961                           pclatu	equ	0xFFB
  1962                           pclath	equ	0xFFA
  1963                           pcl	equ	0xFF9
  1964                           tblptru	equ	0xFF8
  1965                           tblptrh	equ	0xFF7
  1966                           tblptrl	equ	0xFF6
  1967                           tablat	equ	0xFF5
  1968                           prodh	equ	0xFF4
  1969                           prodl	equ	0xFF3
  1970                           indf0	equ	0xFEF
  1971                           postinc0	equ	0xFEE
  1972                           postdec0	equ	0xFED
  1973                           preinc0	equ	0xFEC
  1974                           plusw0	equ	0xFEB
  1975                           fsr0h	equ	0xFEA
  1976                           fsr0l	equ	0xFE9
  1977                           wreg	equ	0xFE8
  1978                           indf1	equ	0xFE7
  1979                           postinc1	equ	0xFE6
  1980                           postdec1	equ	0xFE5
  1981                           preinc1	equ	0xFE4
  1982                           plusw1	equ	0xFE3
  1983                           fsr1h	equ	0xFE2
  1984                           fsr1l	equ	0xFE1
  1985                           bsr	equ	0xFE0
  1986                           indf2	equ	0xFDF
  1987                           postinc2	equ	0xFDE
  1988                           postdec2	equ	0xFDD
  1989                           preinc2	equ	0xFDC
  1990                           plusw2	equ	0xFDB
  1991                           fsr2h	equ	0xFDA
  1992                           fsr2l	equ	0xFD9
  1993                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     16      37
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 0
		 -> ingreso(COMRAM[0]), 


Critical Paths under _main in COMRAM

    _main->_lcd_init
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD

Critical Paths under _RCIsr in COMRAM

    _RCIsr->_ESCRIBE_MENSAJE
    _POS_CURSOR->i2_ENVIA_LCD_CMD
    i2_ENVIA_LCD_CMD->i2_ENVIA_NIBBLE
    i2_ENVIA_LCD_CMD->i2_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->i2_ENVIA_NIBBLE
    _ENVIA_CHAR->i2_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _RCIsr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _RCIsr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _RCIsr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _RCIsr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _RCIsr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _RCIsr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _RCIsr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _RCIsr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     570
                                             14 COMRAM     2     2      0
                      _configuracion
                           _lcd_init
              _serial_siguientelinea
 ---------------------------------------------------------------------------------
 (1) _serial_siguientelinea                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                             13 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                             12 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                             12 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                             10 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                              9 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _configuracion                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _RCIsr                                                2     2      0     773
                                              7 COMRAM     2     2      0
                    _ESCRIBE_MENSAJE
                         _POS_CURSOR
 ---------------------------------------------------------------------------------
 (6) _POS_CURSOR                                           2     1      1     347
                                              3 COMRAM     2     1      1
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (7) i2_ENVIA_LCD_CMD                                      2     2      0     183
                                              1 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (6) _ESCRIBE_MENSAJE                                      4     1      3     426
                                              3 COMRAM     4     1      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (7) _ENVIA_CHAR                                           2     2      0     183
                                              1 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (8) i2_LEER_LCD                                           1     1      0      70
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i2_ENVIA_NIBBLE                                       1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _configuracion
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
       _ENVIA_NIBBLE
   _serial_siguientelinea

 _RCIsr (ROOT)
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       i2_ENVIA_NIBBLE
       i2_LEER_LCD
   _POS_CURSOR
     i2_ENVIA_LCD_CMD
       i2_ENVIA_NIBBLE
       i2_LEER_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     10      25       1       39.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      25      20        0.0%
DATA                 0      0      25       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Jun 09 10:55:51 2020

                            l50 03D8                              l53 039A                              l70 0200  
                            l47 0394                              l56 03AC                              l66 01D4  
                            l59 03BA                              l69 0200                              u10 0082  
                            u11 007E                              u30 0324                              u31 0320  
                            u40 033A                              u41 0336                              u50 03A8  
                            u51 03A4                              u60 03BA                              u61 03B6  
                ?_configuracion 0015                   ENVIA_CHAR@aux 0017                             l121 0340  
                           l116 042C                             l133 0434                             l142 0274  
                           l136 0154                             l146 0048                             l139 03F4  
                           l148 0082                             l831 0016                             l841 0028  
                           l833 0018                             l851 003E                             l843 002A  
                           l835 001A                             l861 006A                             l853 004A  
                           l845 0032                             l837 001C                             l829 0012  
                           l871 03EA                             l855 0052                             l847 0034  
                           l839 0024                             l951 0122                             l943 00F6  
                           l873 03F2                             l857 0056                             l865 0070  
                           l849 003C                             l881 024E                             l961 0142  
                           l953 012A                             l945 00FA                             l867 03DC  
                           l859 0060                             l891 0262                             l883 0256  
                           l875 0244                             l971 0314                             l963 0148  
                           l955 0130                             l947 0100                             l869 03E8  
                           l893 0268                             l885 0258                             l877 0246  
                           l973 0324                             l965 014E                             l957 0136  
                           l949 010E                             l895 026E                             l887 025A  
                           l879 024A                             l967 042E                             l975 032A  
                           l959 013C                             l889 025C                             l969 0426  
                           l977 033A                             u100 01E2                             u101 01DE  
                           u110 01FC                             u111 01F8                             u307 002C  
                           u317 0036                             u327 004C                             u247 037C  
                           u337 005A                             u257 0106                             u347 0064  
                           u267 0114                             u357 03EC                             u277 0124  
                           u287 0250                             u297 001E                     LEER_LCD@aux 001E  
                           wreg 000FE8                ??i2_ENVIA_NIBBLE 0015                    ?_CURSOR_HOME 0015  
                ??_ENVIA_NIBBLE 001E                  ENVIA_CHAR@dato 0016                            l1031 038A  
                          l1023 036E                            l1041 03CC                            l1033 038E  
                          l1025 0372                            l1051 03D6                            l1043 03CE  
                          l1035 03BC                            l1027 0376                            l1045 03D0  
                          l1037 03C2                            l1029 0386                            l1053 0396  
                          l1047 03D2                            l1039 03CA                            l1055 03A8  
                          l1049 03D4                            l1081 01C4                            l1073 01B4  
                          l1083 01E2                            l1075 01B8                            l1085 01E6  
                          l1077 01BC                            l1087 01FC                            _LATD 000F8C  
                          i2l79 01A8                     ?i2_LEER_LCD 0015                            _main 01B4  
                          fsr2h 000FDA                            indf2 000FDF                            fsr1l 000FE1  
                          fsr2l 000FD9                            btemp 0026               ??i2_ENVIA_LCD_CMD 0016  
                          start 000E                   ?_CURSOR_ONOFF 0015                    ___param_bank 000000  
               ??_ENVIA_LCD_CMD 001F                __end_of_LEER_LCD 0084             __size_of_BORRAR_LCD 0008  
        ?_serial_siguientelinea 0015                           ?_main 0015                           i2l103 0240  
                         i2l130 0310                           i2l142 02A8                           i2l127 02DC  
                         i2l146 00BA                           i2l139 0410                           i2l148 00F4  
                         _RCREG 000FAE                           _SPBRG 000FAF                           _PORTD 000F83  
                         _RCIsr 0008             __size_of_LCD_CONFIG 0060                           _TRISD 000F95  
                         _TXREG 000FAD             __size_of_ENVIA_CHAR 0034                     ?_POS_CURSOR 0018  
                         main@i 0023                           tablat 000FF5                           ttemp5 0027  
                         ttemp6 002A                           ttemp7 002E                           status 000FD8  
                         wtemp8 0027                  ??_CURSOR_ONOFF 0021                 __initialization 0342  
                  __end_of_main 0208                 ??_configuracion 001E                 _ESCRIBE_MENSAJE 02AA  
                        ??_main 0023             __size_ofi2_LEER_LCD 0072                   __activetblptr 000000  
                        ?_RCIsr 0015                          i2l1201 030A                          i2l1211 028A  
                        i2l1203 0278                          i2l1141 040E                          i2l1221 029C  
                        i2l1213 028C                          i2l1205 027A                          i2l1135 03F8  
                        i2l1151 008E                          i2l1143 0084                          i2l1223 02A2  
                        i2l1215 028E                          i2l1207 027E                          i2l1231 0238  
                        i2l1137 0404                          i2l1161 00A6                          i2l1153 0096  
                        i2l1145 0088                          i2l1233 02AA                          i2l1217 0290  
                        i2l1209 0282                          i2l1225 020A                          i2l1241 0160  
                        i2l1139 0406                          i2l1171 00C8                          i2l1163 00AE  
                        i2l1155 009A                          i2l1147 008A                          i2l1235 02B6  
                        i2l1219 0296                          i2l1227 021A                          i2l1251 0196  
                        i2l1243 0162                          i2l1173 00D2                          i2l1165 00B0  
                        i2l1157 009C                          i2l1149 008C                          i2l1181 02E0  
                        i2l1237 02C8                          i2l1229 0226                          i2l1253 01A6  
                        i2l1245 0174                          i2l1175 00DC                          i2l1167 00BC  
                        i2l1159 00A4                          i2l1191 02F4                          i2l1183 02E2  
                        i2l1239 02CA                          i2l1247 017E                          i2l1169 00C4  
                        i2l1193 02F6                          i2l1185 02E6                          i2l1249 018E  
                        i2l1179 00E2                          i2l1195 02F8                          i2l1187 02EA  
                        i2l1197 02FE                          i2l1189 02F2                          i2l1199 0304  
                        _SPBRGH 000FB0                __end_of_lcd_init 0396                          _cadena 0001  
          __end_of_ENVIA_NIBBLE 03F6             __size_of_POS_CURSOR 003A                          _numero 0025  
                  __pdataCOMRAM 0001                          tblptrh 000FF7                          tblptrl 000FF6  
                        tblptru 000FF8                    ??_BORRAR_LCD 0021            __size_of_CURSOR_HOME 0008  
                     ?_LEER_LCD 0015                      __accesstop 0060         __end_of__initialization 0364  
                  ??_LCD_CONFIG 0021                   ___rparam_used 000001                    ??_ENVIA_CHAR 0016  
                 __end_of_RCIsr 01B4         __end_of_ESCRIBE_MENSAJE 02DE                  __pcstackCOMRAM 0015  
            __end_of_BORRAR_LCD 0436             i2ENVIA_LCD_CMD@dato 0016                         ??_RCIsr 001C  
              ENVIA_LCD_CMD@aux 0020            __end_of_CURSOR_ONOFF 0342              __end_of_LCD_CONFIG 0156  
            __end_of_ENVIA_CHAR 0312                 i2_ENVIA_LCD_CMD 0276                    ??i2_LEER_LCD 0015  
                    ??_LEER_LCD 001E                ENVIA_NIBBLE@dato 001E         ??_serial_siguientelinea 001E  
            __end_ofi2_LEER_LCD 00F6                         i2u20_40 0238                         i2u20_41 0234  
                       i2u21_40 02DC                         i2u21_41 02D8                         i2u22_40 0174  
                       i2u22_41 0170                         i2u40_47 00A8                         i2u41_47 00BE  
                       i2u18_40 00F4                         i2u18_41 00F0                         i2u42_47 00CC  
                       i2u19_40 021A                         i2u19_41 0216                         i2u43_47 00D6  
                       i2u44_47 0408                         i2u36_47 0284                         i2u37_47 02EC  
                       i2u38_47 0090                         i2u39_47 009E                    ??_POS_CURSOR 0019  
                     ?_lcd_init 0015           __size_of_ENVIA_NIBBLE 001C                         __Hparam 0000  
                       __Lparam 0000                ?_ESCRIBE_MENSAJE 0018           __end_of_ENVIA_LCD_CMD 0276  
                       __pcinit 0342              __end_of_POS_CURSOR 0242                         __ramtop 0800  
                       __ptext0 01B4                         __ptext1 0396                         __ptext2 036E  
                       __ptext3 00F6                         __ptext4 0312                         __ptext5 0426  
                       __ptext6 042E                         __ptext7 0242                         __ptext8 0012  
                       __ptext9 03DA         __end_ofi2_ENVIA_LCD_CMD 02AA                         _ingreso 0026  
                    ??_lcd_init 0022                  __pintcode_body 0156                    _ENVIA_NIBBLE 03DA  
          end_of_initialization 0364                         int_func 0156         __size_ofi2_ENVIA_NIBBLE 001C  
                     _RCSTAbits 000FAB                         postdec1 000FE5                         postinc0 000FEE  
         __end_of_configuracion 03DA           __size_of_CURSOR_ONOFF 0030                       _TRISCbits 000F94  
                     _TXSTAbits 000FAC               __size_of_LEER_LCD 0072                    _CURSOR_ONOFF 0312  
            CURSOR_ONOFF@estado 0021                     _BAUDCONbits 000FB8                   __pidataCOMRAM 0412  
              ?i2_ENVIA_LCD_CMD 0015                   ??_CURSOR_HOME 0021             start_initialization 0342  
             ENVIA_LCD_CMD@dato 001F  __size_of_serial_siguientelinea 0026   __end_of_serial_siguientelinea 03BC  
                   __pbssCOMRAM 0025                   i2LEER_LCD@aux 0015              i2ENVIA_LCD_CMD@aux 0017  
           __end_of_CURSOR_HOME 042E               __size_of_lcd_init 0028                  i2_ENVIA_NIBBLE 03F6  
            i2ENVIA_NIBBLE@dato 0015                       __pintcode 0008                  __size_of_RCIsr 01AC  
        __end_ofi2_ENVIA_NIBBLE 0412                        _LEER_LCD 0012                        _LATDbits 000F8C  
                      _PIE1bits 000F9D                        _PIR1bits 000F9E                ESCRIBE_MENSAJE@i 001B  
                POS_CURSOR@fila 0019        __size_of_ESCRIBE_MENSAJE 0034                     _CURSOR_HOME 0426  
                     copy_data0 0356                 ?i2_ENVIA_NIBBLE 0015          __size_of_ENVIA_LCD_CMD 0034  
                      __Hrparam 0000                        __Lrparam 0000                        __ptext10 03BC  
                      __ptext12 0208                        __ptext13 0276                        __ptext14 02AA  
                      __ptext15 02DE                        __ptext16 0084                        __ptext17 03F6  
                    _BORRAR_LCD 042E                        _lcd_init 036E          __size_of_configuracion 001E  
                 __size_of_main 0054                      _LCD_CONFIG 00F6                      _ENVIA_CHAR 02DE  
                      int$flags 0026                   _ENVIA_LCD_CMD 0242                      _INTCONbits 000FF2  
             ??_ESCRIBE_MENSAJE 001B        __size_ofi2_ENVIA_LCD_CMD 0034                        intlevel2 0000  
         ESCRIBE_MENSAJE@cadena 0018                      i2_LEER_LCD 0084                  ?_ENVIA_LCD_CMD 0015  
                 _configuracion 03BC           _serial_siguientelinea 0396                     ?_BORRAR_LCD 0015  
                 ?_ENVIA_NIBBLE 0015                      _POS_CURSOR 0208                     ?_LCD_CONFIG 0015  
            ESCRIBE_MENSAJE@tam 001A                     ?_ENVIA_CHAR 0015               POS_CURSOR@columna 0018  
