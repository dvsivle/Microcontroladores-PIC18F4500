

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue May 26 21:16:17 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    28                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    29                           	psect	text20,global,reloc=2,class=CODE,delta=1
    30                           	psect	text21,global,reloc=2,class=CODE,delta=1
    31                           	psect	text22,global,reloc=2,class=CODE,delta=1
    32                           	psect	text23,global,reloc=2,class=CODE,delta=1
    33                           	psect	text24,global,reloc=2,class=CODE,delta=1
    34                           	psect	text25,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    39                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    40  0000                     
    41                           ; Version 2.20
    42                           ; Generated 12/02/2020 GMT
    43                           ; 
    44                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    45                           ; All rights reserved.
    46                           ; 
    47                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    48                           ; 
    49                           ; Redistribution and use in source and binary forms, with or without modification, are
    50                           ; permitted provided that the following conditions are met:
    51                           ; 
    52                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    53                           ;        conditions and the following disclaimer.
    54                           ; 
    55                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    56                           ;        of conditions and the following disclaimer in the documentation and/or other
    57                           ;        materials provided with the distribution.
    58                           ; 
    59                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    60                           ;        software without specific prior written permission.
    61                           ; 
    62                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    63                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    64                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    65                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    66                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    67                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    68                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    69                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    70                           ; 
    71                           ; 
    72                           ; Code-generator required, PIC18F4550 Definitions
    73                           ; 
    74                           ; SFR Addresses
    75  0000                     _PORTD	set	3971
    76  0000                     _LATD	set	3980
    77  0000                     _LATDbits	set	3980
    78  0000                     _INTCON2bits	set	4081
    79  0000                     _LATBbits	set	3978
    80  0000                     _TRISD	set	3989
    81  0000                     _TRISB	set	3987
    82  0000                     _INTCONbits	set	4082
    83  0000                     _INTCON3bits	set	4080
    84  0000                     _RCONbits	set	4048
    85                           
    86                           	psect	smallconst
    87  000800                     __psmallconst:
    88                           	callstack 0
    89  000800  00                 	db	0
    90  000801                     STR_3:
    91  000801  42                 	db	66	;'B'
    92  000802  54                 	db	84	;'T'
    93  000803  4E                 	db	78	;'N'
    94  000804  30                 	db	48	;'0'
    95  000805  20                 	db	32
    96  000806  73                 	db	115	;'s'
    97  000807  6F                 	db	111	;'o'
    98  000808  6C                 	db	108	;'l'
    99  000809  74                 	db	116	;'t'
   100  00080A  61                 	db	97	;'a'
   101  00080B  64                 	db	100	;'d'
   102  00080C  6F                 	db	111	;'o'
   103  00080D  20                 	db	32
   104  00080E  20                 	db	32
   105  00080F  20                 	db	32
   106  000810  00                 	db	0
   107  000811                     STR_5:
   108  000811  42                 	db	66	;'B'
   109  000812  54                 	db	84	;'T'
   110  000813  4E                 	db	78	;'N'
   111  000814  31                 	db	49	;'1'
   112  000815  20                 	db	32
   113  000816  73                 	db	115	;'s'
   114  000817  6F                 	db	111	;'o'
   115  000818  6C                 	db	108	;'l'
   116  000819  74                 	db	116	;'t'
   117  00081A  61                 	db	97	;'a'
   118  00081B  64                 	db	100	;'d'
   119  00081C  6F                 	db	111	;'o'
   120  00081D  20                 	db	32
   121  00081E  20                 	db	32
   122  00081F  20                 	db	32
   123  000820  00                 	db	0
   124  000821                     STR_7:
   125  000821  42                 	db	66	;'B'
   126  000822  54                 	db	84	;'T'
   127  000823  4E                 	db	78	;'N'
   128  000824  32                 	db	50	;'2'
   129  000825  20                 	db	32
   130  000826  73                 	db	115	;'s'
   131  000827  6F                 	db	111	;'o'
   132  000828  6C                 	db	108	;'l'
   133  000829  74                 	db	116	;'t'
   134  00082A  61                 	db	97	;'a'
   135  00082B  64                 	db	100	;'d'
   136  00082C  6F                 	db	111	;'o'
   137  00082D  20                 	db	32
   138  00082E  20                 	db	32
   139  00082F  20                 	db	32
   140  000830  00                 	db	0
   141  000831                     STR_2:
   142  000831  42                 	db	66	;'B'
   143  000832  54                 	db	84	;'T'
   144  000833  4E                 	db	78	;'N'
   145  000834  30                 	db	48	;'0'
   146  000835  20                 	db	32
   147  000836  70                 	db	112	;'p'
   148  000837  72                 	db	114	;'r'
   149  000838  65                 	db	101	;'e'
   150  000839  73                 	db	115	;'s'
   151  00083A  69                 	db	105	;'i'
   152  00083B  6F                 	db	111	;'o'
   153  00083C  6E                 	db	110	;'n'
   154  00083D  61                 	db	97	;'a'
   155  00083E  64                 	db	100	;'d'
   156  00083F  6F                 	db	111	;'o'
   157  000840  00                 	db	0
   158  000841                     STR_4:
   159  000841  42                 	db	66	;'B'
   160  000842  54                 	db	84	;'T'
   161  000843  4E                 	db	78	;'N'
   162  000844  31                 	db	49	;'1'
   163  000845  20                 	db	32
   164  000846  70                 	db	112	;'p'
   165  000847  72                 	db	114	;'r'
   166  000848  65                 	db	101	;'e'
   167  000849  73                 	db	115	;'s'
   168  00084A  69                 	db	105	;'i'
   169  00084B  6F                 	db	111	;'o'
   170  00084C  6E                 	db	110	;'n'
   171  00084D  61                 	db	97	;'a'
   172  00084E  64                 	db	100	;'d'
   173  00084F  6F                 	db	111	;'o'
   174  000850  00                 	db	0
   175  000851                     STR_6:
   176  000851  42                 	db	66	;'B'
   177  000852  54                 	db	84	;'T'
   178  000853  4E                 	db	78	;'N'
   179  000854  32                 	db	50	;'2'
   180  000855  20                 	db	32
   181  000856  70                 	db	112	;'p'
   182  000857  72                 	db	114	;'r'
   183  000858  65                 	db	101	;'e'
   184  000859  73                 	db	115	;'s'
   185  00085A  69                 	db	105	;'i'
   186  00085B  6F                 	db	111	;'o'
   187  00085C  6E                 	db	110	;'n'
   188  00085D  61                 	db	97	;'a'
   189  00085E  64                 	db	100	;'d'
   190  00085F  6F                 	db	111	;'o'
   191  000860  00                 	db	0
   192  000861                     STR_1:
   193  000861  50                 	db	80	;'P'
   194  000862  72                 	db	114	;'r'
   195  000863  65                 	db	101	;'e'
   196  000864  73                 	db	115	;'s'
   197  000865  69                 	db	105	;'i'
   198  000866  6F                 	db	111	;'o'
   199  000867  6E                 	db	110	;'n'
   200  000868  61                 	db	97	;'a'
   201  000869  20                 	db	32
   202  00086A  62                 	db	98	;'b'
   203  00086B  6F                 	db	111	;'o'
   204  00086C  74                 	db	116	;'t'
   205  00086D  6F                 	db	111	;'o'
   206  00086E  6E                 	db	110	;'n'
   207  00086F  00                 	db	0
   208  000870  00                 	db	0	; dummy byte at the end
   209  0000                     
   210                           ; #config settings
   211                           
   212                           	psect	cinit
   213  000D96                     __pcinit:
   214                           	callstack 0
   215  000D96                     start_initialization:
   216                           	callstack 0
   217  000D96                     __initialization:
   218                           	callstack 0
   219  000D96                     end_of_initialization:
   220                           	callstack 0
   221  000D96                     __end_of__initialization:
   222                           	callstack 0
   223  000D96  9029               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   224  000D98  9229               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   225  000D9A  0E00               	movlw	low (__Lsmallconst shr (0+16))
   226  000D9C  6EF8               	movwf	tblptru,c
   227  000D9E  0E08               	movlw	high __Lsmallconst
   228  000DA0  6EF7               	movwf	tblptrh,c
   229  000DA2  0100               	movlb	0
   230  000DA4  EF47  F005         	goto	_main	;jump to C main() function
   231                           
   232                           	psect	cstackCOMRAM
   233  000001                     __pcstackCOMRAM:
   234                           	callstack 0
   235  000001                     i2ENVIA_NIBBLE@dato:
   236                           	callstack 0
   237  000001                     i2LEER_LCD@aux:
   238                           	callstack 0
   239                           
   240                           ; 1 bytes @ 0x0
   241  000001                     	ds	1
   242  000002                     i2ENVIA_CHAR@dato:
   243                           	callstack 0
   244  000002                     i2ENVIA_LCD_CMD@dato:
   245                           	callstack 0
   246                           
   247                           ; 1 bytes @ 0x1
   248  000002                     	ds	1
   249  000003                     i2ENVIA_CHAR@aux:
   250                           	callstack 0
   251  000003                     i2ENVIA_LCD_CMD@aux:
   252                           	callstack 0
   253                           
   254                           ; 1 bytes @ 0x2
   255  000003                     	ds	1
   256  000004                     i2ESCRIBE_MENSAJE@cadena:
   257                           	callstack 0
   258                           
   259                           ; 2 bytes @ 0x3
   260  000004                     	ds	2
   261  000006                     i2ESCRIBE_MENSAJE@tam:
   262                           	callstack 0
   263                           
   264                           ; 1 bytes @ 0x5
   265  000006                     	ds	1
   266  000007                     ??i2_ESCRIBE_MENSAJE:
   267                           
   268                           ; 1 bytes @ 0x6
   269  000007                     	ds	2
   270  000009                     i2ESCRIBE_MENSAJE@i:
   271                           	callstack 0
   272                           
   273                           ; 1 bytes @ 0x8
   274  000009                     	ds	1
   275  00000A                     ??_Int0_ISR:
   276                           
   277                           ; 1 bytes @ 0x9
   278  00000A                     	ds	4
   279  00000E                     i1ENVIA_NIBBLE@dato:
   280                           	callstack 0
   281  00000E                     i1LEER_LCD@aux:
   282                           	callstack 0
   283                           
   284                           ; 1 bytes @ 0xD
   285  00000E                     	ds	1
   286  00000F                     i1ENVIA_CHAR@dato:
   287                           	callstack 0
   288  00000F                     i1ENVIA_LCD_CMD@dato:
   289                           	callstack 0
   290                           
   291                           ; 1 bytes @ 0xE
   292  00000F                     	ds	1
   293  000010                     i1ENVIA_CHAR@aux:
   294                           	callstack 0
   295  000010                     i1ENVIA_LCD_CMD@aux:
   296                           	callstack 0
   297                           
   298                           ; 1 bytes @ 0xF
   299  000010                     	ds	1
   300  000011                     i1ESCRIBE_MENSAJE@cadena:
   301                           	callstack 0
   302                           
   303                           ; 2 bytes @ 0x10
   304  000011                     	ds	2
   305  000013                     i1ESCRIBE_MENSAJE@tam:
   306                           	callstack 0
   307                           
   308                           ; 1 bytes @ 0x12
   309  000013                     	ds	1
   310  000014                     ??i1_ESCRIBE_MENSAJE:
   311                           
   312                           ; 1 bytes @ 0x13
   313  000014                     	ds	2
   314  000016                     i1ESCRIBE_MENSAJE@i:
   315                           	callstack 0
   316                           
   317                           ; 1 bytes @ 0x15
   318  000016                     	ds	1
   319  000017                     ??_Int1_ISR:
   320                           
   321                           ; 1 bytes @ 0x16
   322  000017                     	ds	7
   323  00001E                     ENVIA_NIBBLE@dato:
   324                           	callstack 0
   325  00001E                     LEER_LCD@aux:
   326                           	callstack 0
   327                           
   328                           ; 1 bytes @ 0x1D
   329  00001E                     	ds	1
   330  00001F                     ENVIA_CHAR@dato:
   331                           	callstack 0
   332  00001F                     ENVIA_LCD_CMD@dato:
   333                           	callstack 0
   334                           
   335                           ; 1 bytes @ 0x1E
   336  00001F                     	ds	1
   337  000020                     ENVIA_CHAR@aux:
   338                           	callstack 0
   339  000020                     ENVIA_LCD_CMD@aux:
   340                           	callstack 0
   341                           
   342                           ; 1 bytes @ 0x1F
   343  000020                     	ds	1
   344  000021                     ??_LCD_CONFIG:
   345  000021                     CURSOR_ONOFF@estado:
   346                           	callstack 0
   347  000021                     ESCRIBE_MENSAJE@cadena:
   348                           	callstack 0
   349                           
   350                           ; 2 bytes @ 0x20
   351  000021                     	ds	1
   352  000022                     ??_lcd_init:
   353                           
   354                           ; 1 bytes @ 0x21
   355  000022                     	ds	1
   356  000023                     ESCRIBE_MENSAJE@tam:
   357                           	callstack 0
   358                           
   359                           ; 1 bytes @ 0x22
   360  000023                     	ds	1
   361  000024                     ??_ESCRIBE_MENSAJE:
   362                           
   363                           ; 1 bytes @ 0x23
   364  000024                     	ds	2
   365  000026                     ESCRIBE_MENSAJE@i:
   366                           	callstack 0
   367                           
   368                           ; 1 bytes @ 0x25
   369  000026                     	ds	1
   370  000027                     ??_main:
   371                           
   372                           ; 1 bytes @ 0x26
   373  000027                     	ds	2
   374                           
   375 ;;
   376 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   377 ;;
   378 ;; *************** function _main *****************
   379 ;; Defined at:
   380 ;;		line 50 in file "maincode.c"
   381 ;; Parameters:    Size  Location     Type
   382 ;;		None
   383 ;; Auto vars:     Size  Location     Type
   384 ;;		None
   385 ;; Return value:  Size  Location     Type
   386 ;;                  1    wreg      void 
   387 ;; Registers used:
   388 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   389 ;; Tracked objects:
   390 ;;		On entry : 0/0
   391 ;;		On exit  : 0/0
   392 ;;		Unchanged: 0/0
   393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   394 ;;      Params:         0       0       0       0       0       0       0       0       0
   395 ;;      Locals:         0       0       0       0       0       0       0       0       0
   396 ;;      Temps:          2       0       0       0       0       0       0       0       0
   397 ;;      Totals:         2       0       0       0       0       0       0       0       0
   398 ;;Total ram usage:        2 bytes
   399 ;; Hardware stack levels required when called:   12
   400 ;; This function calls:
   401 ;;		_ESCRIBE_MENSAJE
   402 ;;		_configuracion
   403 ;;		_lcd_init
   404 ;; This function is called by:
   405 ;;		Startup code after reset
   406 ;; This function uses a non-reentrant model
   407 ;;
   408                           
   409                           	psect	text0
   410  000A8E                     __ptext0:
   411                           	callstack 0
   412  000A8E                     _main:
   413                           	callstack 19
   414  000A8E                     
   415                           ;maincode.c: 51:     configuracion();
   416  000A8E  ECC0  F006         	call	_configuracion	;wreg free
   417  000A92                     
   418                           ;maincode.c: 52:     lcd_init();
   419  000A92  EC82  F006         	call	_lcd_init	;wreg free
   420  000A96                     
   421                           ;maincode.c: 53:     ESCRIBE_MENSAJE("Presiona boton",14);
   422  000A96  0E61               	movlw	low STR_1
   423  000A98  6E21               	movwf	ESCRIBE_MENSAJE@cadena^0,c
   424  000A9A  0E08               	movlw	high STR_1
   425  000A9C  6E22               	movwf	(ESCRIBE_MENSAJE@cadena+1)^0,c
   426  000A9E  0E0E               	movlw	14
   427  000AA0  6E23               	movwf	ESCRIBE_MENSAJE@tam^0,c
   428  000AA2  EC71  F005         	call	_ESCRIBE_MENSAJE	;wreg free
   429  000AA6                     l1478:
   430                           
   431                           ;maincode.c: 55:         LATBbits.LB7 = 1;
   432  000AA6  8E8A               	bsf	138,7,c	;volatile
   433  000AA8                     
   434                           ;maincode.c: 56:         _delay((unsigned long)((100)*(48000000UL/4000.0)));
   435  000AA8  0E07               	movlw	7
   436  000AAA  6E28               	movwf	(??_main+1)^0,c
   437  000AAC  0E17               	movlw	23
   438  000AAE  6E27               	movwf	??_main^0,c
   439  000AB0  0E6A               	movlw	106
   440  000AB2                     u317:
   441  000AB2  2EE8               	decfsz	wreg,f,c
   442  000AB4  D7FE               	bra	u317
   443  000AB6  2E27               	decfsz	??_main^0,f,c
   444  000AB8  D7FC               	bra	u317
   445  000ABA  2E28               	decfsz	(??_main+1)^0,f,c
   446  000ABC  D7FA               	bra	u317
   447  000ABE  D000               	nop2	
   448  000AC0                     
   449                           ;maincode.c: 57:         LATBbits.LB7 = 0;
   450  000AC0  9E8A               	bcf	138,7,c	;volatile
   451  000AC2                     
   452                           ;maincode.c: 58:         _delay((unsigned long)((100)*(48000000UL/4000.0)));
   453  000AC2  0E07               	movlw	7
   454  000AC4  6E28               	movwf	(??_main+1)^0,c
   455  000AC6  0E17               	movlw	23
   456  000AC8  6E27               	movwf	??_main^0,c
   457  000ACA  0E6A               	movlw	106
   458  000ACC                     u327:
   459  000ACC  2EE8               	decfsz	wreg,f,c
   460  000ACE  D7FE               	bra	u327
   461  000AD0  2E27               	decfsz	??_main^0,f,c
   462  000AD2  D7FC               	bra	u327
   463  000AD4  2E28               	decfsz	(??_main+1)^0,f,c
   464  000AD6  D7FA               	bra	u327
   465  000AD8  D000               	nop2	
   466  000ADA  EF53  F005         	goto	l1478
   467  000ADE  EF79  F000         	goto	start
   468  000AE2                     __end_of_main:
   469                           	callstack 0
   470                           
   471 ;; *************** function _lcd_init *****************
   472 ;; Defined at:
   473 ;;		line 41 in file "maincode.c"
   474 ;; Parameters:    Size  Location     Type
   475 ;;		None
   476 ;; Auto vars:     Size  Location     Type
   477 ;;		None
   478 ;; Return value:  Size  Location     Type
   479 ;;                  1    wreg      void 
   480 ;; Registers used:
   481 ;;		wreg, status,2, status,0, cstack
   482 ;; Tracked objects:
   483 ;;		On entry : 0/0
   484 ;;		On exit  : 0/0
   485 ;;		Unchanged: 0/0
   486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   487 ;;      Params:         0       0       0       0       0       0       0       0       0
   488 ;;      Locals:         0       0       0       0       0       0       0       0       0
   489 ;;      Temps:          1       0       0       0       0       0       0       0       0
   490 ;;      Totals:         1       0       0       0       0       0       0       0       0
   491 ;;Total ram usage:        1 bytes
   492 ;; Hardware stack levels used:    1
   493 ;; Hardware stack levels required when called:   11
   494 ;; This function calls:
   495 ;;		_BORRAR_LCD
   496 ;;		_CURSOR_HOME
   497 ;;		_CURSOR_ONOFF
   498 ;;		_LCD_CONFIG
   499 ;; This function is called by:
   500 ;;		_main
   501 ;; This function uses a non-reentrant model
   502 ;;
   503                           
   504                           	psect	text1
   505  000D04                     __ptext1:
   506                           	callstack 0
   507  000D04                     _lcd_init:
   508                           	callstack 19
   509  000D04                     
   510                           ;maincode.c: 42:     TRISD = 0x00;
   511  000D04  0E00               	movlw	0
   512  000D06  6E95               	movwf	149,c	;volatile
   513  000D08                     
   514                           ;maincode.c: 43:     LCD_CONFIG();
   515  000D08  EC17  F005         	call	_LCD_CONFIG	;wreg free
   516  000D0C                     
   517                           ;maincode.c: 44:     _delay((unsigned long)((15)*(48000000UL/4000.0)));
   518  000D0C  0EEA               	movlw	234
   519  000D0E  6E22               	movwf	??_lcd_init^0,c
   520  000D10  0EC3               	movlw	195
   521  000D12                     u337:
   522  000D12  2EE8               	decfsz	wreg,f,c
   523  000D14  D7FE               	bra	u337
   524  000D16  2E22               	decfsz	??_lcd_init^0,f,c
   525  000D18  D7FC               	bra	u337
   526  000D1A  F000               	nop	
   527  000D1C                     
   528                           ;maincode.c: 45:     BORRAR_LCD();
   529  000D1C  ECD8  F006         	call	_BORRAR_LCD	;wreg free
   530  000D20                     
   531                           ;maincode.c: 46:     CURSOR_HOME();
   532  000D20  ECD4  F006         	call	_CURSOR_HOME	;wreg free
   533  000D24                     
   534                           ;maincode.c: 47:     CURSOR_ONOFF(1);
   535  000D24  0E01               	movlw	1
   536  000D26  EC6A  F006         	call	_CURSOR_ONOFF
   537  000D2A  0012               	return		;funcret
   538  000D2C                     __end_of_lcd_init:
   539                           	callstack 0
   540                           
   541 ;; *************** function _LCD_CONFIG *****************
   542 ;; Defined at:
   543 ;;		line 72 in file "LCD.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;		None
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg, status,2, status,0, cstack
   552 ;; Tracked objects:
   553 ;;		On entry : 0/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   557 ;;      Params:         0       0       0       0       0       0       0       0       0
   558 ;;      Locals:         0       0       0       0       0       0       0       0       0
   559 ;;      Temps:          1       0       0       0       0       0       0       0       0
   560 ;;      Totals:         1       0       0       0       0       0       0       0       0
   561 ;;Total ram usage:        1 bytes
   562 ;; Hardware stack levels used:    1
   563 ;; Hardware stack levels required when called:   10
   564 ;; This function calls:
   565 ;;		_ENVIA_LCD_CMD
   566 ;;		_ENVIA_NIBBLE
   567 ;; This function is called by:
   568 ;;		_lcd_init
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           	psect	text2
   573  000A2E                     __ptext2:
   574                           	callstack 0
   575  000A2E                     _LCD_CONFIG:
   576                           	callstack 19
   577  000A2E                     
   578                           ;LCD.c: 74:  LATDbits.LATD0 = 0;
   579  000A2E  908C               	bcf	140,0,c	;volatile
   580                           
   581                           ;LCD.c: 75:  LATDbits.LATD1 = 0;
   582  000A30  928C               	bcf	140,1,c	;volatile
   583  000A32                     
   584                           ;LCD.c: 76:  ENVIA_NIBBLE(0x30);
   585  000A32  0E30               	movlw	48
   586  000A34  EC96  F006         	call	_ENVIA_NIBBLE
   587  000A38                     
   588                           ;LCD.c: 77:         _delay(24000);
   589  000A38  0E20               	movlw	32
   590  000A3A  6E21               	movwf	??_LCD_CONFIG^0,c
   591  000A3C  0E2A               	movlw	42
   592  000A3E                     u347:
   593  000A3E  2EE8               	decfsz	wreg,f,c
   594  000A40  D7FE               	bra	u347
   595  000A42  2E21               	decfsz	??_LCD_CONFIG^0,f,c
   596  000A44  D7FC               	bra	u347
   597  000A46                     
   598                           ;LCD.c: 78:         _delay(24000);
   599  000A46  0E20               	movlw	32
   600  000A48  6E21               	movwf	??_LCD_CONFIG^0,c
   601  000A4A  0E2A               	movlw	42
   602  000A4C                     u357:
   603  000A4C  2EE8               	decfsz	wreg,f,c
   604  000A4E  D7FE               	bra	u357
   605  000A50  2E21               	decfsz	??_LCD_CONFIG^0,f,c
   606  000A52  D7FC               	bra	u357
   607                           
   608                           ;LCD.c: 81:  ENVIA_NIBBLE(0x30);
   609  000A54  0E30               	movlw	48
   610  000A56  EC96  F006         	call	_ENVIA_NIBBLE
   611  000A5A                     
   612                           ;LCD.c: 83:  _delay(1200);
   613  000A5A  0EF0               	movlw	240
   614  000A5C                     u367:
   615  000A5C  D000               	nop2	
   616  000A5E  2EE8               	decfsz	wreg,f,c
   617  000A60  D7FD               	bra	u367
   618  000A62                     
   619                           ;LCD.c: 84:         ENVIA_NIBBLE(0x30);
   620  000A62  0E30               	movlw	48
   621  000A64  EC96  F006         	call	_ENVIA_NIBBLE
   622  000A68                     
   623                           ;LCD.c: 85:  ENVIA_NIBBLE(0x20);
   624  000A68  0E20               	movlw	32
   625  000A6A  EC96  F006         	call	_ENVIA_NIBBLE
   626  000A6E                     
   627                           ;LCD.c: 86:  ENVIA_LCD_CMD(0x01);
   628  000A6E  0E01               	movlw	1
   629  000A70  ECCE  F005         	call	_ENVIA_LCD_CMD
   630  000A74                     
   631                           ;LCD.c: 87:  ENVIA_LCD_CMD(0x28);
   632  000A74  0E28               	movlw	40
   633  000A76  ECCE  F005         	call	_ENVIA_LCD_CMD
   634  000A7A                     
   635                           ;LCD.c: 88:  ENVIA_LCD_CMD(0x0F);
   636  000A7A  0E0F               	movlw	15
   637  000A7C  ECCE  F005         	call	_ENVIA_LCD_CMD
   638  000A80                     
   639                           ;LCD.c: 89:  ENVIA_LCD_CMD(0x06);
   640  000A80  0E06               	movlw	6
   641  000A82  ECCE  F005         	call	_ENVIA_LCD_CMD
   642  000A86                     
   643                           ;LCD.c: 90:  ENVIA_LCD_CMD(0x01);
   644  000A86  0E01               	movlw	1
   645  000A88  ECCE  F005         	call	_ENVIA_LCD_CMD
   646  000A8C  0012               	return		;funcret
   647  000A8E                     __end_of_LCD_CONFIG:
   648                           	callstack 0
   649                           
   650 ;; *************** function _CURSOR_ONOFF *****************
   651 ;; Defined at:
   652 ;;		line 35 in file "LCD.c"
   653 ;; Parameters:    Size  Location     Type
   654 ;;  estado          1    wreg     unsigned char 
   655 ;; Auto vars:     Size  Location     Type
   656 ;;  estado          1   32[COMRAM] unsigned char 
   657 ;; Return value:  Size  Location     Type
   658 ;;                  1    wreg      void 
   659 ;; Registers used:
   660 ;;		wreg, status,2, status,0, cstack
   661 ;; Tracked objects:
   662 ;;		On entry : 0/0
   663 ;;		On exit  : 0/0
   664 ;;		Unchanged: 0/0
   665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   666 ;;      Params:         0       0       0       0       0       0       0       0       0
   667 ;;      Locals:         1       0       0       0       0       0       0       0       0
   668 ;;      Temps:          0       0       0       0       0       0       0       0       0
   669 ;;      Totals:         1       0       0       0       0       0       0       0       0
   670 ;;Total ram usage:        1 bytes
   671 ;; Hardware stack levels used:    1
   672 ;; Hardware stack levels required when called:   10
   673 ;; This function calls:
   674 ;;		_ENVIA_LCD_CMD
   675 ;; This function is called by:
   676 ;;		_lcd_init
   677 ;; This function uses a non-reentrant model
   678 ;;
   679                           
   680                           	psect	text3
   681  000CD4                     __ptext3:
   682                           	callstack 0
   683  000CD4                     _CURSOR_ONOFF:
   684                           	callstack 19
   685                           
   686                           ;incstack = 0
   687                           ;CURSOR_ONOFF@estado stored from wreg
   688  000CD4  6E21               	movwf	CURSOR_ONOFF@estado^0,c
   689  000CD6                     
   690                           ;LCD.c: 35: void CURSOR_ONOFF(unsigned char estado);LCD.c: 36: {;LCD.c: 37:  if(estado =
      +                          = 0) ENVIA_LCD_CMD(0x0E);
   691  000CD6  5021               	movf	CURSOR_ONOFF@estado^0,w,c
   692  000CD8  A4D8               	btfss	status,2,c
   693  000CDA  EF71  F006         	goto	u41
   694  000CDE  EF73  F006         	goto	u40
   695  000CE2                     u41:
   696  000CE2  EF76  F006         	goto	l1000
   697  000CE6                     u40:
   698  000CE6  0E0E               	movlw	14
   699  000CE8  ECCE  F005         	call	_ENVIA_LCD_CMD
   700  000CEC                     l1000:
   701                           
   702                           ;LCD.c: 38:  if(estado == 1) ENVIA_LCD_CMD(0x0C);
   703  000CEC  0421               	decf	CURSOR_ONOFF@estado^0,w,c
   704  000CEE  A4D8               	btfss	status,2,c
   705  000CF0  EF7C  F006         	goto	u51
   706  000CF4  EF7E  F006         	goto	u50
   707  000CF8                     u51:
   708  000CF8  EF81  F006         	goto	l100
   709  000CFC                     u50:
   710  000CFC  0E0C               	movlw	12
   711  000CFE  ECCE  F005         	call	_ENVIA_LCD_CMD
   712  000D02                     l100:
   713  000D02  0012               	return		;funcret
   714  000D04                     __end_of_CURSOR_ONOFF:
   715                           	callstack 0
   716                           
   717 ;; *************** function _CURSOR_HOME *****************
   718 ;; Defined at:
   719 ;;		line 30 in file "LCD.c"
   720 ;; Parameters:    Size  Location     Type
   721 ;;		None
   722 ;; Auto vars:     Size  Location     Type
   723 ;;		None
   724 ;; Return value:  Size  Location     Type
   725 ;;                  1    wreg      void 
   726 ;; Registers used:
   727 ;;		wreg, status,2, status,0, cstack
   728 ;; Tracked objects:
   729 ;;		On entry : 0/0
   730 ;;		On exit  : 0/0
   731 ;;		Unchanged: 0/0
   732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   733 ;;      Params:         0       0       0       0       0       0       0       0       0
   734 ;;      Locals:         0       0       0       0       0       0       0       0       0
   735 ;;      Temps:          0       0       0       0       0       0       0       0       0
   736 ;;      Totals:         0       0       0       0       0       0       0       0       0
   737 ;;Total ram usage:        0 bytes
   738 ;; Hardware stack levels used:    1
   739 ;; Hardware stack levels required when called:   10
   740 ;; This function calls:
   741 ;;		_ENVIA_LCD_CMD
   742 ;; This function is called by:
   743 ;;		_lcd_init
   744 ;; This function uses a non-reentrant model
   745 ;;
   746                           
   747                           	psect	text4
   748  000DA8                     __ptext4:
   749                           	callstack 0
   750  000DA8                     _CURSOR_HOME:
   751                           	callstack 19
   752  000DA8                     
   753                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
   754  000DA8  0E02               	movlw	2
   755  000DAA  ECCE  F005         	call	_ENVIA_LCD_CMD
   756  000DAE  0012               	return		;funcret
   757  000DB0                     __end_of_CURSOR_HOME:
   758                           	callstack 0
   759                           
   760 ;; *************** function _BORRAR_LCD *****************
   761 ;; Defined at:
   762 ;;		line 67 in file "LCD.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;		None
   767 ;; Return value:  Size  Location     Type
   768 ;;                  1    wreg      void 
   769 ;; Registers used:
   770 ;;		wreg, status,2, status,0, cstack
   771 ;; Tracked objects:
   772 ;;		On entry : 0/0
   773 ;;		On exit  : 0/0
   774 ;;		Unchanged: 0/0
   775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   776 ;;      Params:         0       0       0       0       0       0       0       0       0
   777 ;;      Locals:         0       0       0       0       0       0       0       0       0
   778 ;;      Temps:          0       0       0       0       0       0       0       0       0
   779 ;;      Totals:         0       0       0       0       0       0       0       0       0
   780 ;;Total ram usage:        0 bytes
   781 ;; Hardware stack levels used:    1
   782 ;; Hardware stack levels required when called:   10
   783 ;; This function calls:
   784 ;;		_ENVIA_LCD_CMD
   785 ;; This function is called by:
   786 ;;		_lcd_init
   787 ;; This function uses a non-reentrant model
   788 ;;
   789                           
   790                           	psect	text5
   791  000DB0                     __ptext5:
   792                           	callstack 0
   793  000DB0                     _BORRAR_LCD:
   794                           	callstack 19
   795  000DB0                     
   796                           ;LCD.c: 69:  ENVIA_LCD_CMD(0x01);
   797  000DB0  0E01               	movlw	1
   798  000DB2  ECCE  F005         	call	_ENVIA_LCD_CMD
   799  000DB6  0012               	return		;funcret
   800  000DB8                     __end_of_BORRAR_LCD:
   801                           	callstack 0
   802                           
   803 ;; *************** function _ENVIA_LCD_CMD *****************
   804 ;; Defined at:
   805 ;;		line 104 in file "LCD.c"
   806 ;; Parameters:    Size  Location     Type
   807 ;;  dato            1    wreg     unsigned char 
   808 ;; Auto vars:     Size  Location     Type
   809 ;;  dato            1   30[COMRAM] unsigned char 
   810 ;;  aux             1   31[COMRAM] unsigned char 
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, status,2, status,0, cstack
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   820 ;;      Params:         0       0       0       0       0       0       0       0       0
   821 ;;      Locals:         2       0       0       0       0       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0       0       0       0       0
   823 ;;      Totals:         2       0       0       0       0       0       0       0       0
   824 ;;Total ram usage:        2 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; Hardware stack levels required when called:    9
   827 ;; This function calls:
   828 ;;		_ENVIA_NIBBLE
   829 ;;		_LEER_LCD
   830 ;; This function is called by:
   831 ;;		_CURSOR_HOME
   832 ;;		_CURSOR_ONOFF
   833 ;;		_BORRAR_LCD
   834 ;;		_LCD_CONFIG
   835 ;;		_POS_CURSOR
   836 ;;		_BLINK_CURSOR
   837 ;;		_DISPLAY_ONOFF
   838 ;;		_GENERACARACTER
   839 ;; This function uses a non-reentrant model
   840 ;;
   841                           
   842                           	psect	text6
   843  000B9C                     __ptext6:
   844                           	callstack 0
   845  000B9C                     _ENVIA_LCD_CMD:
   846                           	callstack 19
   847                           
   848                           ;incstack = 0
   849                           ;ENVIA_LCD_CMD@dato stored from wreg
   850  000B9C  6E1F               	movwf	ENVIA_LCD_CMD@dato^0,c
   851  000B9E                     
   852                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
   853  000B9E  908C               	bcf	140,0,c	;volatile
   854  000BA0                     
   855                           ;LCD.c: 108:  LEER_LCD();
   856  000BA0  EC39  F004         	call	_LEER_LCD	;wreg free
   857  000BA4                     
   858                           ;LCD.c: 109:  TRISD = 0b00000000;
   859  000BA4  0E00               	movlw	0
   860  000BA6  6E95               	movwf	149,c	;volatile
   861  000BA8                     
   862                           ;LCD.c: 111:         _delay(1200);
   863  000BA8  0EF0               	movlw	240
   864  000BAA                     u377:
   865  000BAA  D000               	nop2	
   866  000BAC  2EE8               	decfsz	wreg,f,c
   867  000BAE  D7FD               	bra	u377
   868  000BB0                     
   869                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
   870  000BB0  928C               	bcf	140,1,c	;volatile
   871  000BB2                     
   872                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
   873  000BB2  948C               	bcf	140,2,c	;volatile
   874  000BB4                     
   875                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
   876  000BB4  908C               	bcf	140,0,c	;volatile
   877  000BB6                     
   878                           ;LCD.c: 115:  aux = dato & 0xF0;
   879  000BB6  501F               	movf	ENVIA_LCD_CMD@dato^0,w,c
   880  000BB8  0BF0               	andlw	240
   881  000BBA  6E20               	movwf	ENVIA_LCD_CMD@aux^0,c
   882  000BBC                     
   883                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
   884  000BBC  5020               	movf	ENVIA_LCD_CMD@aux^0,w,c
   885  000BBE  EC96  F006         	call	_ENVIA_NIBBLE
   886  000BC2                     
   887                           ;LCD.c: 117:  aux = dato<<4;
   888  000BC2  381F               	swapf	ENVIA_LCD_CMD@dato^0,w,c
   889  000BC4  0BF0               	andlw	240
   890  000BC6  6E20               	movwf	ENVIA_LCD_CMD@aux^0,c
   891  000BC8                     
   892                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
   893  000BC8  5020               	movf	ENVIA_LCD_CMD@aux^0,w,c
   894  000BCA  EC96  F006         	call	_ENVIA_NIBBLE
   895  000BCE  0012               	return		;funcret
   896  000BD0                     __end_of_ENVIA_LCD_CMD:
   897                           	callstack 0
   898                           
   899 ;; *************** function _configuracion *****************
   900 ;; Defined at:
   901 ;;		line 28 in file "maincode.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;		None
   904 ;; Auto vars:     Size  Location     Type
   905 ;;		None
   906 ;; Return value:  Size  Location     Type
   907 ;;                  1    wreg      void 
   908 ;; Registers used:
   909 ;;		wreg, status,2
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   915 ;;      Params:         0       0       0       0       0       0       0       0       0
   916 ;;      Locals:         0       0       0       0       0       0       0       0       0
   917 ;;      Temps:          0       0       0       0       0       0       0       0       0
   918 ;;      Totals:         0       0       0       0       0       0       0       0       0
   919 ;;Total ram usage:        0 bytes
   920 ;; Hardware stack levels used:    1
   921 ;; Hardware stack levels required when called:    8
   922 ;; This function calls:
   923 ;;		Nothing
   924 ;; This function is called by:
   925 ;;		_main
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           	psect	text7
   930  000D80                     __ptext7:
   931                           	callstack 0
   932  000D80                     _configuracion:
   933                           	callstack 22
   934  000D80                     
   935                           ;maincode.c: 30:     RCONbits.IPEN = 1;
   936  000D80  8ED0               	bsf	208,7,c	;volatile
   937                           
   938                           ;maincode.c: 31:     INTCON3bits.INT1P = 0;
   939  000D82  9CF0               	bcf	240,6,c	;volatile
   940                           
   941                           ;maincode.c: 32:     INTCON3bits.INT2P = 0;
   942  000D84  9EF0               	bcf	240,7,c	;volatile
   943                           
   944                           ;maincode.c: 33:     INTCON3bits.INT2IE = 1;
   945  000D86  88F0               	bsf	240,4,c	;volatile
   946                           
   947                           ;maincode.c: 34:     INTCON3bits.INT1E = 1;
   948  000D88  86F0               	bsf	240,3,c	;volatile
   949                           
   950                           ;maincode.c: 35:     INTCONbits.INT0E = 1;
   951  000D8A  88F2               	bsf	242,4,c	;volatile
   952                           
   953                           ;maincode.c: 36:     INTCONbits.GIEL = 1;
   954  000D8C  8CF2               	bsf	242,6,c	;volatile
   955                           
   956                           ;maincode.c: 37:     INTCONbits.GIEH = 1;
   957  000D8E  8EF2               	bsf	242,7,c	;volatile
   958  000D90                     
   959                           ;maincode.c: 38:     TRISB = 0x7F;
   960  000D90  0E7F               	movlw	127
   961  000D92  6E93               	movwf	147,c	;volatile
   962  000D94  0012               	return		;funcret
   963  000D96                     __end_of_configuracion:
   964                           	callstack 0
   965                           
   966 ;; *************** function _ESCRIBE_MENSAJE *****************
   967 ;; Defined at:
   968 ;;		line 41 in file "LCD.c"
   969 ;; Parameters:    Size  Location     Type
   970 ;;  cadena          2   32[COMRAM] PTR const unsigned char 
   971 ;;		 -> STR_7(16), STR_6(16), STR_5(16), STR_4(16), 
   972 ;;		 -> STR_3(16), STR_2(16), STR_1(15), 
   973 ;;  tam             1   34[COMRAM] unsigned char 
   974 ;; Auto vars:     Size  Location     Type
   975 ;;  i               1   37[COMRAM] unsigned char 
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   985 ;;      Params:         3       0       0       0       0       0       0       0       0
   986 ;;      Locals:         1       0       0       0       0       0       0       0       0
   987 ;;      Temps:          2       0       0       0       0       0       0       0       0
   988 ;;      Totals:         6       0       0       0       0       0       0       0       0
   989 ;;Total ram usage:        6 bytes
   990 ;; Hardware stack levels used:    1
   991 ;; Hardware stack levels required when called:   10
   992 ;; This function calls:
   993 ;;		_ENVIA_CHAR
   994 ;; This function is called by:
   995 ;;		_main
   996 ;; This function uses a non-reentrant model
   997 ;;
   998                           
   999                           	psect	text8
  1000  000AE2                     __ptext8:
  1001                           	callstack 0
  1002  000AE2                     _ESCRIBE_MENSAJE:
  1003                           	callstack 20
  1004  000AE2                     
  1005                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1006  000AE2  0E00               	movlw	0
  1007  000AE4  6E26               	movwf	ESCRIBE_MENSAJE@i^0,c
  1008                           
  1009                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1010  000AE6  0E00               	movlw	0
  1011  000AE8  6E26               	movwf	ESCRIBE_MENSAJE@i^0,c
  1012  000AEA  EF86  F005         	goto	l1450
  1013  000AEE                     l1446:
  1014                           
  1015                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1016  000AEE  5026               	movf	ESCRIBE_MENSAJE@i^0,w,c
  1017  000AF0  2421               	addwf	ESCRIBE_MENSAJE@cadena^0,w,c
  1018  000AF2  6E24               	movwf	??_ESCRIBE_MENSAJE^0,c
  1019  000AF4  0E00               	movlw	0
  1020  000AF6  2022               	addwfc	(ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1021  000AF8  6E25               	movwf	(??_ESCRIBE_MENSAJE+1)^0,c
  1022  000AFA  C024  FFF6         	movff	??_ESCRIBE_MENSAJE,tblptrl
  1023  000AFE  C025  FFF7         	movff	??_ESCRIBE_MENSAJE+1,tblptrh
  1024  000B02                     	if	0	;tblptru may be non-zero
  1025  000B02                     	endif
  1026  000B02                     	if	0	;tblptru may be non-zero
  1027  000B02                     	endif
  1028  000B02  0008               	tblrd		*
  1029  000B04  50F5               	movf	tablat,w,c
  1030  000B06  ECE8  F005         	call	_ENVIA_CHAR
  1031  000B0A                     
  1032                           ;LCD.c: 47:  }
  1033  000B0A  2A26               	incf	ESCRIBE_MENSAJE@i^0,f,c
  1034  000B0C                     l1450:
  1035  000B0C  5023               	movf	ESCRIBE_MENSAJE@tam^0,w,c
  1036  000B0E  5C26               	subwf	ESCRIBE_MENSAJE@i^0,w,c
  1037  000B10  A0D8               	btfss	status,0,c
  1038  000B12  EF8D  F005         	goto	u231
  1039  000B16  EF8F  F005         	goto	u230
  1040  000B1A                     u231:
  1041  000B1A  EF77  F005         	goto	l1446
  1042  000B1E                     u230:
  1043  000B1E  0012               	return		;funcret
  1044  000B20                     __end_of_ESCRIBE_MENSAJE:
  1045                           	callstack 0
  1046                           
  1047 ;; *************** function _ENVIA_CHAR *****************
  1048 ;; Defined at:
  1049 ;;		line 50 in file "LCD.c"
  1050 ;; Parameters:    Size  Location     Type
  1051 ;;  dato            1    wreg     unsigned char 
  1052 ;; Auto vars:     Size  Location     Type
  1053 ;;  dato            1   30[COMRAM] unsigned char 
  1054 ;;  aux             1   31[COMRAM] unsigned char 
  1055 ;; Return value:  Size  Location     Type
  1056 ;;                  1    wreg      void 
  1057 ;; Registers used:
  1058 ;;		wreg, status,2, status,0, cstack
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1064 ;;      Params:         0       0       0       0       0       0       0       0       0
  1065 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1066 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1067 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1068 ;;Total ram usage:        2 bytes
  1069 ;; Hardware stack levels used:    1
  1070 ;; Hardware stack levels required when called:    9
  1071 ;; This function calls:
  1072 ;;		_ENVIA_NIBBLE
  1073 ;;		_LEER_LCD
  1074 ;; This function is called by:
  1075 ;;		_ESCRIBE_MENSAJE
  1076 ;;		_GENERACARACTER
  1077 ;; This function uses a non-reentrant model
  1078 ;;
  1079                           
  1080                           	psect	text9
  1081  000BD0                     __ptext9:
  1082                           	callstack 0
  1083  000BD0                     _ENVIA_CHAR:
  1084                           	callstack 20
  1085                           
  1086                           ;incstack = 0
  1087                           ;ENVIA_CHAR@dato stored from wreg
  1088  000BD0  6E1F               	movwf	ENVIA_CHAR@dato^0,c
  1089  000BD2                     
  1090                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1091  000BD2  808C               	bsf	140,0,c	;volatile
  1092  000BD4                     
  1093                           ;LCD.c: 54:  LEER_LCD();
  1094  000BD4  EC39  F004         	call	_LEER_LCD	;wreg free
  1095  000BD8                     
  1096                           ;LCD.c: 55:  TRISD = 0x00;
  1097  000BD8  0E00               	movlw	0
  1098  000BDA  6E95               	movwf	149,c	;volatile
  1099  000BDC                     
  1100                           ;LCD.c: 56:         _delay(1200);
  1101  000BDC  0EF0               	movlw	240
  1102  000BDE                     u387:
  1103  000BDE  D000               	nop2	
  1104  000BE0  2EE8               	decfsz	wreg,f,c
  1105  000BE2  D7FD               	bra	u387
  1106  000BE4                     
  1107                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1108  000BE4  928C               	bcf	140,1,c	;volatile
  1109  000BE6                     
  1110                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1111  000BE6  948C               	bcf	140,2,c	;volatile
  1112  000BE8                     
  1113                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1114  000BE8  808C               	bsf	140,0,c	;volatile
  1115  000BEA                     
  1116                           ;LCD.c: 61:  aux = dato & 0xF0;
  1117  000BEA  501F               	movf	ENVIA_CHAR@dato^0,w,c
  1118  000BEC  0BF0               	andlw	240
  1119  000BEE  6E20               	movwf	ENVIA_CHAR@aux^0,c
  1120  000BF0                     
  1121                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1122  000BF0  5020               	movf	ENVIA_CHAR@aux^0,w,c
  1123  000BF2  EC96  F006         	call	_ENVIA_NIBBLE
  1124  000BF6                     
  1125                           ;LCD.c: 63:  aux = dato << 4;
  1126  000BF6  381F               	swapf	ENVIA_CHAR@dato^0,w,c
  1127  000BF8  0BF0               	andlw	240
  1128  000BFA  6E20               	movwf	ENVIA_CHAR@aux^0,c
  1129  000BFC                     
  1130                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1131  000BFC  5020               	movf	ENVIA_CHAR@aux^0,w,c
  1132  000BFE  EC96  F006         	call	_ENVIA_NIBBLE
  1133  000C02  0012               	return		;funcret
  1134  000C04                     __end_of_ENVIA_CHAR:
  1135                           	callstack 0
  1136                           
  1137 ;; *************** function _LEER_LCD *****************
  1138 ;; Defined at:
  1139 ;;		line 121 in file "LCD.c"
  1140 ;; Parameters:    Size  Location     Type
  1141 ;;		None
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;  aux             1   29[COMRAM] unsigned char 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  1    wreg      void 
  1146 ;; Registers used:
  1147 ;;		wreg, status,2, status,0
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1153 ;;      Params:         0       0       0       0       0       0       0       0       0
  1154 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1156 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1157 ;;Total ram usage:        1 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    8
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_ENVIA_CHAR
  1164 ;;		_ENVIA_LCD_CMD
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           	psect	text10
  1169  000872                     __ptext10:
  1170                           	callstack 0
  1171  000872                     _LEER_LCD:
  1172                           	callstack 19
  1173  000872                     
  1174                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1175  000872  0EF8               	movlw	248
  1176  000874  6E95               	movwf	149,c	;volatile
  1177  000876                     
  1178                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1179  000876  908C               	bcf	140,0,c	;volatile
  1180  000878                     
  1181                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1182  000878  828C               	bsf	140,1,c	;volatile
  1183  00087A                     
  1184                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1185  00087A  848C               	bsf	140,2,c	;volatile
  1186  00087C                     
  1187                           ;LCD.c: 128:         _delay(1200);
  1188  00087C  0EF0               	movlw	240
  1189  00087E                     u397:
  1190  00087E  D000               	nop2	
  1191  000880  2EE8               	decfsz	wreg,f,c
  1192  000882  D7FD               	bra	u397
  1193  000884                     
  1194                           ;LCD.c: 130:  aux = PORTD;
  1195  000884  CF83 F01E          	movff	3971,LEER_LCD@aux	;volatile
  1196  000888                     
  1197                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1198  000888  948C               	bcf	140,2,c	;volatile
  1199  00088A                     
  1200                           ;LCD.c: 132:         _delay(1200);
  1201  00088A  0EF0               	movlw	240
  1202  00088C                     u407:
  1203  00088C  D000               	nop2	
  1204  00088E  2EE8               	decfsz	wreg,f,c
  1205  000890  D7FD               	bra	u407
  1206  000892                     
  1207                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1208  000892  848C               	bsf	140,2,c	;volatile
  1209  000894                     
  1210                           ;LCD.c: 135:         _delay(1200);
  1211  000894  0EF0               	movlw	240
  1212  000896                     u417:
  1213  000896  D000               	nop2	
  1214  000898  2EE8               	decfsz	wreg,f,c
  1215  00089A  D7FD               	bra	u417
  1216  00089C                     
  1217                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1218  00089C  948C               	bcf	140,2,c	;volatile
  1219  00089E                     l830:
  1220                           
  1221                           ;LCD.c: 138:  aux = aux & 0x80;
  1222  00089E  501E               	movf	LEER_LCD@aux^0,w,c
  1223  0008A0  0B80               	andlw	128
  1224  0008A2  6E1E               	movwf	LEER_LCD@aux^0,c
  1225                           
  1226                           ;LCD.c: 139:  while(aux == 0x80)
  1227  0008A4  EF68  F004         	goto	l844
  1228  0008A8                     l125:
  1229                           
  1230                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1231  0008A8  848C               	bsf	140,2,c	;volatile
  1232  0008AA                     
  1233                           ;LCD.c: 142:             _delay(1200);
  1234  0008AA  0EF0               	movlw	240
  1235  0008AC                     u427:
  1236  0008AC  D000               	nop2	
  1237  0008AE  2EE8               	decfsz	wreg,f,c
  1238  0008B0  D7FD               	bra	u427
  1239  0008B2                     
  1240                           ;LCD.c: 143:             aux = PORTD;
  1241  0008B2  CF83 F01E          	movff	3971,LEER_LCD@aux	;volatile
  1242  0008B6                     
  1243                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1244  0008B6  948C               	bcf	140,2,c	;volatile
  1245                           
  1246                           ;LCD.c: 145:             _delay(1200);
  1247  0008B8  0EF0               	movlw	240
  1248  0008BA                     u437:
  1249  0008BA  D000               	nop2	
  1250  0008BC  2EE8               	decfsz	wreg,f,c
  1251  0008BE  D7FD               	bra	u437
  1252  0008C0                     
  1253                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1254  0008C0  848C               	bsf	140,2,c	;volatile
  1255                           
  1256                           ;LCD.c: 147:             _delay(1200);
  1257  0008C2  0EF0               	movlw	240
  1258  0008C4                     u447:
  1259  0008C4  D000               	nop2	
  1260  0008C6  2EE8               	decfsz	wreg,f,c
  1261  0008C8  D7FD               	bra	u447
  1262  0008CA                     
  1263                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1264  0008CA  948C               	bcf	140,2,c	;volatile
  1265  0008CC  EF4F  F004         	goto	l830
  1266  0008D0                     l844:
  1267                           
  1268                           ;LCD.c: 139:  while(aux == 0x80)
  1269  0008D0  0E80               	movlw	128
  1270  0008D2  181E               	xorwf	LEER_LCD@aux^0,w,c
  1271  0008D4  B4D8               	btfsc	status,2,c
  1272  0008D6  EF6F  F004         	goto	u11
  1273  0008DA  EF71  F004         	goto	u10
  1274  0008DE                     u11:
  1275  0008DE  EF54  F004         	goto	l125
  1276  0008E2                     u10:
  1277  0008E2  0012               	return		;funcret
  1278  0008E4                     __end_of_LEER_LCD:
  1279                           	callstack 0
  1280                           
  1281 ;; *************** function _ENVIA_NIBBLE *****************
  1282 ;; Defined at:
  1283 ;;		line 93 in file "LCD.c"
  1284 ;; Parameters:    Size  Location     Type
  1285 ;;  dato            1    wreg     unsigned char 
  1286 ;; Auto vars:     Size  Location     Type
  1287 ;;  dato            1   29[COMRAM] unsigned char 
  1288 ;; Return value:  Size  Location     Type
  1289 ;;                  1    wreg      void 
  1290 ;; Registers used:
  1291 ;;		wreg, status,2, status,0
  1292 ;; Tracked objects:
  1293 ;;		On entry : 0/0
  1294 ;;		On exit  : 0/0
  1295 ;;		Unchanged: 0/0
  1296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1297 ;;      Params:         0       0       0       0       0       0       0       0       0
  1298 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1299 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1300 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1301 ;;Total ram usage:        1 bytes
  1302 ;; Hardware stack levels used:    1
  1303 ;; Hardware stack levels required when called:    8
  1304 ;; This function calls:
  1305 ;;		Nothing
  1306 ;; This function is called by:
  1307 ;;		_ENVIA_CHAR
  1308 ;;		_LCD_CONFIG
  1309 ;;		_ENVIA_LCD_CMD
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           
  1313                           	psect	text11
  1314  000D2C                     __ptext11:
  1315                           	callstack 0
  1316  000D2C                     _ENVIA_NIBBLE:
  1317                           	callstack 20
  1318                           
  1319                           ;incstack = 0
  1320                           ;ENVIA_NIBBLE@dato stored from wreg
  1321  000D2C  6E1E               	movwf	ENVIA_NIBBLE@dato^0,c
  1322  000D2E                     
  1323                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  1324  000D2E  0E0F               	movlw	15
  1325  000D30  168C               	andwf	140,f,c	;volatile
  1326                           
  1327                           ;LCD.c: 96:  dato &= 0xF0;
  1328  000D32  0EF0               	movlw	240
  1329  000D34  161E               	andwf	ENVIA_NIBBLE@dato^0,f,c
  1330                           
  1331                           ;LCD.c: 97:  LATD|= dato;
  1332  000D36  501E               	movf	ENVIA_NIBBLE@dato^0,w,c	;volatile
  1333  000D38  128C               	iorwf	140,f,c	;volatile
  1334  000D3A                     
  1335                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  1336  000D3A  848C               	bsf	140,2,c	;volatile
  1337  000D3C                     
  1338                           ;LCD.c: 100:         _delay(1200);
  1339  000D3C  0EF0               	movlw	240
  1340  000D3E                     u457:
  1341  000D3E  D000               	nop2	
  1342  000D40  2EE8               	decfsz	wreg,f,c
  1343  000D42  D7FD               	bra	u457
  1344  000D44                     
  1345                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  1346  000D44  948C               	bcf	140,2,c	;volatile
  1347  000D46  0012               	return		;funcret
  1348  000D48                     __end_of_ENVIA_NIBBLE:
  1349                           	callstack 0
  1350                           
  1351 ;; *************** function _Int1_ISR *****************
  1352 ;; Defined at:
  1353 ;;		line 77 in file "maincode.c"
  1354 ;; Parameters:    Size  Location     Type
  1355 ;;		None
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;		None
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1367 ;;      Params:         0       0       0       0       0       0       0       0       0
  1368 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1369 ;;      Temps:          7       0       0       0       0       0       0       0       0
  1370 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1371 ;;Total ram usage:        7 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; Hardware stack levels required when called:    7
  1374 ;; This function calls:
  1375 ;;		i1_CURSOR_HOME
  1376 ;;		i1_ESCRIBE_MENSAJE
  1377 ;; This function is called by:
  1378 ;;		Interrupt level 1
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           	psect	intcodelo
  1383  000018                     __pintcodelo:
  1384                           	callstack 0
  1385  000018                     _Int1_ISR:
  1386                           	callstack 19
  1387                           
  1388                           ;incstack = 0
  1389  000018  8029               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  1390  00001A  CFD8 F017          	movff	status,??_Int1_ISR
  1391  00001E  CFE8 F018          	movff	wreg,??_Int1_ISR+1
  1392  000022  CFE0 F019          	movff	bsr,??_Int1_ISR+2
  1393  000026  CFF6 F01A          	movff	tblptrl,??_Int1_ISR+3
  1394  00002A  CFF7 F01B          	movff	tblptrh,??_Int1_ISR+4
  1395  00002E  CFF8 F01C          	movff	tblptru,??_Int1_ISR+5
  1396  000032  CFF5 F01D          	movff	tablat,??_Int1_ISR+6
  1397  000036                     
  1398                           ;maincode.c: 79:     if (INTCON3bits.INT1IF == 1) {
  1399  000036  A0F0               	btfss	240,0,c	;volatile
  1400  000038  EF20  F000         	goto	i1u27_21
  1401  00003C  EF22  F000         	goto	i1u27_20
  1402  000040                     i1u27_21:
  1403  000040  EF42  F000         	goto	i1l1520
  1404  000044                     i1u27_20:
  1405  000044                     
  1406                           ;maincode.c: 80:         if (INTCON2bits.INTEDG1 == 1) {
  1407  000044  AAF1               	btfss	241,5,c	;volatile
  1408  000046  EF27  F000         	goto	i1u28_21
  1409  00004A  EF29  F000         	goto	i1u28_20
  1410  00004E                     i1u28_21:
  1411  00004E  EF36  F000         	goto	i1l1512
  1412  000052                     i1u28_20:
  1413  000052                     
  1414                           ;maincode.c: 81:             CURSOR_HOME();
  1415  000052  ECDC  F006         	call	i1_CURSOR_HOME	;wreg free
  1416  000056                     
  1417                           ;maincode.c: 82:             ESCRIBE_MENSAJE("BTN1 presionado",15);
  1418  000056  0E41               	movlw	low STR_4
  1419  000058  6E11               	movwf	i1ESCRIBE_MENSAJE@cadena^0,c
  1420  00005A  0E08               	movlw	high STR_4
  1421  00005C  6E12               	movwf	(i1ESCRIBE_MENSAJE@cadena+1)^0,c
  1422  00005E  0E0F               	movlw	15
  1423  000060  6E13               	movwf	i1ESCRIBE_MENSAJE@tam^0,c
  1424  000062  EC90  F005         	call	i1_ESCRIBE_MENSAJE	;wreg free
  1425  000066                     
  1426                           ;maincode.c: 83:             INTCON2bits.INTEDG1 = 0;
  1427  000066  9AF1               	bcf	241,5,c	;volatile
  1428                           
  1429                           ;maincode.c: 84:         }
  1430  000068  EF41  F000         	goto	i1l1518
  1431  00006C                     i1l1512:
  1432                           
  1433                           ;maincode.c: 86:             CURSOR_HOME();
  1434  00006C  ECDC  F006         	call	i1_CURSOR_HOME	;wreg free
  1435  000070                     
  1436                           ;maincode.c: 87:             ESCRIBE_MENSAJE("BTN1 soltado   ",15);
  1437  000070  0E11               	movlw	low STR_5
  1438  000072  6E11               	movwf	i1ESCRIBE_MENSAJE@cadena^0,c
  1439  000074  0E08               	movlw	high STR_5
  1440  000076  6E12               	movwf	(i1ESCRIBE_MENSAJE@cadena+1)^0,c
  1441  000078  0E0F               	movlw	15
  1442  00007A  6E13               	movwf	i1ESCRIBE_MENSAJE@tam^0,c
  1443  00007C  EC90  F005         	call	i1_ESCRIBE_MENSAJE	;wreg free
  1444  000080                     
  1445                           ;maincode.c: 88:             INTCON2bits.INTEDG1 = 1;
  1446  000080  8AF1               	bsf	241,5,c	;volatile
  1447  000082                     i1l1518:
  1448                           
  1449                           ;maincode.c: 90:         INTCON3bits.INT1IF = 0;
  1450  000082  90F0               	bcf	240,0,c	;volatile
  1451  000084                     i1l1520:
  1452                           
  1453                           ;maincode.c: 92:     if (INTCON3bits.INT2IF == 1) {
  1454  000084  A2F0               	btfss	240,1,c	;volatile
  1455  000086  EF47  F000         	goto	i1u29_21
  1456  00008A  EF49  F000         	goto	i1u29_20
  1457  00008E                     i1u29_21:
  1458  00008E  EF69  F000         	goto	i1l58
  1459  000092                     i1u29_20:
  1460  000092                     
  1461                           ;maincode.c: 93:         if (INTCON2bits.INTEDG2 == 1) {
  1462  000092  A8F1               	btfss	241,4,c	;volatile
  1463  000094  EF4E  F000         	goto	i1u30_21
  1464  000098  EF50  F000         	goto	i1u30_20
  1465  00009C                     i1u30_21:
  1466  00009C  EF5D  F000         	goto	i1l1530
  1467  0000A0                     i1u30_20:
  1468  0000A0                     
  1469                           ;maincode.c: 94:             CURSOR_HOME();
  1470  0000A0  ECDC  F006         	call	i1_CURSOR_HOME	;wreg free
  1471  0000A4                     
  1472                           ;maincode.c: 95:             ESCRIBE_MENSAJE("BTN2 presionado",15);
  1473  0000A4  0E51               	movlw	low STR_6
  1474  0000A6  6E11               	movwf	i1ESCRIBE_MENSAJE@cadena^0,c
  1475  0000A8  0E08               	movlw	high STR_6
  1476  0000AA  6E12               	movwf	(i1ESCRIBE_MENSAJE@cadena+1)^0,c
  1477  0000AC  0E0F               	movlw	15
  1478  0000AE  6E13               	movwf	i1ESCRIBE_MENSAJE@tam^0,c
  1479  0000B0  EC90  F005         	call	i1_ESCRIBE_MENSAJE	;wreg free
  1480  0000B4                     
  1481                           ;maincode.c: 96:             INTCON2bits.INTEDG2 = 0;
  1482  0000B4  98F1               	bcf	241,4,c	;volatile
  1483                           
  1484                           ;maincode.c: 97:         }
  1485  0000B6  EF68  F000         	goto	i1l1536
  1486  0000BA                     i1l1530:
  1487                           
  1488                           ;maincode.c: 99:             CURSOR_HOME();
  1489  0000BA  ECDC  F006         	call	i1_CURSOR_HOME	;wreg free
  1490  0000BE                     
  1491                           ;maincode.c: 100:             ESCRIBE_MENSAJE("BTN2 soltado   ",15);
  1492  0000BE  0E21               	movlw	low STR_7
  1493  0000C0  6E11               	movwf	i1ESCRIBE_MENSAJE@cadena^0,c
  1494  0000C2  0E08               	movlw	high STR_7
  1495  0000C4  6E12               	movwf	(i1ESCRIBE_MENSAJE@cadena+1)^0,c
  1496  0000C6  0E0F               	movlw	15
  1497  0000C8  6E13               	movwf	i1ESCRIBE_MENSAJE@tam^0,c
  1498  0000CA  EC90  F005         	call	i1_ESCRIBE_MENSAJE	;wreg free
  1499  0000CE                     
  1500                           ;maincode.c: 101:             INTCON2bits.INTEDG2 = 1;
  1501  0000CE  88F1               	bsf	241,4,c	;volatile
  1502  0000D0                     i1l1536:
  1503                           
  1504                           ;maincode.c: 103:         INTCON3bits.INT2IF = 0;
  1505  0000D0  92F0               	bcf	240,1,c	;volatile
  1506  0000D2                     i1l58:
  1507  0000D2  C01D  FFF5         	movff	??_Int1_ISR+6,tablat
  1508  0000D6  C01C  FFF8         	movff	??_Int1_ISR+5,tblptru
  1509  0000DA  C01B  FFF7         	movff	??_Int1_ISR+4,tblptrh
  1510  0000DE  C01A  FFF6         	movff	??_Int1_ISR+3,tblptrl
  1511  0000E2  C019  FFE0         	movff	??_Int1_ISR+2,bsr
  1512  0000E6  C018  FFE8         	movff	??_Int1_ISR+1,wreg
  1513  0000EA  C017  FFD8         	movff	??_Int1_ISR,status
  1514  0000EE  9029               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1515  0000F0  0010               	retfie	
  1516  0000F2                     __end_of_Int1_ISR:
  1517                           	callstack 0
  1518                           
  1519 ;; *************** function i1_ESCRIBE_MENSAJE *****************
  1520 ;; Defined at:
  1521 ;;		line 41 in file "LCD.c"
  1522 ;; Parameters:    Size  Location     Type
  1523 ;;  cadena          2   16[COMRAM] PTR const unsigned char 
  1524 ;;		 -> STR_7(16), STR_6(16), STR_5(16), STR_4(16), 
  1525 ;;		 -> STR_3(16), STR_2(16), STR_1(15), 
  1526 ;;  tam             1   18[COMRAM] unsigned char 
  1527 ;; Auto vars:     Size  Location     Type
  1528 ;;  i               1   21[COMRAM] unsigned char 
  1529 ;; Return value:  Size  Location     Type
  1530 ;;                  1    wreg      void 
  1531 ;; Registers used:
  1532 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1533 ;; Tracked objects:
  1534 ;;		On entry : 0/0
  1535 ;;		On exit  : 0/0
  1536 ;;		Unchanged: 0/0
  1537 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1538 ;;      Params:         3       0       0       0       0       0       0       0       0
  1539 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1540 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1541 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1542 ;;Total ram usage:        6 bytes
  1543 ;; Hardware stack levels used:    1
  1544 ;; Hardware stack levels required when called:    6
  1545 ;; This function calls:
  1546 ;;		i1_ENVIA_CHAR
  1547 ;; This function is called by:
  1548 ;;		_Int1_ISR
  1549 ;; This function uses a non-reentrant model
  1550 ;;
  1551                           
  1552                           	psect	text13
  1553  000B20                     __ptext13:
  1554                           	callstack 0
  1555  000B20                     i1_ESCRIBE_MENSAJE:
  1556                           	callstack 19
  1557  000B20                     
  1558                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  1559  000B20  0E00               	movlw	0
  1560  000B22  6E16               	movwf	i1ESCRIBE_MENSAJE@i^0,c
  1561                           
  1562                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  1563  000B24  0E00               	movlw	0
  1564  000B26  6E16               	movwf	i1ESCRIBE_MENSAJE@i^0,c
  1565  000B28  EFA5  F005         	goto	i1l1462
  1566  000B2C                     i1l1458:
  1567                           
  1568                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  1569  000B2C  5016               	movf	i1ESCRIBE_MENSAJE@i^0,w,c
  1570  000B2E  2411               	addwf	i1ESCRIBE_MENSAJE@cadena^0,w,c
  1571  000B30  6E14               	movwf	??i1_ESCRIBE_MENSAJE^0,c
  1572  000B32  0E00               	movlw	0
  1573  000B34  2012               	addwfc	(i1ESCRIBE_MENSAJE@cadena+1)^0,w,c
  1574  000B36  6E15               	movwf	(??i1_ESCRIBE_MENSAJE+1)^0,c
  1575  000B38  C014  FFF6         	movff	??i1_ESCRIBE_MENSAJE,tblptrl
  1576  000B3C  C015  FFF7         	movff	??i1_ESCRIBE_MENSAJE+1,tblptrh
  1577  000B40                     	if	0	;tblptru may be non-zero
  1578  000B40                     	endif
  1579  000B40                     	if	0	;tblptru may be non-zero
  1580  000B40                     	endif
  1581  000B40  0008               	tblrd		*
  1582  000B42  50F5               	movf	tablat,w,c
  1583  000B44  EC02  F006         	call	i1_ENVIA_CHAR
  1584  000B48                     
  1585                           ;LCD.c: 47:  }
  1586  000B48  2A16               	incf	i1ESCRIBE_MENSAJE@i^0,f,c
  1587  000B4A                     i1l1462:
  1588  000B4A  5013               	movf	i1ESCRIBE_MENSAJE@tam^0,w,c
  1589  000B4C  5C16               	subwf	i1ESCRIBE_MENSAJE@i^0,w,c
  1590  000B4E  A0D8               	btfss	status,0,c
  1591  000B50  EFAC  F005         	goto	i1u24_21
  1592  000B54  EFAE  F005         	goto	i1u24_20
  1593  000B58                     i1u24_21:
  1594  000B58  EF96  F005         	goto	i1l1458
  1595  000B5C                     i1u24_20:
  1596  000B5C  0012               	return		;funcret
  1597  000B5E                     __end_ofi1_ESCRIBE_MENSAJE:
  1598                           	callstack 0
  1599                           
  1600 ;; *************** function i1_ENVIA_CHAR *****************
  1601 ;; Defined at:
  1602 ;;		line 50 in file "LCD.c"
  1603 ;; Parameters:    Size  Location     Type
  1604 ;;  dato            1    wreg     unsigned char 
  1605 ;; Auto vars:     Size  Location     Type
  1606 ;;  dato            1   14[COMRAM] unsigned char 
  1607 ;;  aux             1   15[COMRAM] unsigned char 
  1608 ;; Return value:  Size  Location     Type
  1609 ;;                  1    wreg      void 
  1610 ;; Registers used:
  1611 ;;		wreg, status,2, status,0, cstack
  1612 ;; Tracked objects:
  1613 ;;		On entry : 0/0
  1614 ;;		On exit  : 0/0
  1615 ;;		Unchanged: 0/0
  1616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1617 ;;      Params:         0       0       0       0       0       0       0       0       0
  1618 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1619 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1620 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1621 ;;Total ram usage:        2 bytes
  1622 ;; Hardware stack levels used:    1
  1623 ;; Hardware stack levels required when called:    5
  1624 ;; This function calls:
  1625 ;;		i1_ENVIA_NIBBLE
  1626 ;;		i1_LEER_LCD
  1627 ;; This function is called by:
  1628 ;;		i1_ESCRIBE_MENSAJE
  1629 ;; This function uses a non-reentrant model
  1630 ;;
  1631                           
  1632                           	psect	text14
  1633  000C04                     __ptext14:
  1634                           	callstack 0
  1635  000C04                     i1_ENVIA_CHAR:
  1636                           	callstack 19
  1637                           
  1638                           ;incstack = 0
  1639                           ;i1ENVIA_CHAR@dato stored from wreg
  1640  000C04  6E0F               	movwf	i1ENVIA_CHAR@dato^0,c
  1641  000C06                     
  1642                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  1643  000C06  808C               	bsf	140,0,c	;volatile
  1644  000C08                     
  1645                           ;LCD.c: 54:  LEER_LCD();
  1646  000C08  EC72  F004         	call	i1_LEER_LCD	;wreg free
  1647  000C0C                     
  1648                           ;LCD.c: 55:  TRISD = 0x00;
  1649  000C0C  0E00               	movlw	0
  1650  000C0E  6E95               	movwf	149,c	;volatile
  1651  000C10                     
  1652                           ;LCD.c: 56:         _delay(1200);
  1653  000C10  0EF0               	movlw	240
  1654  000C12                     i1u46_27:
  1655  000C12  D000               	nop2	
  1656  000C14  2EE8               	decfsz	wreg,f,c
  1657  000C16  D7FD               	bra	i1u46_27
  1658  000C18                     
  1659                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  1660  000C18  928C               	bcf	140,1,c	;volatile
  1661  000C1A                     
  1662                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  1663  000C1A  948C               	bcf	140,2,c	;volatile
  1664  000C1C                     
  1665                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  1666  000C1C  808C               	bsf	140,0,c	;volatile
  1667  000C1E                     
  1668                           ;LCD.c: 61:  aux = dato & 0xF0;
  1669  000C1E  500F               	movf	i1ENVIA_CHAR@dato^0,w,c
  1670  000C20  0BF0               	andlw	240
  1671  000C22  6E10               	movwf	i1ENVIA_CHAR@aux^0,c
  1672  000C24                     
  1673                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  1674  000C24  5010               	movf	i1ENVIA_CHAR@aux^0,w,c
  1675  000C26  ECA4  F006         	call	i1_ENVIA_NIBBLE
  1676  000C2A                     
  1677                           ;LCD.c: 63:  aux = dato << 4;
  1678  000C2A  380F               	swapf	i1ENVIA_CHAR@dato^0,w,c
  1679  000C2C  0BF0               	andlw	240
  1680  000C2E  6E10               	movwf	i1ENVIA_CHAR@aux^0,c
  1681  000C30                     
  1682                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  1683  000C30  5010               	movf	i1ENVIA_CHAR@aux^0,w,c
  1684  000C32  ECA4  F006         	call	i1_ENVIA_NIBBLE
  1685  000C36  0012               	return		;funcret
  1686  000C38                     __end_ofi1_ENVIA_CHAR:
  1687                           	callstack 0
  1688                           
  1689 ;; *************** function i1_CURSOR_HOME *****************
  1690 ;; Defined at:
  1691 ;;		line 30 in file "LCD.c"
  1692 ;; Parameters:    Size  Location     Type
  1693 ;;		None
  1694 ;; Auto vars:     Size  Location     Type
  1695 ;;		None
  1696 ;; Return value:  Size  Location     Type
  1697 ;;                  1    wreg      void 
  1698 ;; Registers used:
  1699 ;;		wreg, status,2, status,0, cstack
  1700 ;; Tracked objects:
  1701 ;;		On entry : 0/0
  1702 ;;		On exit  : 0/0
  1703 ;;		Unchanged: 0/0
  1704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1705 ;;      Params:         0       0       0       0       0       0       0       0       0
  1706 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1707 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1708 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1709 ;;Total ram usage:        0 bytes
  1710 ;; Hardware stack levels used:    1
  1711 ;; Hardware stack levels required when called:    6
  1712 ;; This function calls:
  1713 ;;		i1_ENVIA_LCD_CMD
  1714 ;; This function is called by:
  1715 ;;		_Int1_ISR
  1716 ;; This function uses a non-reentrant model
  1717 ;;
  1718                           
  1719                           	psect	text15
  1720  000DB8                     __ptext15:
  1721                           	callstack 0
  1722  000DB8                     i1_CURSOR_HOME:
  1723                           	callstack 19
  1724  000DB8                     
  1725                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  1726  000DB8  0E02               	movlw	2
  1727  000DBA  EC1C  F006         	call	i1_ENVIA_LCD_CMD
  1728  000DBE  0012               	return		;funcret
  1729  000DC0                     __end_ofi1_CURSOR_HOME:
  1730                           	callstack 0
  1731                           
  1732 ;; *************** function i1_ENVIA_LCD_CMD *****************
  1733 ;; Defined at:
  1734 ;;		line 104 in file "LCD.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;  dato            1    wreg     unsigned char 
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;  dato            1   14[COMRAM] unsigned char 
  1739 ;;  aux             1   15[COMRAM] unsigned char 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      void 
  1742 ;; Registers used:
  1743 ;;		wreg, status,2, status,0, cstack
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1749 ;;      Params:         0       0       0       0       0       0       0       0       0
  1750 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1752 ;;      Totals:         2       0       0       0       0       0       0       0       0
  1753 ;;Total ram usage:        2 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; Hardware stack levels required when called:    5
  1756 ;; This function calls:
  1757 ;;		i1_ENVIA_NIBBLE
  1758 ;;		i1_LEER_LCD
  1759 ;; This function is called by:
  1760 ;;		i1_CURSOR_HOME
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           	psect	text16
  1765  000C38                     __ptext16:
  1766                           	callstack 0
  1767  000C38                     i1_ENVIA_LCD_CMD:
  1768                           	callstack 19
  1769                           
  1770                           ;incstack = 0
  1771                           ;i1ENVIA_LCD_CMD@dato stored from wreg
  1772  000C38  6E0F               	movwf	i1ENVIA_LCD_CMD@dato^0,c
  1773  000C3A                     
  1774                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  1775  000C3A  908C               	bcf	140,0,c	;volatile
  1776  000C3C                     
  1777                           ;LCD.c: 108:  LEER_LCD();
  1778  000C3C  EC72  F004         	call	i1_LEER_LCD	;wreg free
  1779  000C40                     
  1780                           ;LCD.c: 109:  TRISD = 0b00000000;
  1781  000C40  0E00               	movlw	0
  1782  000C42  6E95               	movwf	149,c	;volatile
  1783  000C44                     
  1784                           ;LCD.c: 111:         _delay(1200);
  1785  000C44  0EF0               	movlw	240
  1786  000C46                     i1u47_27:
  1787  000C46  D000               	nop2	
  1788  000C48  2EE8               	decfsz	wreg,f,c
  1789  000C4A  D7FD               	bra	i1u47_27
  1790  000C4C                     
  1791                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  1792  000C4C  928C               	bcf	140,1,c	;volatile
  1793  000C4E                     
  1794                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  1795  000C4E  948C               	bcf	140,2,c	;volatile
  1796  000C50                     
  1797                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  1798  000C50  908C               	bcf	140,0,c	;volatile
  1799  000C52                     
  1800                           ;LCD.c: 115:  aux = dato & 0xF0;
  1801  000C52  500F               	movf	i1ENVIA_LCD_CMD@dato^0,w,c
  1802  000C54  0BF0               	andlw	240
  1803  000C56  6E10               	movwf	i1ENVIA_LCD_CMD@aux^0,c
  1804  000C58                     
  1805                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  1806  000C58  5010               	movf	i1ENVIA_LCD_CMD@aux^0,w,c
  1807  000C5A  ECA4  F006         	call	i1_ENVIA_NIBBLE
  1808  000C5E                     
  1809                           ;LCD.c: 117:  aux = dato<<4;
  1810  000C5E  380F               	swapf	i1ENVIA_LCD_CMD@dato^0,w,c
  1811  000C60  0BF0               	andlw	240
  1812  000C62  6E10               	movwf	i1ENVIA_LCD_CMD@aux^0,c
  1813  000C64                     
  1814                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  1815  000C64  5010               	movf	i1ENVIA_LCD_CMD@aux^0,w,c
  1816  000C66  ECA4  F006         	call	i1_ENVIA_NIBBLE
  1817  000C6A  0012               	return		;funcret
  1818  000C6C                     __end_ofi1_ENVIA_LCD_CMD:
  1819                           	callstack 0
  1820                           
  1821 ;; *************** function i1_LEER_LCD *****************
  1822 ;; Defined at:
  1823 ;;		line 121 in file "LCD.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;		None
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  aux             1   13[COMRAM] unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1837 ;;      Params:         0       0       0       0       0       0       0       0       0
  1838 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1839 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1840 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1841 ;;Total ram usage:        1 bytes
  1842 ;; Hardware stack levels used:    1
  1843 ;; Hardware stack levels required when called:    4
  1844 ;; This function calls:
  1845 ;;		Nothing
  1846 ;; This function is called by:
  1847 ;;		i1_ENVIA_CHAR
  1848 ;;		i1_ENVIA_LCD_CMD
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852                           	psect	text17
  1853  0008E4                     __ptext17:
  1854                           	callstack 0
  1855  0008E4                     i1_LEER_LCD:
  1856                           	callstack 19
  1857  0008E4                     
  1858                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  1859  0008E4  0EF8               	movlw	248
  1860  0008E6  6E95               	movwf	149,c	;volatile
  1861  0008E8                     
  1862                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  1863  0008E8  908C               	bcf	140,0,c	;volatile
  1864  0008EA                     
  1865                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  1866  0008EA  828C               	bsf	140,1,c	;volatile
  1867  0008EC                     
  1868                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  1869  0008EC  848C               	bsf	140,2,c	;volatile
  1870  0008EE                     
  1871                           ;LCD.c: 128:         _delay(1200);
  1872  0008EE  0EF0               	movlw	240
  1873  0008F0                     i1u48_27:
  1874  0008F0  D000               	nop2	
  1875  0008F2  2EE8               	decfsz	wreg,f,c
  1876  0008F4  D7FD               	bra	i1u48_27
  1877  0008F6                     
  1878                           ;LCD.c: 130:  aux = PORTD;
  1879  0008F6  CF83 F00E          	movff	3971,i1LEER_LCD@aux	;volatile
  1880  0008FA                     
  1881                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  1882  0008FA  948C               	bcf	140,2,c	;volatile
  1883  0008FC                     
  1884                           ;LCD.c: 132:         _delay(1200);
  1885  0008FC  0EF0               	movlw	240
  1886  0008FE                     i1u49_27:
  1887  0008FE  D000               	nop2	
  1888  000900  2EE8               	decfsz	wreg,f,c
  1889  000902  D7FD               	bra	i1u49_27
  1890  000904                     
  1891                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  1892  000904  848C               	bsf	140,2,c	;volatile
  1893  000906                     
  1894                           ;LCD.c: 135:         _delay(1200);
  1895  000906  0EF0               	movlw	240
  1896  000908                     i1u50_27:
  1897  000908  D000               	nop2	
  1898  00090A  2EE8               	decfsz	wreg,f,c
  1899  00090C  D7FD               	bra	i1u50_27
  1900  00090E                     
  1901                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  1902  00090E  948C               	bcf	140,2,c	;volatile
  1903  000910                     i1l1302:
  1904                           
  1905                           ;LCD.c: 138:  aux = aux & 0x80;
  1906  000910  500E               	movf	i1LEER_LCD@aux^0,w,c
  1907  000912  0B80               	andlw	128
  1908  000914  6E0E               	movwf	i1LEER_LCD@aux^0,c
  1909                           
  1910                           ;LCD.c: 139:  while(aux == 0x80)
  1911  000916  EFA1  F004         	goto	i1l1316
  1912  00091A                     i1l125:
  1913                           
  1914                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  1915  00091A  848C               	bsf	140,2,c	;volatile
  1916  00091C                     
  1917                           ;LCD.c: 142:             _delay(1200);
  1918  00091C  0EF0               	movlw	240
  1919  00091E                     i1u51_27:
  1920  00091E  D000               	nop2	
  1921  000920  2EE8               	decfsz	wreg,f,c
  1922  000922  D7FD               	bra	i1u51_27
  1923  000924                     
  1924                           ;LCD.c: 143:             aux = PORTD;
  1925  000924  CF83 F00E          	movff	3971,i1LEER_LCD@aux	;volatile
  1926  000928                     
  1927                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  1928  000928  948C               	bcf	140,2,c	;volatile
  1929                           
  1930                           ;LCD.c: 145:             _delay(1200);
  1931  00092A  0EF0               	movlw	240
  1932  00092C                     i1u52_27:
  1933  00092C  D000               	nop2	
  1934  00092E  2EE8               	decfsz	wreg,f,c
  1935  000930  D7FD               	bra	i1u52_27
  1936  000932                     
  1937                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  1938  000932  848C               	bsf	140,2,c	;volatile
  1939                           
  1940                           ;LCD.c: 147:             _delay(1200);
  1941  000934  0EF0               	movlw	240
  1942  000936                     i1u53_27:
  1943  000936  D000               	nop2	
  1944  000938  2EE8               	decfsz	wreg,f,c
  1945  00093A  D7FD               	bra	i1u53_27
  1946  00093C                     
  1947                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  1948  00093C  948C               	bcf	140,2,c	;volatile
  1949  00093E  EF88  F004         	goto	i1l1302
  1950  000942                     i1l1316:
  1951                           
  1952                           ;LCD.c: 139:  while(aux == 0x80)
  1953  000942  0E80               	movlw	128
  1954  000944  180E               	xorwf	i1LEER_LCD@aux^0,w,c
  1955  000946  B4D8               	btfsc	status,2,c
  1956  000948  EFA8  F004         	goto	i1u21_21
  1957  00094C  EFAA  F004         	goto	i1u21_20
  1958  000950                     i1u21_21:
  1959  000950  EF8D  F004         	goto	i1l125
  1960  000954                     i1u21_20:
  1961  000954  0012               	return		;funcret
  1962  000956                     __end_ofi1_LEER_LCD:
  1963                           	callstack 0
  1964                           
  1965 ;; *************** function i1_ENVIA_NIBBLE *****************
  1966 ;; Defined at:
  1967 ;;		line 93 in file "LCD.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  dato            1    wreg     unsigned char 
  1970 ;; Auto vars:     Size  Location     Type
  1971 ;;  dato            1   13[COMRAM] unsigned char 
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, status,2, status,0
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1981 ;;      Params:         0       0       0       0       0       0       0       0       0
  1982 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1983 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1984 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1985 ;;Total ram usage:        1 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    4
  1988 ;; This function calls:
  1989 ;;		Nothing
  1990 ;; This function is called by:
  1991 ;;		i1_ENVIA_CHAR
  1992 ;;		i1_ENVIA_LCD_CMD
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text18
  1997  000D48                     __ptext18:
  1998                           	callstack 0
  1999  000D48                     i1_ENVIA_NIBBLE:
  2000                           	callstack 19
  2001                           
  2002                           ;incstack = 0
  2003                           ;i1ENVIA_NIBBLE@dato stored from wreg
  2004  000D48  6E0E               	movwf	i1ENVIA_NIBBLE@dato^0,c
  2005  000D4A                     
  2006                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  2007  000D4A  0E0F               	movlw	15
  2008  000D4C  168C               	andwf	140,f,c	;volatile
  2009                           
  2010                           ;LCD.c: 96:  dato &= 0xF0;
  2011  000D4E  0EF0               	movlw	240
  2012  000D50  160E               	andwf	i1ENVIA_NIBBLE@dato^0,f,c
  2013                           
  2014                           ;LCD.c: 97:  LATD|= dato;
  2015  000D52  500E               	movf	i1ENVIA_NIBBLE@dato^0,w,c	;volatile
  2016  000D54  128C               	iorwf	140,f,c	;volatile
  2017  000D56                     
  2018                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  2019  000D56  848C               	bsf	140,2,c	;volatile
  2020  000D58                     
  2021                           ;LCD.c: 100:         _delay(1200);
  2022  000D58  0EF0               	movlw	240
  2023  000D5A                     i1u54_27:
  2024  000D5A  D000               	nop2	
  2025  000D5C  2EE8               	decfsz	wreg,f,c
  2026  000D5E  D7FD               	bra	i1u54_27
  2027  000D60                     
  2028                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  2029  000D60  948C               	bcf	140,2,c	;volatile
  2030  000D62  0012               	return		;funcret
  2031  000D64                     __end_ofi1_ENVIA_NIBBLE:
  2032                           	callstack 0
  2033                           
  2034 ;; *************** function _Int0_ISR *****************
  2035 ;; Defined at:
  2036 ;;		line 62 in file "maincode.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;		None
  2039 ;; Auto vars:     Size  Location     Type
  2040 ;;		None
  2041 ;; Return value:  Size  Location     Type
  2042 ;;                  1    wreg      void 
  2043 ;; Registers used:
  2044 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2045 ;; Tracked objects:
  2046 ;;		On entry : 0/0
  2047 ;;		On exit  : 0/0
  2048 ;;		Unchanged: 0/0
  2049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2050 ;;      Params:         0       0       0       0       0       0       0       0       0
  2051 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2052 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2053 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2054 ;;Total ram usage:        4 bytes
  2055 ;; Hardware stack levels used:    1
  2056 ;; Hardware stack levels required when called:    3
  2057 ;; This function calls:
  2058 ;;		i2_CURSOR_HOME
  2059 ;;		i2_ESCRIBE_MENSAJE
  2060 ;; This function is called by:
  2061 ;;		Interrupt level 2
  2062 ;; This function uses a non-reentrant model
  2063 ;;
  2064                           
  2065                           	psect	intcode
  2066  000008                     __pintcode:
  2067                           	callstack 0
  2068  000008                     _Int0_ISR:
  2069                           	callstack 19
  2070                           
  2071                           ;incstack = 0
  2072  000008  8229               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2073  00000A  EDE4  F004         	call	int_func,f	;refresh shadow registers
  2074                           
  2075                           	psect	intcode_body
  2076  0009C8                     __pintcode_body:
  2077                           	callstack 19
  2078  0009C8                     int_func:
  2079                           	callstack 19
  2080  0009C8  0006               	pop		; remove dummy address from shadow register refresh
  2081  0009CA  CFF6 F00A          	movff	tblptrl,??_Int0_ISR
  2082  0009CE  CFF7 F00B          	movff	tblptrh,??_Int0_ISR+1
  2083  0009D2  CFF8 F00C          	movff	tblptru,??_Int0_ISR+2
  2084  0009D6  CFF5 F00D          	movff	tablat,??_Int0_ISR+3
  2085  0009DA                     
  2086                           ;maincode.c: 64:     if (INTCON2bits.INTEDG0 == 1) {
  2087  0009DA  ACF1               	btfss	241,6,c	;volatile
  2088  0009DC  EFF2  F004         	goto	i2u26_41
  2089  0009E0  EFF4  F004         	goto	i2u26_40
  2090  0009E4                     i2u26_41:
  2091  0009E4  EF01  F005         	goto	i2l1494
  2092  0009E8                     i2u26_40:
  2093  0009E8                     
  2094                           ;maincode.c: 65:         CURSOR_HOME();
  2095  0009E8  ECE0  F006         	call	i2_CURSOR_HOME	;wreg free
  2096  0009EC                     
  2097                           ;maincode.c: 66:         ESCRIBE_MENSAJE("BTN0 presionado",15);
  2098  0009EC  0E31               	movlw	low STR_2
  2099  0009EE  6E04               	movwf	i2ESCRIBE_MENSAJE@cadena^0,c
  2100  0009F0  0E08               	movlw	high STR_2
  2101  0009F2  6E05               	movwf	(i2ESCRIBE_MENSAJE@cadena+1)^0,c
  2102  0009F4  0E0F               	movlw	15
  2103  0009F6  6E06               	movwf	i2ESCRIBE_MENSAJE@tam^0,c
  2104  0009F8  ECAF  F005         	call	i2_ESCRIBE_MENSAJE	;wreg free
  2105  0009FC                     
  2106                           ;maincode.c: 67:         INTCON2bits.INTEDG0 = 0;
  2107  0009FC  9CF1               	bcf	241,6,c	;volatile
  2108                           
  2109                           ;maincode.c: 68:     }
  2110  0009FE  EF0C  F005         	goto	i2l1500
  2111  000A02                     i2l1494:
  2112                           
  2113                           ;maincode.c: 70:         CURSOR_HOME();
  2114  000A02  ECE0  F006         	call	i2_CURSOR_HOME	;wreg free
  2115  000A06                     
  2116                           ;maincode.c: 71:         ESCRIBE_MENSAJE("BTN0 soltado   ",15);
  2117  000A06  0E01               	movlw	low STR_3
  2118  000A08  6E04               	movwf	i2ESCRIBE_MENSAJE@cadena^0,c
  2119  000A0A  0E08               	movlw	high STR_3
  2120  000A0C  6E05               	movwf	(i2ESCRIBE_MENSAJE@cadena+1)^0,c
  2121  000A0E  0E0F               	movlw	15
  2122  000A10  6E06               	movwf	i2ESCRIBE_MENSAJE@tam^0,c
  2123  000A12  ECAF  F005         	call	i2_ESCRIBE_MENSAJE	;wreg free
  2124  000A16                     
  2125                           ;maincode.c: 72:         INTCON2bits.INTEDG0 = 1;
  2126  000A16  8CF1               	bsf	241,6,c	;volatile
  2127  000A18                     i2l1500:
  2128                           
  2129                           ;maincode.c: 74:     INTCONbits.INT0IF = 0;
  2130  000A18  92F2               	bcf	242,1,c	;volatile
  2131  000A1A  C00D  FFF5         	movff	??_Int0_ISR+3,tablat
  2132  000A1E  C00C  FFF8         	movff	??_Int0_ISR+2,tblptru
  2133  000A22  C00B  FFF7         	movff	??_Int0_ISR+1,tblptrh
  2134  000A26  C00A  FFF6         	movff	??_Int0_ISR,tblptrl
  2135  000A2A  9229               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2136  000A2C  0011               	retfie		f
  2137  000A2E                     __end_of_Int0_ISR:
  2138                           	callstack 0
  2139                           
  2140 ;; *************** function i2_ESCRIBE_MENSAJE *****************
  2141 ;; Defined at:
  2142 ;;		line 41 in file "LCD.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;  cadena          2    3[COMRAM] PTR const unsigned char 
  2145 ;;		 -> STR_7(16), STR_6(16), STR_5(16), STR_4(16), 
  2146 ;;		 -> STR_3(16), STR_2(16), STR_1(15), 
  2147 ;;  tam             1    5[COMRAM] unsigned char 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  i               1    8[COMRAM] unsigned char 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2159 ;;      Params:         3       0       0       0       0       0       0       0       0
  2160 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2161 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2162 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2163 ;;Total ram usage:        6 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    2
  2166 ;; This function calls:
  2167 ;;		i2_ENVIA_CHAR
  2168 ;; This function is called by:
  2169 ;;		_Int0_ISR
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text20
  2174  000B5E                     __ptext20:
  2175                           	callstack 0
  2176  000B5E                     i2_ESCRIBE_MENSAJE:
  2177                           	callstack 19
  2178  000B5E                     
  2179                           ;LCD.c: 41: void ESCRIBE_MENSAJE(const char *cadena,unsigned char tam);LCD.c: 42: {;LCD.
      +                          c: 43:  unsigned char i = 0;
  2180  000B5E  0E00               	movlw	0
  2181  000B60  6E09               	movwf	i2ESCRIBE_MENSAJE@i^0,c
  2182                           
  2183                           ;LCD.c: 44:  for(i = 0; i<tam; i++)
  2184  000B62  0E00               	movlw	0
  2185  000B64  6E09               	movwf	i2ESCRIBE_MENSAJE@i^0,c
  2186  000B66  EFC4  F005         	goto	i2l1470
  2187  000B6A                     i2l1466:
  2188                           
  2189                           ;LCD.c: 45:  {;LCD.c: 46:   ENVIA_CHAR(cadena[i]);
  2190  000B6A  5009               	movf	i2ESCRIBE_MENSAJE@i^0,w,c
  2191  000B6C  2404               	addwf	i2ESCRIBE_MENSAJE@cadena^0,w,c
  2192  000B6E  6E07               	movwf	??i2_ESCRIBE_MENSAJE^0,c
  2193  000B70  0E00               	movlw	0
  2194  000B72  2005               	addwfc	(i2ESCRIBE_MENSAJE@cadena+1)^0,w,c
  2195  000B74  6E08               	movwf	(??i2_ESCRIBE_MENSAJE+1)^0,c
  2196  000B76  C007  FFF6         	movff	??i2_ESCRIBE_MENSAJE,tblptrl
  2197  000B7A  C008  FFF7         	movff	??i2_ESCRIBE_MENSAJE+1,tblptrh
  2198  000B7E                     	if	0	;tblptru may be non-zero
  2199  000B7E                     	endif
  2200  000B7E                     	if	0	;tblptru may be non-zero
  2201  000B7E                     	endif
  2202  000B7E  0008               	tblrd		*
  2203  000B80  50F5               	movf	tablat,w,c
  2204  000B82  EC36  F006         	call	i2_ENVIA_CHAR
  2205  000B86                     
  2206                           ;LCD.c: 47:  }
  2207  000B86  2A09               	incf	i2ESCRIBE_MENSAJE@i^0,f,c
  2208  000B88                     i2l1470:
  2209  000B88  5006               	movf	i2ESCRIBE_MENSAJE@tam^0,w,c
  2210  000B8A  5C09               	subwf	i2ESCRIBE_MENSAJE@i^0,w,c
  2211  000B8C  A0D8               	btfss	status,0,c
  2212  000B8E  EFCB  F005         	goto	i2u25_41
  2213  000B92  EFCD  F005         	goto	i2u25_40
  2214  000B96                     i2u25_41:
  2215  000B96  EFB5  F005         	goto	i2l1466
  2216  000B9A                     i2u25_40:
  2217  000B9A  0012               	return		;funcret
  2218  000B9C                     __end_ofi2_ESCRIBE_MENSAJE:
  2219                           	callstack 0
  2220                           
  2221 ;; *************** function i2_ENVIA_CHAR *****************
  2222 ;; Defined at:
  2223 ;;		line 50 in file "LCD.c"
  2224 ;; Parameters:    Size  Location     Type
  2225 ;;  dato            1    wreg     unsigned char 
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;  dato            1    1[COMRAM] unsigned char 
  2228 ;;  aux             1    2[COMRAM] unsigned char 
  2229 ;; Return value:  Size  Location     Type
  2230 ;;                  1    wreg      void 
  2231 ;; Registers used:
  2232 ;;		wreg, status,2, status,0, cstack
  2233 ;; Tracked objects:
  2234 ;;		On entry : 0/0
  2235 ;;		On exit  : 0/0
  2236 ;;		Unchanged: 0/0
  2237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2238 ;;      Params:         0       0       0       0       0       0       0       0       0
  2239 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2240 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2241 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2242 ;;Total ram usage:        2 bytes
  2243 ;; Hardware stack levels used:    1
  2244 ;; Hardware stack levels required when called:    1
  2245 ;; This function calls:
  2246 ;;		i2_ENVIA_NIBBLE
  2247 ;;		i2_LEER_LCD
  2248 ;; This function is called by:
  2249 ;;		i2_ESCRIBE_MENSAJE
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text21
  2254  000C6C                     __ptext21:
  2255                           	callstack 0
  2256  000C6C                     i2_ENVIA_CHAR:
  2257                           	callstack 19
  2258                           
  2259                           ;incstack = 0
  2260                           ;i2ENVIA_CHAR@dato stored from wreg
  2261  000C6C  6E02               	movwf	i2ENVIA_CHAR@dato^0,c
  2262  000C6E                     
  2263                           ;LCD.c: 50: void ENVIA_CHAR(unsigned char dato);LCD.c: 51: {;LCD.c: 52:  unsigned char a
      +                          ux;;LCD.c: 53:  LATDbits.LATD0 = 1;
  2264  000C6E  808C               	bsf	140,0,c	;volatile
  2265  000C70                     
  2266                           ;LCD.c: 54:  LEER_LCD();
  2267  000C70  ECAB  F004         	call	i2_LEER_LCD	;wreg free
  2268  000C74                     
  2269                           ;LCD.c: 55:  TRISD = 0x00;
  2270  000C74  0E00               	movlw	0
  2271  000C76  6E95               	movwf	149,c	;volatile
  2272  000C78                     
  2273                           ;LCD.c: 56:         _delay(1200);
  2274  000C78  0EF0               	movlw	240
  2275  000C7A                     i2u55_47:
  2276  000C7A  D000               	nop2	
  2277  000C7C  2EE8               	decfsz	wreg,f,c
  2278  000C7E  D7FD               	bra	i2u55_47
  2279  000C80                     
  2280                           ;LCD.c: 58:  LATDbits.LATD1 = 0;
  2281  000C80  928C               	bcf	140,1,c	;volatile
  2282  000C82                     
  2283                           ;LCD.c: 59:  LATDbits.LATD2 = 0;
  2284  000C82  948C               	bcf	140,2,c	;volatile
  2285  000C84                     
  2286                           ;LCD.c: 60:  LATDbits.LATD0 = 1;
  2287  000C84  808C               	bsf	140,0,c	;volatile
  2288  000C86                     
  2289                           ;LCD.c: 61:  aux = dato & 0xF0;
  2290  000C86  5002               	movf	i2ENVIA_CHAR@dato^0,w,c
  2291  000C88  0BF0               	andlw	240
  2292  000C8A  6E03               	movwf	i2ENVIA_CHAR@aux^0,c
  2293  000C8C                     
  2294                           ;LCD.c: 62:  ENVIA_NIBBLE(aux);
  2295  000C8C  5003               	movf	i2ENVIA_CHAR@aux^0,w,c
  2296  000C8E  ECB2  F006         	call	i2_ENVIA_NIBBLE
  2297  000C92                     
  2298                           ;LCD.c: 63:  aux = dato << 4;
  2299  000C92  3802               	swapf	i2ENVIA_CHAR@dato^0,w,c
  2300  000C94  0BF0               	andlw	240
  2301  000C96  6E03               	movwf	i2ENVIA_CHAR@aux^0,c
  2302  000C98                     
  2303                           ;LCD.c: 64:  ENVIA_NIBBLE(aux);
  2304  000C98  5003               	movf	i2ENVIA_CHAR@aux^0,w,c
  2305  000C9A  ECB2  F006         	call	i2_ENVIA_NIBBLE
  2306  000C9E  0012               	return		;funcret
  2307  000CA0                     __end_ofi2_ENVIA_CHAR:
  2308                           	callstack 0
  2309                           
  2310 ;; *************** function i2_CURSOR_HOME *****************
  2311 ;; Defined at:
  2312 ;;		line 30 in file "LCD.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;		None
  2315 ;; Auto vars:     Size  Location     Type
  2316 ;;		None
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      void 
  2319 ;; Registers used:
  2320 ;;		wreg, status,2, status,0, cstack
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2326 ;;      Params:         0       0       0       0       0       0       0       0       0
  2327 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2328 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2329 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2330 ;;Total ram usage:        0 bytes
  2331 ;; Hardware stack levels used:    1
  2332 ;; Hardware stack levels required when called:    2
  2333 ;; This function calls:
  2334 ;;		i2_ENVIA_LCD_CMD
  2335 ;; This function is called by:
  2336 ;;		_Int0_ISR
  2337 ;; This function uses a non-reentrant model
  2338 ;;
  2339                           
  2340                           	psect	text22
  2341  000DC0                     __ptext22:
  2342                           	callstack 0
  2343  000DC0                     i2_CURSOR_HOME:
  2344                           	callstack 19
  2345  000DC0                     
  2346                           ;LCD.c: 32:  ENVIA_LCD_CMD(0x02);
  2347  000DC0  0E02               	movlw	2
  2348  000DC2  EC50  F006         	call	i2_ENVIA_LCD_CMD
  2349  000DC6  0012               	return		;funcret
  2350  000DC8                     __end_ofi2_CURSOR_HOME:
  2351                           	callstack 0
  2352                           
  2353 ;; *************** function i2_ENVIA_LCD_CMD *****************
  2354 ;; Defined at:
  2355 ;;		line 104 in file "LCD.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  dato            1    wreg     unsigned char 
  2358 ;; Auto vars:     Size  Location     Type
  2359 ;;  dato            1    1[COMRAM] unsigned char 
  2360 ;;  aux             1    2[COMRAM] unsigned char 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      void 
  2363 ;; Registers used:
  2364 ;;		wreg, status,2, status,0, cstack
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2370 ;;      Params:         0       0       0       0       0       0       0       0       0
  2371 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2372 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2373 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2374 ;;Total ram usage:        2 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    1
  2377 ;; This function calls:
  2378 ;;		i2_ENVIA_NIBBLE
  2379 ;;		i2_LEER_LCD
  2380 ;; This function is called by:
  2381 ;;		i2_CURSOR_HOME
  2382 ;; This function uses a non-reentrant model
  2383 ;;
  2384                           
  2385                           	psect	text23
  2386  000CA0                     __ptext23:
  2387                           	callstack 0
  2388  000CA0                     i2_ENVIA_LCD_CMD:
  2389                           	callstack 19
  2390                           
  2391                           ;incstack = 0
  2392                           ;i2ENVIA_LCD_CMD@dato stored from wreg
  2393  000CA0  6E02               	movwf	i2ENVIA_LCD_CMD@dato^0,c
  2394  000CA2                     
  2395                           ;LCD.c: 104: void ENVIA_LCD_CMD(unsigned char dato);LCD.c: 105: {;LCD.c: 106:  unsigned 
      +                          char aux;;LCD.c: 107:  LATDbits.LATD0 = 0;
  2396  000CA2  908C               	bcf	140,0,c	;volatile
  2397  000CA4                     
  2398                           ;LCD.c: 108:  LEER_LCD();
  2399  000CA4  ECAB  F004         	call	i2_LEER_LCD	;wreg free
  2400  000CA8                     
  2401                           ;LCD.c: 109:  TRISD = 0b00000000;
  2402  000CA8  0E00               	movlw	0
  2403  000CAA  6E95               	movwf	149,c	;volatile
  2404  000CAC                     
  2405                           ;LCD.c: 111:         _delay(1200);
  2406  000CAC  0EF0               	movlw	240
  2407  000CAE                     i2u56_47:
  2408  000CAE  D000               	nop2	
  2409  000CB0  2EE8               	decfsz	wreg,f,c
  2410  000CB2  D7FD               	bra	i2u56_47
  2411  000CB4                     
  2412                           ;LCD.c: 112:         LATDbits.LATD1 = 0;
  2413  000CB4  928C               	bcf	140,1,c	;volatile
  2414  000CB6                     
  2415                           ;LCD.c: 113:  LATDbits.LATD2 = 0;
  2416  000CB6  948C               	bcf	140,2,c	;volatile
  2417  000CB8                     
  2418                           ;LCD.c: 114:  LATDbits.LATD0 = 0;
  2419  000CB8  908C               	bcf	140,0,c	;volatile
  2420  000CBA                     
  2421                           ;LCD.c: 115:  aux = dato & 0xF0;
  2422  000CBA  5002               	movf	i2ENVIA_LCD_CMD@dato^0,w,c
  2423  000CBC  0BF0               	andlw	240
  2424  000CBE  6E03               	movwf	i2ENVIA_LCD_CMD@aux^0,c
  2425  000CC0                     
  2426                           ;LCD.c: 116:  ENVIA_NIBBLE(aux);
  2427  000CC0  5003               	movf	i2ENVIA_LCD_CMD@aux^0,w,c
  2428  000CC2  ECB2  F006         	call	i2_ENVIA_NIBBLE
  2429  000CC6                     
  2430                           ;LCD.c: 117:  aux = dato<<4;
  2431  000CC6  3802               	swapf	i2ENVIA_LCD_CMD@dato^0,w,c
  2432  000CC8  0BF0               	andlw	240
  2433  000CCA  6E03               	movwf	i2ENVIA_LCD_CMD@aux^0,c
  2434  000CCC                     
  2435                           ;LCD.c: 118:  ENVIA_NIBBLE(aux);
  2436  000CCC  5003               	movf	i2ENVIA_LCD_CMD@aux^0,w,c
  2437  000CCE  ECB2  F006         	call	i2_ENVIA_NIBBLE
  2438  000CD2  0012               	return		;funcret
  2439  000CD4                     __end_ofi2_ENVIA_LCD_CMD:
  2440                           	callstack 0
  2441                           
  2442 ;; *************** function i2_LEER_LCD *****************
  2443 ;; Defined at:
  2444 ;;		line 121 in file "LCD.c"
  2445 ;; Parameters:    Size  Location     Type
  2446 ;;		None
  2447 ;; Auto vars:     Size  Location     Type
  2448 ;;  aux             1    0[COMRAM] unsigned char 
  2449 ;; Return value:  Size  Location     Type
  2450 ;;                  1    wreg      void 
  2451 ;; Registers used:
  2452 ;;		wreg, status,2, status,0
  2453 ;; Tracked objects:
  2454 ;;		On entry : 0/0
  2455 ;;		On exit  : 0/0
  2456 ;;		Unchanged: 0/0
  2457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2458 ;;      Params:         0       0       0       0       0       0       0       0       0
  2459 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2460 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2461 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2462 ;;Total ram usage:        1 bytes
  2463 ;; Hardware stack levels used:    1
  2464 ;; This function calls:
  2465 ;;		Nothing
  2466 ;; This function is called by:
  2467 ;;		i2_ENVIA_CHAR
  2468 ;;		i2_ENVIA_LCD_CMD
  2469 ;; This function uses a non-reentrant model
  2470 ;;
  2471                           
  2472                           	psect	text24
  2473  000956                     __ptext24:
  2474                           	callstack 0
  2475  000956                     i2_LEER_LCD:
  2476                           	callstack 19
  2477  000956                     
  2478                           ;LCD.c: 123:  unsigned char aux;;LCD.c: 124:  TRISD = 0xF8;
  2479  000956  0EF8               	movlw	248
  2480  000958  6E95               	movwf	149,c	;volatile
  2481  00095A                     
  2482                           ;LCD.c: 125:  LATDbits.LATD0 = 0;
  2483  00095A  908C               	bcf	140,0,c	;volatile
  2484  00095C                     
  2485                           ;LCD.c: 126:  LATDbits.LATD1 = 1;
  2486  00095C  828C               	bsf	140,1,c	;volatile
  2487  00095E                     
  2488                           ;LCD.c: 127:  LATDbits.LATD2 = 1;
  2489  00095E  848C               	bsf	140,2,c	;volatile
  2490  000960                     
  2491                           ;LCD.c: 128:         _delay(1200);
  2492  000960  0EF0               	movlw	240
  2493  000962                     i2u57_47:
  2494  000962  D000               	nop2	
  2495  000964  2EE8               	decfsz	wreg,f,c
  2496  000966  D7FD               	bra	i2u57_47
  2497  000968                     
  2498                           ;LCD.c: 130:  aux = PORTD;
  2499  000968  CF83 F001          	movff	3971,i2LEER_LCD@aux	;volatile
  2500  00096C                     
  2501                           ;LCD.c: 131:  LATDbits.LATD2 = 0;
  2502  00096C  948C               	bcf	140,2,c	;volatile
  2503  00096E                     
  2504                           ;LCD.c: 132:         _delay(1200);
  2505  00096E  0EF0               	movlw	240
  2506  000970                     i2u58_47:
  2507  000970  D000               	nop2	
  2508  000972  2EE8               	decfsz	wreg,f,c
  2509  000974  D7FD               	bra	i2u58_47
  2510  000976                     
  2511                           ;LCD.c: 134:  LATDbits.LATD2 = 1;
  2512  000976  848C               	bsf	140,2,c	;volatile
  2513  000978                     
  2514                           ;LCD.c: 135:         _delay(1200);
  2515  000978  0EF0               	movlw	240
  2516  00097A                     i2u59_47:
  2517  00097A  D000               	nop2	
  2518  00097C  2EE8               	decfsz	wreg,f,c
  2519  00097E  D7FD               	bra	i2u59_47
  2520  000980                     
  2521                           ;LCD.c: 137:  LATDbits.LATD2 = 0;
  2522  000980  948C               	bcf	140,2,c	;volatile
  2523  000982                     i2l1340:
  2524                           
  2525                           ;LCD.c: 138:  aux = aux & 0x80;
  2526  000982  5001               	movf	i2LEER_LCD@aux^0,w,c
  2527  000984  0B80               	andlw	128
  2528  000986  6E01               	movwf	i2LEER_LCD@aux^0,c
  2529                           
  2530                           ;LCD.c: 139:  while(aux == 0x80)
  2531  000988  EFDA  F004         	goto	i2l1354
  2532  00098C                     i2l125:
  2533                           
  2534                           ;LCD.c: 140:         {;LCD.c: 141:             LATDbits.LATD2 = 1;
  2535  00098C  848C               	bsf	140,2,c	;volatile
  2536  00098E                     
  2537                           ;LCD.c: 142:             _delay(1200);
  2538  00098E  0EF0               	movlw	240
  2539  000990                     i2u60_47:
  2540  000990  D000               	nop2	
  2541  000992  2EE8               	decfsz	wreg,f,c
  2542  000994  D7FD               	bra	i2u60_47
  2543  000996                     
  2544                           ;LCD.c: 143:             aux = PORTD;
  2545  000996  CF83 F001          	movff	3971,i2LEER_LCD@aux	;volatile
  2546  00099A                     
  2547                           ;LCD.c: 144:             LATDbits.LATD2 = 0;
  2548  00099A  948C               	bcf	140,2,c	;volatile
  2549                           
  2550                           ;LCD.c: 145:             _delay(1200);
  2551  00099C  0EF0               	movlw	240
  2552  00099E                     i2u61_47:
  2553  00099E  D000               	nop2	
  2554  0009A0  2EE8               	decfsz	wreg,f,c
  2555  0009A2  D7FD               	bra	i2u61_47
  2556  0009A4                     
  2557                           ;LCD.c: 146:             LATDbits.LATD2 = 1;
  2558  0009A4  848C               	bsf	140,2,c	;volatile
  2559                           
  2560                           ;LCD.c: 147:             _delay(1200);
  2561  0009A6  0EF0               	movlw	240
  2562  0009A8                     i2u62_47:
  2563  0009A8  D000               	nop2	
  2564  0009AA  2EE8               	decfsz	wreg,f,c
  2565  0009AC  D7FD               	bra	i2u62_47
  2566  0009AE                     
  2567                           ;LCD.c: 148:             LATDbits.LATD2 = 0;
  2568  0009AE  948C               	bcf	140,2,c	;volatile
  2569  0009B0  EFC1  F004         	goto	i2l1340
  2570  0009B4                     i2l1354:
  2571                           
  2572                           ;LCD.c: 139:  while(aux == 0x80)
  2573  0009B4  0E80               	movlw	128
  2574  0009B6  1801               	xorwf	i2LEER_LCD@aux^0,w,c
  2575  0009B8  B4D8               	btfsc	status,2,c
  2576  0009BA  EFE1  F004         	goto	i2u22_41
  2577  0009BE  EFE3  F004         	goto	i2u22_40
  2578  0009C2                     i2u22_41:
  2579  0009C2  EFC6  F004         	goto	i2l125
  2580  0009C6                     i2u22_40:
  2581  0009C6  0012               	return		;funcret
  2582  0009C8                     __end_ofi2_LEER_LCD:
  2583                           	callstack 0
  2584                           
  2585 ;; *************** function i2_ENVIA_NIBBLE *****************
  2586 ;; Defined at:
  2587 ;;		line 93 in file "LCD.c"
  2588 ;; Parameters:    Size  Location     Type
  2589 ;;  dato            1    wreg     unsigned char 
  2590 ;; Auto vars:     Size  Location     Type
  2591 ;;  dato            1    0[COMRAM] unsigned char 
  2592 ;; Return value:  Size  Location     Type
  2593 ;;                  1    wreg      void 
  2594 ;; Registers used:
  2595 ;;		wreg, status,2, status,0
  2596 ;; Tracked objects:
  2597 ;;		On entry : 0/0
  2598 ;;		On exit  : 0/0
  2599 ;;		Unchanged: 0/0
  2600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2601 ;;      Params:         0       0       0       0       0       0       0       0       0
  2602 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2603 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2604 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2605 ;;Total ram usage:        1 bytes
  2606 ;; Hardware stack levels used:    1
  2607 ;; This function calls:
  2608 ;;		Nothing
  2609 ;; This function is called by:
  2610 ;;		i2_ENVIA_CHAR
  2611 ;;		i2_ENVIA_LCD_CMD
  2612 ;; This function uses a non-reentrant model
  2613 ;;
  2614                           
  2615                           	psect	text25
  2616  000D64                     __ptext25:
  2617                           	callstack 0
  2618  000D64                     i2_ENVIA_NIBBLE:
  2619                           	callstack 19
  2620                           
  2621                           ;incstack = 0
  2622                           ;i2ENVIA_NIBBLE@dato stored from wreg
  2623  000D64  6E01               	movwf	i2ENVIA_NIBBLE@dato^0,c
  2624  000D66                     
  2625                           ;LCD.c: 93: void ENVIA_NIBBLE(unsigned char dato);LCD.c: 94: {;LCD.c: 95:  LATD &= 0x0F;
  2626  000D66  0E0F               	movlw	15
  2627  000D68  168C               	andwf	140,f,c	;volatile
  2628                           
  2629                           ;LCD.c: 96:  dato &= 0xF0;
  2630  000D6A  0EF0               	movlw	240
  2631  000D6C  1601               	andwf	i2ENVIA_NIBBLE@dato^0,f,c
  2632                           
  2633                           ;LCD.c: 97:  LATD|= dato;
  2634  000D6E  5001               	movf	i2ENVIA_NIBBLE@dato^0,w,c	;volatile
  2635  000D70  128C               	iorwf	140,f,c	;volatile
  2636  000D72                     
  2637                           ;LCD.c: 98:  LATDbits.LATD2 = 1;
  2638  000D72  848C               	bsf	140,2,c	;volatile
  2639  000D74                     
  2640                           ;LCD.c: 100:         _delay(1200);
  2641  000D74  0EF0               	movlw	240
  2642  000D76                     i2u63_47:
  2643  000D76  D000               	nop2	
  2644  000D78  2EE8               	decfsz	wreg,f,c
  2645  000D7A  D7FD               	bra	i2u63_47
  2646  000D7C                     
  2647                           ;LCD.c: 101:  LATDbits.LATD2 = 0;
  2648  000D7C  948C               	bcf	140,2,c	;volatile
  2649  000D7E  0012               	return		;funcret
  2650  000D80                     __end_ofi2_ENVIA_NIBBLE:
  2651                           	callstack 0
  2652                           
  2653                           	psect	rparam
  2654  0000                     
  2655                           	psect	temp
  2656  000029                     btemp:
  2657                           	callstack 0
  2658  000029                     	ds	1
  2659  0000                     int$flags	set	btemp
  2660  0000                     wtemp8	set	btemp+1
  2661  0000                     ttemp5	set	btemp+1
  2662  0000                     ttemp6	set	btemp+4
  2663  0000                     ttemp7	set	btemp+8
  2664                           
  2665                           	psect	idloc
  2666                           
  2667                           ;Config register IDLOC0 @ 0x200000
  2668                           ;	unspecified, using default values
  2669  200000                     	org	2097152
  2670  200000  FF                 	db	255
  2671                           
  2672                           ;Config register IDLOC1 @ 0x200001
  2673                           ;	unspecified, using default values
  2674  200001                     	org	2097153
  2675  200001  FF                 	db	255
  2676                           
  2677                           ;Config register IDLOC2 @ 0x200002
  2678                           ;	unspecified, using default values
  2679  200002                     	org	2097154
  2680  200002  FF                 	db	255
  2681                           
  2682                           ;Config register IDLOC3 @ 0x200003
  2683                           ;	unspecified, using default values
  2684  200003                     	org	2097155
  2685  200003  FF                 	db	255
  2686                           
  2687                           ;Config register IDLOC4 @ 0x200004
  2688                           ;	unspecified, using default values
  2689  200004                     	org	2097156
  2690  200004  FF                 	db	255
  2691                           
  2692                           ;Config register IDLOC5 @ 0x200005
  2693                           ;	unspecified, using default values
  2694  200005                     	org	2097157
  2695  200005  FF                 	db	255
  2696                           
  2697                           ;Config register IDLOC6 @ 0x200006
  2698                           ;	unspecified, using default values
  2699  200006                     	org	2097158
  2700  200006  FF                 	db	255
  2701                           
  2702                           ;Config register IDLOC7 @ 0x200007
  2703                           ;	unspecified, using default values
  2704  200007                     	org	2097159
  2705  200007  FF                 	db	255
  2706                           
  2707                           	psect	config
  2708                           
  2709                           ;Config register CONFIG1L @ 0x300000
  2710                           ;	PLL Prescaler Selection bits
  2711                           ;	PLLDIV = 1, No prescale (4 MHz oscillator input drives PLL directly)
  2712                           ;	System Clock Postscaler Selection bits
  2713                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  2714                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  2715                           ;	USBDIV = 0x0, unprogrammed default
  2716  300000                     	org	3145728
  2717  300000  00                 	db	0
  2718                           
  2719                           ;Config register CONFIG1H @ 0x300001
  2720                           ;	Oscillator Selection bits
  2721                           ;	FOSC = XTPLL_XT, XT oscillator, PLL enabled (XTPLL)
  2722                           ;	Fail-Safe Clock Monitor Enable bit
  2723                           ;	FCMEN = 0x0, unprogrammed default
  2724                           ;	Internal/External Oscillator Switchover bit
  2725                           ;	IESO = 0x0, unprogrammed default
  2726  300001                     	org	3145729
  2727  300001  02                 	db	2
  2728                           
  2729                           ;Config register CONFIG2L @ 0x300002
  2730                           ;	Power-up Timer Enable bit
  2731                           ;	PWRT = ON, PWRT enabled
  2732                           ;	Brown-out Reset Enable bits
  2733                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  2734                           ;	Brown-out Reset Voltage bits
  2735                           ;	BORV = 3, Minimum setting 2.05V
  2736                           ;	USB Voltage Regulator Enable bit
  2737                           ;	VREGEN = 0x0, unprogrammed default
  2738  300002                     	org	3145730
  2739  300002  18                 	db	24
  2740                           
  2741                           ;Config register CONFIG2H @ 0x300003
  2742                           ;	Watchdog Timer Enable bit
  2743                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2744                           ;	Watchdog Timer Postscale Select bits
  2745                           ;	WDTPS = 32768, 1:32768
  2746  300003                     	org	3145731
  2747  300003  1E                 	db	30
  2748                           
  2749                           ; Padding undefined space
  2750  300004                     	org	3145732
  2751  300004  FF                 	db	255
  2752                           
  2753                           ;Config register CONFIG3H @ 0x300005
  2754                           ;	CCP2 MUX bit
  2755                           ;	CCP2MX = ON, CCP2 input/output is multiplexed with RC1
  2756                           ;	PORTB A/D Enable bit
  2757                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  2758                           ;	Low-Power Timer 1 Oscillator Enable bit
  2759                           ;	LPT1OSC = 0x0, unprogrammed default
  2760                           ;	MCLR Pin Enable bit
  2761                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  2762  300005                     	org	3145733
  2763  300005  81                 	db	129
  2764                           
  2765                           ;Config register CONFIG4L @ 0x300006
  2766                           ;	Stack Full/Underflow Reset Enable bit
  2767                           ;	STVREN = 0x1, unprogrammed default
  2768                           ;	Single-Supply ICSP Enable bit
  2769                           ;	LVP = OFF, Single-Supply ICSP disabled
  2770                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  2771                           ;	ICPRT = 0x0, unprogrammed default
  2772                           ;	Extended Instruction Set Enable bit
  2773                           ;	XINST = 0x0, unprogrammed default
  2774                           ;	Background Debugger Enable bit
  2775                           ;	DEBUG = 0x1, unprogrammed default
  2776  300006                     	org	3145734
  2777  300006  81                 	db	129
  2778                           
  2779                           ; Padding undefined space
  2780  300007                     	org	3145735
  2781  300007  FF                 	db	255
  2782                           
  2783                           ;Config register CONFIG5L @ 0x300008
  2784                           ;	unspecified, using default values
  2785                           ;	Code Protection bit
  2786                           ;	CP0 = 0x1, unprogrammed default
  2787                           ;	Code Protection bit
  2788                           ;	CP1 = 0x1, unprogrammed default
  2789                           ;	Code Protection bit
  2790                           ;	CP2 = 0x1, unprogrammed default
  2791                           ;	Code Protection bit
  2792                           ;	CP3 = 0x1, unprogrammed default
  2793  300008                     	org	3145736
  2794  300008  0F                 	db	15
  2795                           
  2796                           ;Config register CONFIG5H @ 0x300009
  2797                           ;	unspecified, using default values
  2798                           ;	Boot Block Code Protection bit
  2799                           ;	CPB = 0x1, unprogrammed default
  2800                           ;	Data EEPROM Code Protection bit
  2801                           ;	CPD = 0x1, unprogrammed default
  2802  300009                     	org	3145737
  2803  300009  C0                 	db	192
  2804                           
  2805                           ;Config register CONFIG6L @ 0x30000A
  2806                           ;	unspecified, using default values
  2807                           ;	Write Protection bit
  2808                           ;	WRT0 = 0x1, unprogrammed default
  2809                           ;	Write Protection bit
  2810                           ;	WRT1 = 0x1, unprogrammed default
  2811                           ;	Write Protection bit
  2812                           ;	WRT2 = 0x1, unprogrammed default
  2813                           ;	Write Protection bit
  2814                           ;	WRT3 = 0x1, unprogrammed default
  2815  30000A                     	org	3145738
  2816  30000A  0F                 	db	15
  2817                           
  2818                           ;Config register CONFIG6H @ 0x30000B
  2819                           ;	unspecified, using default values
  2820                           ;	Configuration Register Write Protection bit
  2821                           ;	WRTC = 0x1, unprogrammed default
  2822                           ;	Boot Block Write Protection bit
  2823                           ;	WRTB = 0x1, unprogrammed default
  2824                           ;	Data EEPROM Write Protection bit
  2825                           ;	WRTD = 0x1, unprogrammed default
  2826  30000B                     	org	3145739
  2827  30000B  E0                 	db	224
  2828                           
  2829                           ;Config register CONFIG7L @ 0x30000C
  2830                           ;	unspecified, using default values
  2831                           ;	Table Read Protection bit
  2832                           ;	EBTR0 = 0x1, unprogrammed default
  2833                           ;	Table Read Protection bit
  2834                           ;	EBTR1 = 0x1, unprogrammed default
  2835                           ;	Table Read Protection bit
  2836                           ;	EBTR2 = 0x1, unprogrammed default
  2837                           ;	Table Read Protection bit
  2838                           ;	EBTR3 = 0x1, unprogrammed default
  2839  30000C                     	org	3145740
  2840  30000C  0F                 	db	15
  2841                           
  2842                           ;Config register CONFIG7H @ 0x30000D
  2843                           ;	unspecified, using default values
  2844                           ;	Boot Block Table Read Protection bit
  2845                           ;	EBTRB = 0x1, unprogrammed default
  2846  30000D                     	org	3145741
  2847  30000D  40                 	db	64
  2848                           tosu	equ	0xFFF
  2849                           tosh	equ	0xFFE
  2850                           tosl	equ	0xFFD
  2851                           stkptr	equ	0xFFC
  2852                           pclatu	equ	0xFFB
  2853                           pclath	equ	0xFFA
  2854                           pcl	equ	0xFF9
  2855                           tblptru	equ	0xFF8
  2856                           tblptrh	equ	0xFF7
  2857                           tblptrl	equ	0xFF6
  2858                           tablat	equ	0xFF5
  2859                           prodh	equ	0xFF4
  2860                           prodl	equ	0xFF3
  2861                           indf0	equ	0xFEF
  2862                           postinc0	equ	0xFEE
  2863                           postdec0	equ	0xFED
  2864                           preinc0	equ	0xFEC
  2865                           plusw0	equ	0xFEB
  2866                           fsr0h	equ	0xFEA
  2867                           fsr0l	equ	0xFE9
  2868                           wreg	equ	0xFE8
  2869                           indf1	equ	0xFE7
  2870                           postinc1	equ	0xFE6
  2871                           postdec1	equ	0xFE5
  2872                           preinc1	equ	0xFE4
  2873                           plusw1	equ	0xFE3
  2874                           fsr1h	equ	0xFE2
  2875                           fsr1l	equ	0xFE1
  2876                           bsr	equ	0xFE0
  2877                           indf2	equ	0xFDF
  2878                           postinc2	equ	0xFDE
  2879                           postdec2	equ	0xFDD
  2880                           preinc2	equ	0xFDC
  2881                           plusw2	equ	0xFDB
  2882                           fsr2h	equ	0xFDA
  2883                           fsr2l	equ	0xFD9
  2884                           status	equ	0xFD8

Data Sizes:
    Strings     111
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     40      40
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    ESCRIBE_MENSAJE@cadena	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_7(CODE[16]), STR_6(CODE[16]), STR_5(CODE[16]), STR_4(CODE[16]), 
		 -> STR_3(CODE[16]), STR_2(CODE[16]), STR_1(CODE[15]), 


Critical Paths under _main in COMRAM

    _main->_ESCRIBE_MENSAJE
    _lcd_init->_CURSOR_ONOFF
    _lcd_init->_LCD_CONFIG
    _LCD_CONFIG->_ENVIA_LCD_CMD
    _CURSOR_ONOFF->_ENVIA_LCD_CMD
    _CURSOR_HOME->_ENVIA_LCD_CMD
    _BORRAR_LCD->_ENVIA_LCD_CMD
    _ENVIA_LCD_CMD->_ENVIA_NIBBLE
    _ENVIA_LCD_CMD->_LEER_LCD
    _ESCRIBE_MENSAJE->_ENVIA_CHAR
    _ENVIA_CHAR->_ENVIA_NIBBLE
    _ENVIA_CHAR->_LEER_LCD

Critical Paths under _Int1_ISR in COMRAM

    _Int1_ISR->i1_ESCRIBE_MENSAJE
    i1_ESCRIBE_MENSAJE->i1_ENVIA_CHAR
    i1_ENVIA_CHAR->i1_ENVIA_NIBBLE
    i1_ENVIA_CHAR->i1_LEER_LCD
    i1_CURSOR_HOME->i1_ENVIA_LCD_CMD
    i1_ENVIA_LCD_CMD->i1_ENVIA_NIBBLE
    i1_ENVIA_LCD_CMD->i1_LEER_LCD

Critical Paths under _Int0_ISR in COMRAM

    _Int0_ISR->i2_ESCRIBE_MENSAJE
    i2_ESCRIBE_MENSAJE->i2_ENVIA_CHAR
    i2_ENVIA_CHAR->i2_ENVIA_NIBBLE
    i2_ENVIA_CHAR->i2_LEER_LCD
    i2_CURSOR_HOME->i2_ENVIA_LCD_CMD
    i2_ENVIA_LCD_CMD->i2_ENVIA_NIBBLE
    i2_ENVIA_LCD_CMD->i2_LEER_LCD

Critical Paths under _main in BANK0

    None.

Critical Paths under _Int1_ISR in BANK0

    None.

Critical Paths under _Int0_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _Int1_ISR in BANK1

    None.

Critical Paths under _Int0_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _Int1_ISR in BANK2

    None.

Critical Paths under _Int0_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _Int1_ISR in BANK3

    None.

Critical Paths under _Int0_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _Int1_ISR in BANK4

    None.

Critical Paths under _Int0_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _Int1_ISR in BANK5

    None.

Critical Paths under _Int0_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _Int1_ISR in BANK6

    None.

Critical Paths under _Int0_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _Int1_ISR in BANK7

    None.

Critical Paths under _Int0_ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1488
                                             38 COMRAM     2     2      0
                    _ESCRIBE_MENSAJE
                      _configuracion
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             1     1      0     525
                                             33 COMRAM     1     1      0
                         _BORRAR_LCD
                        _CURSOR_HOME
                       _CURSOR_ONOFF
                         _LCD_CONFIG
 ---------------------------------------------------------------------------------
 (2) _LCD_CONFIG                                           1     1      0     135
                                             32 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
                       _ENVIA_NIBBLE
 ---------------------------------------------------------------------------------
 (2) _CURSOR_ONOFF                                         1     1      0     150
                                             32 COMRAM     1     1      0
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _CURSOR_HOME                                          0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _BORRAR_LCD                                           0     0      0     120
                      _ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _ENVIA_LCD_CMD                                        2     2      0     120
                                             30 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (1) _configuracion                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ESCRIBE_MENSAJE                                      6     3      3     963
                                             32 COMRAM     6     3      3
                         _ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (2) _ENVIA_CHAR                                           2     2      0     120
                                             30 COMRAM     2     2      0
                       _ENVIA_NIBBLE
                           _LEER_LCD
 ---------------------------------------------------------------------------------
 (4) _LEER_LCD                                             1     1      0      45
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _ENVIA_NIBBLE                                         1     1      0      15
                                             29 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _Int1_ISR                                             7     7      0     665
                                             22 COMRAM     7     7      0
                      i1_CURSOR_HOME
                  i1_ESCRIBE_MENSAJE
 ---------------------------------------------------------------------------------
 (6) i1_ESCRIBE_MENSAJE                                    6     3      3     482
                                             16 COMRAM     6     3      3
                       i1_ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (7) i1_ENVIA_CHAR                                         2     2      0     183
                                             14 COMRAM     2     2      0
                     i1_ENVIA_NIBBLE
                         i1_LEER_LCD
 ---------------------------------------------------------------------------------
 (6) i1_CURSOR_HOME                                        0     0      0     183
                    i1_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (7) i1_ENVIA_LCD_CMD                                      2     2      0     183
                                             14 COMRAM     2     2      0
                     i1_ENVIA_NIBBLE
                         i1_LEER_LCD
 ---------------------------------------------------------------------------------
 (8) i1_LEER_LCD                                           1     1      0      70
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_ENVIA_NIBBLE                                       1     1      0      23
                                             13 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _Int0_ISR                                             4     4      0     561
                                              9 COMRAM     4     4      0
                      i2_CURSOR_HOME
                  i2_ESCRIBE_MENSAJE
 ---------------------------------------------------------------------------------
 (10) i2_ESCRIBE_MENSAJE                                   6     3      3     378
                                              3 COMRAM     6     3      3
                       i2_ENVIA_CHAR
 ---------------------------------------------------------------------------------
 (11) i2_ENVIA_CHAR                                        2     2      0     183
                                              1 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (10) i2_CURSOR_HOME                                       0     0      0     183
                    i2_ENVIA_LCD_CMD
 ---------------------------------------------------------------------------------
 (11) i2_ENVIA_LCD_CMD                                     2     2      0     183
                                              1 COMRAM     2     2      0
                     i2_ENVIA_NIBBLE
                         i2_LEER_LCD
 ---------------------------------------------------------------------------------
 (12) i2_LEER_LCD                                          1     1      0      70
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) i2_ENVIA_NIBBLE                                      1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ESCRIBE_MENSAJE
     _ENVIA_CHAR
       _ENVIA_NIBBLE
       _LEER_LCD
   _configuracion
   _lcd_init
     _BORRAR_LCD
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_HOME
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _CURSOR_ONOFF
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
     _LCD_CONFIG
       _ENVIA_LCD_CMD
         _ENVIA_NIBBLE
         _LEER_LCD
       _ENVIA_NIBBLE

 _Int1_ISR (ROOT)
   i1_CURSOR_HOME
     i1_ENVIA_LCD_CMD
       i1_ENVIA_NIBBLE
       i1_LEER_LCD
   i1_ESCRIBE_MENSAJE
     i1_ENVIA_CHAR
       i1_ENVIA_NIBBLE
       i1_LEER_LCD

 _Int0_ISR (ROOT)
   i2_CURSOR_HOME
     i2_ENVIA_LCD_CMD
       i2_ENVIA_NIBBLE
       i2_LEER_LCD
   i2_ESCRIBE_MENSAJE
     i2_ENVIA_CHAR
       i2_ENVIA_NIBBLE
       i2_LEER_LCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5E     28      28       1       42.6%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue May 26 21:16:17 2020

                        l32 0D2A                          l29 0D94                          l95 0DAE  
                        u10 08E2                          u11 08DE                          u40 0CE6  
                        u41 0CE2                          u50 0CFC                          u51 0CF8  
__size_ofi2_ESCRIBE_MENSAJE 003E              ?_configuracion 0001                          bsr 000FE0  
             ENVIA_CHAR@aux 0020                         l100 0D02                         l112 0DB6  
                       l121 0BCE                         l106 0B1E                         l115 0A8C  
                       l125 08A8                         l109 0C02                         l118 0D46  
                       l127 08E2                         l810 0876                         l820 0888  
                       l812 0878                         l830 089E                         l822 088A  
                       l814 087A                         l840 08CA                         l832 08AA  
                       l824 0892                         l816 087C                         l808 0872  
                       l850 0D3C                         l834 08B2                         l826 0894  
                       l818 0884                         l852 0D44                         l836 08B6  
                       l844 08D0                         l828 089C                         l860 0BA8  
                       l846 0D2E                         l838 08C0                         l870 0BBC  
                       l862 0BB0                         l854 0B9E                         l848 0D3A  
                       l872 0BC2                         l864 0BB2                         l856 0BA0  
                       l874 0BC8                         l866 0BB4                         l858 0BA4  
                       l970 0A32                         l868 0BB6                         l980 0A68  
                       l972 0A38                         l990 0A86                         l982 0A6E  
                       l974 0A46                         l992 0DB0                         l984 0A74  
                       l976 0A5A                         l968 0A2E                         l994 0DA8  
                       l986 0A7A                         l978 0A62                         l996 0CD6  
                       l988 0A80                         l998 0CE6                         u230 0B1E  
                       u231 0B1A                         u317 0AB2                         u407 088C  
                       u327 0ACC                         u417 0896                         u337 0D12  
                       u427 08AC                         u347 0A3E                         u437 08BA  
                       u357 0A4C                         u447 08C4                         u367 0A5C  
                       u457 0D3E                         u377 0BAA                         u387 0BDE  
                       u397 087E                 LEER_LCD@aux 001E                         wreg 000FE8  
          ??i2_ENVIA_NIBBLE 0001                ?_CURSOR_HOME 0001             i1_ENVIA_LCD_CMD 0C38  
            ??_ENVIA_NIBBLE 001E                 ?i1_LEER_LCD 0001              ENVIA_CHAR@dato 001F  
                      l1000 0CEC                        l1010 0BDC                        l1002 0CFC  
                      l1020 0BF0                        l1012 0BE4                        l1004 0BD2  
                      l1022 0BF6                        l1014 0BE6                        l1006 0BD4  
                      l1024 0BFC                        l1016 0BE8                        l1008 0BD8  
                      l1120 0D08                        l1018 0BEA                        l1114 0D80  
                      l1122 0D0C                        l1116 0D90                        l1124 0D1C  
                      l1126 0D20                        l1118 0D04                        l1128 0D24  
                      l1450 0B0C                        l1444 0AE2                        l1446 0AEE  
                      l1448 0B0A                        l1480 0AA8                        l1472 0A8E  
                      l1482 0AC0                        l1474 0A92                        l1484 0AC2  
                      l1476 0A96                        l1478 0AA6                        STR_1 0861  
                      STR_2 0831                        STR_3 0801                        STR_4 0841  
                      STR_5 0811                        STR_6 0851                        STR_7 0821  
                      _LATD 000F8C                        i1l58 00D2                        i2l47 0A1A  
                      i1l95 0DBE                        i2l95 0DC6                 ?i2_LEER_LCD 0001  
                      _main 0A8E                        btemp 0029           ??i2_ENVIA_LCD_CMD 0002  
                      start 00F2               ?_CURSOR_ONOFF 0001                ___param_bank 000000  
           ??_ENVIA_LCD_CMD 001F            __end_of_LEER_LCD 08E4         __size_of_BORRAR_LCD 0008  
                     ?_main 0001                       i1l121 0C6A                       i1l106 0B5C  
                     i1l125 091A                       i1l109 0C36                       i1l118 0D62  
                     i1l127 0954                       i2l121 0CD2                       i2l106 0B9A  
                     i2l125 098C                       i2l109 0C9E                       i2l118 0D7E  
                     i2l127 09C6                       _PORTD 000F83         __size_of_LCD_CONFIG 0060  
                     _TRISB 000F93                       _TRISD 000F95          i2ESCRIBE_MENSAJE@i 0009  
       __size_of_ENVIA_CHAR 0034     i2ESCRIBE_MENSAJE@cadena 0004                       tablat 000FF5  
                     ttemp5 002A                       ttemp6 002D                       ttemp7 0031  
                     status 000FD8                       wtemp8 002A              ??_CURSOR_ONOFF 0021  
          __end_of_Int0_ISR 0A2E            __end_of_Int1_ISR 00F2             __initialization 0D96  
              __end_of_main 0AE2             ??_configuracion 001E         __size_ofi1_LEER_LCD 0072  
           _ESCRIBE_MENSAJE 0AE2     __end_ofi1_ENVIA_LCD_CMD 0C6C                      ??_main 0027  
       __size_ofi2_LEER_LCD 0072               __activetblptr 000001               ?i1_ENVIA_CHAR 0001  
           i1ENVIA_CHAR@aux 0010                      i1l1300 090E                      i1l1310 0932  
                    i1l1302 0910                      i1l1312 093C                      i1l1304 091C  
                    i1l1400 0C3A                      i1l1306 0924                      i1l1410 0C4E  
                    i1l1402 0C3C                      i1l1308 0928                      i1l1316 0942  
                    i1l1420 0C64                      i1l1412 0C50                      i1l1404 0C40  
                    i1l1270 0D60                      i1l1414 0C52                      i1l1406 0C44  
                    i1l1510 0066                      i1l1502 0036                      i1l1264 0D4A  
                    i1l1280 08E4                      i1l1416 0C58                      i1l1408 0C4C  
                    i1l1360 0C0C                      i1l1512 006C                      i1l1504 0044  
                    i1l1520 0084                      i1l1266 0D56                      i1l1290 08F6  
                    i1l1282 08E8                      i1l1418 0C5E                      i1l1370 0C1E  
                    i1l1362 0C10                      i1l1530 00BA                      i1l1522 0092  
                    i1l1514 0070                      i1l1506 0052                      i1l1268 0D58  
                    i1l1292 08FA                      i1l1284 08EA                      i1l1452 0DB8  
                    i1l1372 0C24                      i1l1364 0C18                      i1l1356 0C06  
                    i1l1460 0B48                      i1l1532 00BE                      i1l1524 00A0  
                    i1l1516 0080                      i1l1508 0056                      i1l1294 08FC  
                    i1l1286 08EC                      i1l1374 0C2A                      i1l1366 0C1A  
                    i1l1358 0C08                      i1l1462 0B4A                      i1l1534 00CE  
                    i1l1526 00A4                      i1l1518 0082                      i1l1296 0904  
                    i1l1288 08EE                      i1l1376 0C30                      i1l1368 0C1C  
                    i1l1456 0B20                      i1l1536 00D0                      i1l1528 00B4  
                    i1l1298 0906                      i1l1458 0B2C                      i2l1320 095A  
                    i2l1330 096C                      i2l1322 095C                      i2l1340 0982  
                    i2l1332 096E                      i2l1324 095E                      i2l1500 0A18  
                    i2l1350 09AE                      i2l1342 098E                      i2l1334 0976  
                    i2l1326 0960                      i2l1318 0956                      i2l1430 0CB4  
                    i2l1422 0CA2                      i2l1272 0D66                      i2l1344 0996  
                    i2l1336 0978                      i2l1328 0968                      i2l1440 0CC6  
                    i2l1432 0CB6                      i2l1424 0CA4                      i2l1274 0D72  
                    i2l1346 099A                      i2l1354 09B4                      i2l1338 0980  
                    i2l1442 0CCC                      i2l1434 0CB8                      i2l1426 0CA8  
                    i2l1276 0D74                      i2l1348 09A4                      i2l1436 0CBA  
                    i2l1428 0CAC                      i2l1380 0C70                      i2l1278 0D7C  
                    i2l1438 0CC0                      i2l1454 0DC0                      i2l1390 0C84  
                    i2l1382 0C74                      i2l1470 0B88                      i2l1392 0C86  
                    i2l1384 0C78                      i2l1464 0B5E                      i2l1394 0C8C  
                    i2l1386 0C80                      i2l1378 0C6E                      i2l1466 0B6A  
                    i2l1490 09EC                      i2l1396 0C92                      i2l1388 0C82  
                    i2l1468 0B86                      i2l1492 09FC                      i2l1398 0C98  
                    i2l1494 0A02                      i2l1486 09DA                      i2l1496 0A06  
                    i2l1488 09E8                      i2l1498 0A16               ?i2_ENVIA_CHAR 0001  
          __end_of_lcd_init 0D2C      __size_ofi1_CURSOR_HOME 0008        __end_of_ENVIA_NIBBLE 0D48  
            ??i1_ENVIA_CHAR 000F                __mediumconst 0000                      tblptrh 000FF7  
                    tblptrl 000FF6                      tblptru 000FF8                ??_BORRAR_LCD 0021  
      __size_of_CURSOR_HOME 0008                   ?_LEER_LCD 0001                  __accesstop 0060  
   __end_of__initialization 0D96                ??_LCD_CONFIG 0021              ??i2_ENVIA_CHAR 0002  
             ___rparam_used 000001                ??_ENVIA_CHAR 001F     __end_of_ESCRIBE_MENSAJE 0B20  
            __pcstackCOMRAM 0001      __size_ofi2_CURSOR_HOME 0008          __end_of_BORRAR_LCD 0DB8  
          ?i1_ENVIA_LCD_CMD 0001         i2ENVIA_LCD_CMD@dato 0002            ENVIA_LCD_CMD@aux 0020  
      __end_of_CURSOR_ONOFF 0D04          __end_of_LCD_CONFIG 0A8E          __end_of_ENVIA_CHAR 0C04  
             i1_CURSOR_HOME 0DB8             i2_ENVIA_LCD_CMD 0CA0                   ?_Int0_ISR 0001  
                 ?_Int1_ISR 0001                ??i1_LEER_LCD 000E                ??i2_LEER_LCD 0001  
                ??_LEER_LCD 001E            ENVIA_NIBBLE@dato 001E     __size_ofi1_ENVIA_NIBBLE 001C  
          i1ENVIA_CHAR@dato 000F          __end_ofi1_LEER_LCD 0956          __end_ofi2_LEER_LCD 09C8  
            ?i1_CURSOR_HOME 0001                     i1u21_20 0954                     i1u21_21 0950  
                   i1u30_20 00A0                     i1u30_21 009C                     i1u24_20 0B5C  
                   i1u24_21 0B58                     i1u50_27 0908                     i1u27_20 0044  
                   i1u27_21 0040                     i1u51_27 091E                     i1u28_20 0052  
                   i1u28_21 004E                     i1u52_27 092C                     i1u29_20 0092  
                   i1u29_21 008E                     i1u53_27 0936                     i2u22_40 09C6  
                   i2u22_41 09C2                     i1u54_27 0D5A                     i1u46_27 0C12  
                   i1u47_27 0C46                     i1u48_27 08F0                     i2u25_40 0B9A  
                   i2u25_41 0B96                     i1u49_27 08FE                     i2u26_40 09E8  
                   i2u26_41 09E4                     i2u60_47 0990                     i2u61_47 099E  
                   i2u62_47 09A8                     i2u63_47 0D76                     i2u55_47 0C7A  
                   i2u56_47 0CAE                     i2u57_47 0962                     i2u58_47 0970  
                   i2u59_47 097A               i2_CURSOR_HOME 0DC0                  ??_Int0_ISR 000A  
                ??_Int1_ISR 0017                   ?_lcd_init 0001        i2ESCRIBE_MENSAJE@tam 0006  
      __end_ofi1_ENVIA_CHAR 0C38       __size_of_ENVIA_NIBBLE 001C                     __Hparam 0000  
                   __Lparam 0000            ?_ESCRIBE_MENSAJE 0021                __psmallconst 0800  
     __end_of_ENVIA_LCD_CMD 0BD0                     __pcinit 0D96                     __ramtop 0800  
                   __ptext0 0A8E                     __ptext1 0D04                     __ptext2 0A2E  
                   __ptext3 0CD4                     __ptext4 0DA8                     __ptext5 0DB0  
                   __ptext6 0B9C                     __ptext7 0D80                     __ptext8 0AE2  
                   __ptext9 0BD0     __end_ofi2_ENVIA_LCD_CMD 0CD4        __end_ofi2_ENVIA_CHAR 0CA0  
            ?i2_CURSOR_HOME 0001             i2ENVIA_CHAR@aux 0003                  ??_lcd_init 0022  
            __pintcode_body 09C8                _ENVIA_NIBBLE 0D2C        end_of_initialization 0D96  
                   int_func 09C8     __size_ofi2_ENVIA_NIBBLE 001C          i1ENVIA_LCD_CMD@aux 0010  
     __end_of_configuracion 0D96       __size_of_CURSOR_ONOFF 0030             ??i1_CURSOR_HOME 0011  
        i1ENVIA_NIBBLE@dato 000E              i1_ENVIA_NIBBLE 0D48           __size_of_LEER_LCD 0072  
              _CURSOR_ONOFF 0CD4          CURSOR_ONOFF@estado 0021            ?i2_ENVIA_LCD_CMD 0001  
           ??i2_CURSOR_HOME 0004               ??_CURSOR_HOME 0021         start_initialization 0D96  
             i1LEER_LCD@aux 000E      __end_ofi1_ENVIA_NIBBLE 0D64       __size_ofi1_ENVIA_CHAR 0034  
         __size_of_Int0_ISR 0A26           __size_of_Int1_ISR 00DA           ENVIA_LCD_CMD@dato 001F  
     __size_ofi2_ENVIA_CHAR 0034                i1_ENVIA_CHAR 0C04               i2LEER_LCD@aux 0001  
  __size_ofi1_ENVIA_LCD_CMD 0034             ?i1_ENVIA_NIBBLE 0001          i2ENVIA_LCD_CMD@aux 0003  
       __end_of_CURSOR_HOME 0DB0           __size_of_lcd_init 0028              i2_ENVIA_NIBBLE 0D64  
              i2_ENVIA_CHAR 0C6C          i2ENVIA_NIBBLE@dato 0001                   __pintcode 0008  
               __pintcodelo 0018                 __smallconst 0800      __end_ofi2_ENVIA_NIBBLE 0D80  
                  _LEER_LCD 0872                    _LATBbits 000F8A                    _LATDbits 000F8C  
      i1ESCRIBE_MENSAJE@tam 0013                    _RCONbits 000FD0           i1_ESCRIBE_MENSAJE 0B20  
        ?i1_ESCRIBE_MENSAJE 0011            ESCRIBE_MENSAJE@i 0026    __size_of_ESCRIBE_MENSAJE 003E  
       ??i1_ESCRIBE_MENSAJE 0014                 _CURSOR_HOME 0DA8                    _Int0_ISR 0008  
                  _Int1_ISR 0018     i1ESCRIBE_MENSAJE@cadena 0011                 _INTCON2bits 000FF1  
               _INTCON3bits 000FF0             ?i2_ENVIA_NIBBLE 0001      __size_of_ENVIA_LCD_CMD 0034  
         ??i1_ENVIA_LCD_CMD 000F                    __Hrparam 0000   __end_ofi1_ESCRIBE_MENSAJE 0B5E  
                  __Lrparam 0000                __Lsmallconst 0800           i2_ESCRIBE_MENSAJE 0B5E  
        ?i2_ESCRIBE_MENSAJE 0004       __end_ofi1_CURSOR_HOME 0DC0                    __ptext10 0872  
                  __ptext11 0D2C                    __ptext20 0B5E                    __ptext21 0C6C  
                  __ptext13 0B20                    __ptext22 0DC0                    __ptext14 0C04  
                  __ptext23 0CA0                    __ptext15 0DB8                    __ptext24 0956  
                  __ptext16 0C38                    __ptext25 0D64                    __ptext17 08E4  
                  __ptext18 0D48                  _BORRAR_LCD 0DB0                    _lcd_init 0D04  
       ??i2_ESCRIBE_MENSAJE 0007      __size_of_configuracion 0016               __size_of_main 0054  
                _LCD_CONFIG 0A2E                  _ENVIA_CHAR 0BD0                    int$flags 0029  
          i2ENVIA_CHAR@dato 0002   __end_ofi2_ESCRIBE_MENSAJE 0B9C               _ENVIA_LCD_CMD 0B9C  
                _INTCONbits 000FF2            ??i1_ENVIA_NIBBLE 000E       __end_ofi2_CURSOR_HOME 0DC8  
         ??_ESCRIBE_MENSAJE 0024    __size_ofi2_ENVIA_LCD_CMD 0034                  i1_LEER_LCD 08E4  
                  intlevel1 0000                    intlevel2 0000       ESCRIBE_MENSAJE@cadena 0021  
                i2_LEER_LCD 0956  __size_ofi1_ESCRIBE_MENSAJE 003E          i1ESCRIBE_MENSAJE@i 0016  
            ?_ENVIA_LCD_CMD 0001               _configuracion 0D80         i1ENVIA_LCD_CMD@dato 000F  
               ?_BORRAR_LCD 0001               ?_ENVIA_NIBBLE 0001                 ?_LCD_CONFIG 0001  
        ESCRIBE_MENSAJE@tam 0023                 ?_ENVIA_CHAR 0001  
