Microchip MPLAB XC8 Compiler V2.05 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.05\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\Ejercicio_12_-_Reloj_LB2.X.production.sym \
  --cmf=dist/default/production\Ejercicio_12_-_Reloj_LB2.X.production.cmf \
  -z -Q18F4550 -oC:\Users\ELECTR~1\AppData\Local\Temp\s2jg.2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/Ejercicio_12_-_Reloj_LB2.X.production.map -E1 \
  -ver=XC8 --acfsm=1493 -ASTACK=060h-07FFh -pstack=STACK -ACODE=00h-07FFFh \
  -ACONST=00h-07FFFh -ASMALLCONST=0800h-08FFhx120 \
  -AMEDIUMCONST=0800h-07FFFh -ACOMRAM=01h-05Fh -AABS1=00h-07FFh \
  -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ABANK6=0600h-06FFh \
  -ABANK7=0700h-07FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo=018h,powerup,init -pramtop=0800h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\ELECTR~1\AppData\Local\Temp\s2jg.o \
  dist/default/production\Ejercicio_12_-_Reloj_LB2.X.production.o 

Object code version is 3.11

Machine type is 18F4550

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\ELECTR~1\AppData\Local\Temp\s2jg.o
                init                                 64       64        4        C       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\Ejercicio_12_-_Reloj_LB2.X.production.o
                intcodelo                            18       18       4C        C       0
                intcode                               8        8        6        4       0
                temp                                 19       19        1        1       1
                smallconst                          800      800       14      400       0
                intcode_body                        AB2      AB2       40      40A       0
                text14                              C26      C26       1C      40A       0
                text13                              996      996       62      40A       0
                text12                              B26      B26       34      40A       0
                text11                              B8C      B8C       32      40A       0
                text10                              AF2      AF2       34      40A       0
                text9                               BE6      BE6       24      40A       0
                text8                               C4A      C4A        8      40A       0
                text7                               C42      C42        8      40A       0
                text6                               C0A      C0A       1C      40A       0
                text5                               9F8      9F8       60      40A       0
                text4                               BBE      BBE       28      40A       0
                text3                               8A2      8A2       84      40A       0
                text2                               926      926       70      40A       0
                text1                               A58      A58       5A      40A       0
                text0                               814      814       8E      40A       0
                cstackCOMRAM                          1        1       12        1       1
                dataCOMRAM                           17       17        2        1       1
                bssCOMRAM                            13       13        4        1       1
                cinit                               B5A      B5A       32      40A       0
                idataCOMRAM                         C52      C52        2      40A       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcodelo                            18       18       4C         0
                intcode                               8        8        6         0
                init                                 64       64        4         0
                reset_vec                             0        0        4         0
                intcode_body                        AB2      AB2       40         0
                text14                              C26      C26       1C         0
                text13                              996      996       62         0
                text12                              B26      B26       34         0
                text11                              B8C      B8C       32         0
                text10                              AF2      AF2       34         0
                text9                               BE6      BE6       24         0
                text8                               C4A      C4A        8         0
                text7                               C42      C42        8         0
                text6                               C0A      C0A       1C         0
                text5                               9F8      9F8       60         0
                text4                               BBE      BBE       28         0
                text3                               8A2      8A2       84         0
                text2                               926      926       70         0
                text1                               A58      A58       5A         0
                text0                               814      814       8E         0
                cinit                               B5A      B5A       32         0
                idataCOMRAM                         C52      C52        2         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          800      800       14         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                 19       19        1         1
                cstackCOMRAM                          1        1       12         1
                dataCOMRAM                           17       17        2         1
                bssCOMRAM                            13       13        4         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  000019  00001A         1       1  COMRAM  
                intcode                        000008  000006  00000E         4       0  CODE    
                intcodelo                      000018  000050  000068         C       0  CODE    
                smallconst                     000800  000014  000814       400       0  SMALLCON
                text0                          000814  000440  000C54       40A       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000060-0000FF               A0
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BIGRAM           00001A-0007FF              7E6
        CODE             000004-000007                4
                         00000E-000017                A
                         000068-0007FF              798
                         000C54-007FFF             73AC
        COMRAM           00001A-00005F               46
        CONST            000004-000007                4
                         00000E-000017                A
                         000068-0007FF              798
                         000C54-007FFF             73AC
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000C54-007FFF             73AC
        RAM              000060-0007FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       000C54-007FFF              100
        STACK            000060-0007FF              7A0

                                  Symbol Table

?___awdiv                 cstackCOMRAM 00000A
?___awmod                 cstackCOMRAM 000004
CURSOR_ONOFF@estado       cstackCOMRAM 000007
ENVIA_CHAR@aux            cstackCOMRAM 000006
ENVIA_CHAR@dato           cstackCOMRAM 000005
ENVIA_LCD_CMD@aux         cstackCOMRAM 000006
ENVIA_LCD_CMD@dato        cstackCOMRAM 000005
ENVIA_NIBBLE@dato         cstackCOMRAM 000004
ESCRIBE_MENSAJE@cadena    cstackCOMRAM 000007
ESCRIBE_MENSAJE@i         cstackCOMRAM 00000C
ESCRIBE_MENSAJE@tam       cstackCOMRAM 000009
LEER_LCD@aux              cstackCOMRAM 000004
POS_CURSOR@columna        cstackCOMRAM 000007
POS_CURSOR@fila           cstackCOMRAM 000008
_BORRAR_LCD               text8        000C4A
_CCP1CON                  (abs)        000FBD
_CCP1ISR                  intcode      000008
_CCPR1H                   (abs)        000FBF
_CCPR1L                   (abs)        000FBE
_CURSOR_HOME              text7        000C42
_CURSOR_ONOFF             text6        000C0A
_ENVIA_CHAR               text12       000B26
_ENVIA_LCD_CMD            text10       000AF2
_ENVIA_NIBBLE             text14       000C26
_ESCRIBE_MENSAJE          text11       000B8C
_INTCON3bits              (abs)        000FF0
_INTCONbits               (abs)        000FF2
_INTsISR                  intcodelo    000018
_LATD                     (abs)        000F8C
_LATDbits                 (abs)        000F8C
_LCD_CONFIG               text5        0009F8
_LEER_LCD                 text13       000996
_PIE1bits                 (abs)        000F9D
_PIR1bits                 (abs)        000F9E
_PORTD                    (abs)        000F83
_POS_CURSOR               text9        000BE6
_RCONbits                 (abs)        000FD0
_T1CON                    (abs)        000FCD
_TRISD                    (abs)        000F95
__CFG_BOR$OFF             (abs)        000000
__CFG_BORV$3              (abs)        000000
__CFG_CCP2MX$ON           (abs)        000000
__CFG_CPUDIV$OSC1_PLL2    (abs)        000000
__CFG_FOSC$XTPLL_XT       (abs)        000000
__CFG_LPT1OSC$OFF         (abs)        000000
__CFG_LVP$OFF             (abs)        000000
__CFG_MCLRE$ON            (abs)        000000
__CFG_PBADEN$OFF          (abs)        000000
__CFG_PLLDIV$1            (abs)        000000
__CFG_PWRT$ON             (abs)        000000
__CFG_WDT$OFF             (abs)        000000
__CFG_WDTPS$32768         (abs)        000000
__HRAM                    (abs)        000000
__Habs1                   abs1         000000
__Hbank0                  bank0        000000
__Hbank1                  bank1        000000
__Hbank2                  bank2        000000
__Hbank3                  bank3        000000
__Hbank4                  bank4        000000
__Hbank5                  bank5        000000
__Hbank6                  bank6        000000
__Hbank7                  bank7        000000
__Hbigbss                 bigbss       000000
__Hbigdata                bigdata      000000
__Hbigram                 bigram       000000
__Hbss                    bss          000000
__HbssCOMRAM              bssCOMRAM    000000
__Hcinit                  cinit        000000
__Hclrtext                clrtext      000000
__Hcomram                 comram       000000
__Hconfig                 config       30000E
__Hconst                  const        000000
__HcstackCOMRAM           cstackCOMRAM 000000
__Hdata                   data         000000
__HdataCOMRAM             dataCOMRAM   000000
__Heeprom_data            eeprom_data  000000
__Hfarbss                 farbss       000000
__Hfardata                fardata      000000
__Hibigdata               ibigdata     000000
__Hidata                  idata        000000
__HidataCOMRAM            idataCOMRAM  000000
__Hidloc                  idloc        200008
__Hifardata               ifardata     000000
__Hinit                   init         000068
__Hintcode                intcode      00000E
__Hintcode_body           intcode_body 000000
__Hintcodelo              intcodelo    000064
__Hintentry               intentry     000000
__Hintret                 intret       000000
__Hintsave_regs           intsave_regs 000000
__Hirdata                 irdata       000000
__Hmediumconst            mediumconst  000000
__HnvFARRAM               nvFARRAM     000000
__Hnvbit                  nvbit        000000
__Hnvrram                 nvrram       000000
__Hparam                  rparam       000000
__Hpowerup                powerup      000064
__Hram                    ram          000000
__Hramtop                 ramtop       000800
__Hrbit                   rbit         000000
__Hrbss                   rbss         000000
__Hrdata                  rdata        000000
__Hreset_vec              reset_vec    000004
__Hrparam                 rparam       000000
__Hsfr                    sfr          000000
__Hsmallconst             smallconst   000814
__Hspace_0                (abs)        30000E
__Hspace_1                (abs)        00001A
__Hspace_2                (abs)        000000
__Hstack                  stack        000000
__Hstruct                 struct       000000
__Htemp                   temp         00001A
__Htext                   text         000000
__Htext0                  text0        000000
__Htext1                  text1        000000
__Htext10                 text10       000000
__Htext11                 text11       000000
__Htext12                 text12       000000
__Htext13                 text13       000000
__Htext14                 text14       000000
__Htext2                  text2        000000
__Htext3                  text3        000000
__Htext4                  text4        000000
__Htext5                  text5        000000
__Htext6                  text6        000000
__Htext7                  text7        000000
__Htext8                  text8        000000
__Htext9                  text9        000000
__LRAM                    (abs)        000001
__Labs1                   abs1         000000
__Lbank0                  bank0        000000
__Lbank1                  bank1        000000
__Lbank2                  bank2        000000
__Lbank3                  bank3        000000
__Lbank4                  bank4        000000
__Lbank5                  bank5        000000
__Lbank6                  bank6        000000
__Lbank7                  bank7        000000
__Lbigbss                 bigbss       000000
__Lbigdata                bigdata      000000
__Lbigram                 bigram       000000
__Lbss                    bss          000000
__LbssCOMRAM              bssCOMRAM    000000
__Lcinit                  cinit        000000
__Lclrtext                clrtext      000000
__Lcomram                 comram       000000
__Lconfig                 config       300000
__Lconst                  const        000000
__LcstackCOMRAM           cstackCOMRAM 000000
__Ldata                   data         000000
__LdataCOMRAM             dataCOMRAM   000000
__Leeprom_data            eeprom_data  000000
__Lfarbss                 farbss       000000
__Lfardata                fardata      000000
__Libigdata               ibigdata     000000
__Lidata                  idata        000000
__LidataCOMRAM            idataCOMRAM  000000
__Lidloc                  idloc        200000
__Lifardata               ifardata     000000
__Linit                   init         000064
__Lintcode                intcode      000008
__Lintcode_body           intcode_body 000000
__Lintcodelo              intcodelo    000018
__Lintentry               intentry     000000
__Lintret                 intret       000000
__Lintsave_regs           intsave_regs 000000
__Lirdata                 irdata       000000
__Lmediumconst            mediumconst  000000
__LnvFARRAM               nvFARRAM     000000
__Lnvbit                  nvbit        000000
__Lnvrram                 nvrram       000000
__Lparam                  rparam       000000
__Lpowerup                powerup      000064
__Lram                    ram          000000
__Lramtop                 ramtop       000800
__Lrbit                   rbit         000000
__Lrbss                   rbss         000000
__Lrdata                  rdata        000000
__Lreset_vec              reset_vec    000000
__Lrparam                 rparam       000000
__Lsfr                    sfr          000000
__Lsmallconst             smallconst   000800
__Lspace_0                (abs)        000000
__Lspace_1                (abs)        000000
__Lspace_2                (abs)        000000
__Lstack                  stack        000000
__Lstruct                 struct       000000
__Ltemp                   temp         000019
__Ltext                   text         000000
__Ltext0                  text0        000000
__Ltext1                  text1        000000
__Ltext10                 text10       000000
__Ltext11                 text11       000000
__Ltext12                 text12       000000
__Ltext13                 text13       000000
__Ltext14                 text14       000000
__Ltext2                  text2        000000
__Ltext3                  text3        000000
__Ltext4                  text4        000000
__Ltext5                  text5        000000
__Ltext6                  text6        000000
__Ltext7                  text7        000000
__Ltext8                  text8        000000
__Ltext9                  text9        000000
__S0                      (abs)        30000E
__S1                      (abs)        00001A
__S2                      (abs)        000000
___awdiv                  text3        0008A2
___awdiv@counter          cstackCOMRAM 00000E
___awdiv@dividend         cstackCOMRAM 00000A
___awdiv@divisor          cstackCOMRAM 00000C
___awdiv@quotient         cstackCOMRAM 000010
___awdiv@sign             cstackCOMRAM 00000F
___awmod                  text2        000926
___awmod@counter          cstackCOMRAM 000008
___awmod@dividend         cstackCOMRAM 000004
___awmod@divisor          cstackCOMRAM 000006
___awmod@sign             cstackCOMRAM 000009
___inthi_sp               stack        000000
___intlo_sp               stack        000000
___param_bank             (abs)        000000
___rparam_used            (abs)        000001
___sp                     stack        000000
__accesstop               (abs)        000060
__activetblptr            (abs)        000001
__end_of_BORRAR_LCD       text8        000C52
__end_of_CCP1ISR          intcode_body 000AF2
__end_of_CURSOR_HOME      text7        000C4A
__end_of_CURSOR_ONOFF     text6        000C26
__end_of_ENVIA_CHAR       text12       000B5A
__end_of_ENVIA_LCD_CMD    text10       000B26
__end_of_ENVIA_NIBBLE     text14       000C42
__end_of_ESCRIBE_MENSAJE  text11       000BBE
__end_of_INTsISR          intcodelo    000064
__end_of_LCD_CONFIG       text5        000A58
__end_of_LEER_LCD         text13       0009F8
__end_of_POS_CURSOR       text9        000C0A
__end_of___awdiv          text3        000926
__end_of___awmod          text2        000996
__end_of__initialization  cinit        000B7A
__end_of_arrancaLCD       text4        000BE6
__end_of_convierte        text1        000AB2
__end_of_main             text0        0008A2
__initialization          cinit        000B5A
__mediumconst             mediumconst  000000
__pbssCOMRAM              bssCOMRAM    000013
__pcinit                  cinit        000B5A
__pcstackCOMRAM           cstackCOMRAM 000001
__pdataCOMRAM             dataCOMRAM   000017
__pidataCOMRAM            idataCOMRAM  000C52
__pintcode                intcode      000008
__pintcode_body           intcode_body 000AB2
__pintcodelo              intcodelo    000018
__psmallconst             smallconst   000800
__ptext0                  text0        000814
__ptext1                  text1        000A58
__ptext10                 text10       000AF2
__ptext11                 text11       000B8C
__ptext12                 text12       000B26
__ptext13                 text13       000996
__ptext14                 text14       000C26
__ptext2                  text2        000926
__ptext3                  text3        0008A2
__ptext4                  text4        000BBE
__ptext5                  text5        0009F8
__ptext6                  text6        000C0A
__ptext7                  text7        000C42
__ptext8                  text8        000C4A
__ptext9                  text9        000BE6
__ramtop                  ramtop       000800
__size_of_BORRAR_LCD      (abs)        000000
__size_of_CCP1ISR         (abs)        000000
__size_of_CURSOR_HOME     (abs)        000000
__size_of_CURSOR_ONOFF    (abs)        000000
__size_of_ENVIA_CHAR      (abs)        000000
__size_of_ENVIA_LCD_CMD   (abs)        000000
__size_of_ENVIA_NIBBLE    (abs)        000000
__size_of_ESCRIBE_MENSAJE (abs)        000000
__size_of_INTsISR         (abs)        000000
__size_of_LCD_CONFIG      (abs)        000000
__size_of_LEER_LCD        (abs)        000000
__size_of_POS_CURSOR      (abs)        000000
__size_of___awdiv         (abs)        000000
__size_of___awmod         (abs)        000000
__size_of_arrancaLCD      (abs)        000000
__size_of_convierte       (abs)        000000
__size_of_main            (abs)        000000
__smallconst              smallconst   000800
_arrancaLCD               text4        000BBE
_centena                  bssCOMRAM    000015
_convierte                text1        000A58
_decena                   bssCOMRAM    000014
_horas                    dataCOMRAM   000017
_main                     text0        000814
_minutos                  dataCOMRAM   000018
_segundos                 bssCOMRAM    000016
_unidad                   bssCOMRAM    000013
btemp                     temp         000019
convierte@numero          cstackCOMRAM 000012
end_of_initialization     cinit        000B7A
int$flags                 temp         000019
int_func                  intcode_body 000AB2
intlevel0                 text         000000
intlevel1                 text         000000
intlevel2                 text         000000
intlevel3                 text         000000
stackhi                   (abs)        0007FF
stacklo                   (abs)        000060
start                     init         000064
start_initialization      cinit        000B5A
ttemp5                    temp         00001A
ttemp6                    temp         00001D
ttemp7                    temp         000021
wtemp8                    temp         00001A


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 43 in file "maincode.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels required when called:    6
 This function calls:
		_ENVIA_CHAR
		_ESCRIBE_MENSAJE
		_POS_CURSOR
		_arrancaLCD
		_convierte
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _convierte *****************
 Defined at:
		line 37 in file "maincode.c"
 Parameters:    Size  Location     Type
  numero          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  numero          1   17[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		___awdiv
		___awmod
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function ___awmod *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c"
 Parameters:    Size  Location     Type
  dividend        2    3[COMRAM] int 
  divisor         2    5[COMRAM] int 
 Auto vars:     Size  Location     Type
  sign            1    8[COMRAM] unsigned char 
  counter         1    7[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    3[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_convierte
 This function uses a non-reentrant model


 *************** function ___awdiv *****************
 Defined at:
		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c"
 Parameters:    Size  Location     Type
  dividend        2    9[COMRAM] int 
  divisor         2   11[COMRAM] int 
 Auto vars:     Size  Location     Type
  quotient        2   15[COMRAM] int 
  sign            1   14[COMRAM] unsigned char 
  counter         1   13[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  2    9[COMRAM] int 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         4       0       0       0       0       0       0       0       0
      Locals:         4       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         8       0       0       0       0       0       0       0       0
Total ram usage:        8 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_convierte
 This function uses a non-reentrant model


 *************** function _arrancaLCD *****************
 Defined at:
		line 28 in file "maincode.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    5
 This function calls:
		_BORRAR_LCD
		_CURSOR_HOME
		_CURSOR_ONOFF
		_LCD_CONFIG
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_CONFIG *****************
 Defined at:
		line 72 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_ENVIA_LCD_CMD
		_ENVIA_NIBBLE
 This function is called by:
		_arrancaLCD
 This function uses a non-reentrant model


 *************** function _CURSOR_ONOFF *****************
 Defined at:
		line 35 in file "LCD.c"
 Parameters:    Size  Location     Type
  estado          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  estado          1    6[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_ENVIA_LCD_CMD
 This function is called by:
		_arrancaLCD
 This function uses a non-reentrant model


 *************** function _CURSOR_HOME *****************
 Defined at:
		line 30 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_ENVIA_LCD_CMD
 This function is called by:
		_arrancaLCD
 This function uses a non-reentrant model


 *************** function _BORRAR_LCD *****************
 Defined at:
		line 67 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_ENVIA_LCD_CMD
 This function is called by:
		_arrancaLCD
 This function uses a non-reentrant model


 *************** function _POS_CURSOR *****************
 Defined at:
		line 6 in file "LCD.c"
 Parameters:    Size  Location     Type
  fila            1    wreg     unsigned char 
  columna         1    6[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  fila            1    7[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_ENVIA_LCD_CMD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ENVIA_LCD_CMD *****************
 Defined at:
		line 104 in file "LCD.c"
 Parameters:    Size  Location     Type
  dato            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  dato            1    4[COMRAM] unsigned char 
  aux             1    5[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_ENVIA_NIBBLE
		_LEER_LCD
 This function is called by:
		_POS_CURSOR
		_CURSOR_HOME
		_CURSOR_ONOFF
		_BORRAR_LCD
		_LCD_CONFIG
		_BLINK_CURSOR
		_DISPLAY_ONOFF
		_GENERACARACTER
 This function uses a non-reentrant model


 *************** function _ESCRIBE_MENSAJE *****************
 Defined at:
		line 41 in file "LCD.c"
 Parameters:    Size  Location     Type
  cadena          2    6[COMRAM] PTR const unsigned char 
		 -> STR_1(17), 
  tam             1    8[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  i               1   11[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         3       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_ENVIA_CHAR
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ENVIA_CHAR *****************
 Defined at:
		line 50 in file "LCD.c"
 Parameters:    Size  Location     Type
  dato            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  dato            1    4[COMRAM] unsigned char 
  aux             1    5[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_ENVIA_NIBBLE
		_LEER_LCD
 This function is called by:
		_main
		_ESCRIBE_MENSAJE
		_GENERACARACTER
 This function uses a non-reentrant model


 *************** function _LEER_LCD *****************
 Defined at:
		line 121 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  aux             1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_ENVIA_CHAR
		_ENVIA_LCD_CMD
 This function uses a non-reentrant model


 *************** function _ENVIA_NIBBLE *****************
 Defined at:
		line 93 in file "LCD.c"
 Parameters:    Size  Location     Type
  dato            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  dato            1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		Nothing
 This function is called by:
		_ENVIA_CHAR
		_LCD_CONFIG
		_ENVIA_LCD_CMD
 This function uses a non-reentrant model


 *************** function _INTsISR *****************
 Defined at:
		line 103 in file "maincode.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          3       0       0       0       0       0       0       0       0
      Totals:         3       0       0       0       0       0       0       0       0
Total ram usage:        3 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 1
 This function uses a non-reentrant model


 *************** function _CCP1ISR *****************
 Defined at:
		line 79 in file "maincode.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c
		___awmod       		CODE           	0926	0000	113

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awmod.c estimated size: 113

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c
		___awdiv       		CODE           	08A2	0000	133

C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\awdiv.c estimated size: 133

shared
		__initialization		CODE           	0B5A	0000	33

shared estimated size: 33

maincode.c
		_main          		CODE           	0814	0000	143
		_CCP1ISR       		CODE           	0008	0000	71
		_arrancaLCD    		CODE           	0BBE	0000	41
		_INTsISR       		CODE           	0018	0000	77
		_convierte     		CODE           	0A58	0000	91

maincode.c estimated size: 423

LCD.c
		_ENVIA_NIBBLE  		CODE           	0C26	0000	29
		_ENVIA_CHAR    		CODE           	0B26	0000	53
		_CURSOR_HOME   		CODE           	0C42	0000	9
		_CURSOR_ONOFF  		CODE           	0C0A	0000	29
		_POS_CURSOR    		CODE           	0BE6	0000	37
		_ESCRIBE_MENSAJE		CODE           	0B8C	0000	51
		_ENVIA_LCD_CMD 		CODE           	0AF2	0000	53
		_LCD_CONFIG    		CODE           	09F8	0000	97
		_BORRAR_LCD    		CODE           	0C4A	0000	9
		_LEER_LCD      		CODE           	0996	0000	99

LCD.c estimated size: 466

