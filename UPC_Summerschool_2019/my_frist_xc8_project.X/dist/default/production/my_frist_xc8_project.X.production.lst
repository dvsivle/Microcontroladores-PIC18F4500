

Microchip Technology PIC18 LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue Feb 26 15:22:33 2019

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    10                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    14  0000                     
    15                           ; Version 1.45
    16                           ; Generated 16/11/2017 GMT
    17                           ; 
    18                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F4550 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _LATDbits	set	3980
    50  0000                     _INTCONbits	set	4082
    51  0000                     _TRISDbits	set	3989
    52                           
    53                           ; #config settings
    54  0000                     
    55                           	psect	cinit
    56  0001B6                     __pcinit:
    57                           	opt stack 0
    58  0001B6                     start_initialization:
    59                           	opt stack 0
    60  0001B6                     __initialization:
    61                           	opt stack 0
    62                           
    63                           ; Clear objects allocated to COMRAM (2 bytes)
    64  0001B6  6A16               	clrf	(__pbssCOMRAM+1)& (0+255),c
    65  0001B8  6A15               	clrf	__pbssCOMRAM& (0+255),c
    66  0001BA                     end_of_initialization:
    67                           	opt stack 0
    68  0001BA                     __end_of__initialization:
    69                           	opt stack 0
    70  0001BA  9017               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
    71  0001BC  9217               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
    72  0001BE  0100               	movlb	0
    73  0001C0  EF09  F000         	goto	_main	;jump to C main() function
    74                           
    75                           	psect	bssCOMRAM
    76  000015                     __pbssCOMRAM:
    77                           	opt stack 0
    78  000015                     _angle:
    79                           	opt stack 0
    80  000015                     	ds	2
    81                           
    82                           	psect	cstackCOMRAM
    83  000001                     __pcstackCOMRAM:
    84                           	opt stack 0
    85  000001                     ??_INT0ISR:
    86                           
    87                           ; 1 bytes @ 0x0
    88  000001                     	ds	18
    89  000013                     ??_main:
    90                           
    91                           ; 1 bytes @ 0x12
    92  000013                     	ds	2
    93                           
    94 ;;
    95 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
    96 ;;
    97 ;; *************** function _main *****************
    98 ;; Defined at:
    99 ;;		line 26 in file "pringles_onion.c"
   100 ;; Parameters:    Size  Location     Type
   101 ;;		None
   102 ;; Auto vars:     Size  Location     Type
   103 ;;		None
   104 ;; Return value:  Size  Location     Type
   105 ;;                  1    wreg      void 
   106 ;; Registers used:
   107 ;;		wreg, status,2, status,0
   108 ;; Tracked objects:
   109 ;;		On entry : 0/0
   110 ;;		On exit  : 0/0
   111 ;;		Unchanged: 0/0
   112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   113 ;;      Params:         0       0       0       0       0       0       0       0       0
   114 ;;      Locals:         0       0       0       0       0       0       0       0       0
   115 ;;      Temps:          2       0       0       0       0       0       0       0       0
   116 ;;      Totals:         2       0       0       0       0       0       0       0       0
   117 ;;Total ram usage:        2 bytes
   118 ;; Hardware stack levels required when called:    1
   119 ;; This function calls:
   120 ;;		Nothing
   121 ;; This function is called by:
   122 ;;		Startup code after reset
   123 ;; This function uses a non-reentrant model
   124 ;;
   125                           
   126                           	psect	text0
   127  000012                     __ptext0:
   128                           	opt stack 0
   129  000012                     _main:
   130                           	opt stack 30
   131                           
   132                           ;pringles_onion.c: 27: TRISDbits.TRISD0 = 0;
   133                           
   134                           ;incstack = 0
   135  000012  9095               	bcf	3989,0,c	;volatile
   136                           
   137                           ;pringles_onion.c: 28: INTCONbits.GIE = 1;
   138  000014  8EF2               	bsf	intcon,7,c	;volatile
   139                           
   140                           ;pringles_onion.c: 29: INTCONbits.INT0IE = 1;
   141  000016  88F2               	bsf	intcon,4,c	;volatile
   142  000018                     
   143                           ;pringles_onion.c: 31: if(angle == 0){
   144  000018  5015               	movf	_angle,w,c
   145  00001A  1016               	iorwf	_angle+1,w,c
   146  00001C  A4D8               	btfss	status,2,c
   147  00001E  D017               	goto	l16
   148                           
   149                           ;pringles_onion.c: 32: LATDbits.LATD0 = 1;
   150  000020  808C               	bsf	3980,0,c	;volatile
   151                           
   152                           ;pringles_onion.c: 33: _delay((unsigned long)((1000)*(48000000UL/4000000.0)));
   153  000022  0E10               	movlw	16
   154  000024  6E13               	movwf	??_main& (0+255),c
   155  000026  0E94               	movlw	148
   156  000028                     u57:
   157  000028  2EE8               	decfsz	wreg,f,c
   158  00002A  D7FE               	bra	u57
   159  00002C  2E13               	decfsz	??_main& (0+255),f,c
   160  00002E  D7FC               	bra	u57
   161  000030  D000               	nop2	
   162                           
   163                           ;pringles_onion.c: 34: LATDbits.LATD0 = 0;
   164  000032  908C               	bcf	3980,0,c	;volatile
   165                           
   166                           ;pringles_onion.c: 35: _delay((unsigned long)((19)*(48000000UL/4000.0)));
   167  000034  0E02               	movlw	2
   168  000036  6E14               	movwf	(??_main+1)& (0+255),c
   169  000038  0E29               	movlw	41
   170  00003A  6E13               	movwf	??_main& (0+255),c
   171  00003C  0E17               	movlw	23
   172  00003E                     u67:
   173  00003E  2EE8               	decfsz	wreg,f,c
   174  000040  D7FE               	bra	u67
   175  000042  2E13               	decfsz	??_main& (0+255),f,c
   176  000044  D7FC               	bra	u67
   177  000046  2E14               	decfsz	(??_main+1)& (0+255),f,c
   178  000048  D7FA               	bra	u67
   179  00004A  F000               	nop	
   180                           
   181                           ;pringles_onion.c: 36: }
   182  00004C  D7E5               	goto	l15
   183  00004E                     l16:
   184                           
   185                           ;pringles_onion.c: 37: else if (angle == 1){
   186  00004E  0415               	decf	_angle,w,c
   187  000050  1016               	iorwf	_angle+1,w,c
   188  000052  A4D8               	btfss	status,2,c
   189  000054  D01D               	goto	l18
   190                           
   191                           ;pringles_onion.c: 38: LATDbits.LATD0 = 1;
   192  000056  808C               	bsf	3980,0,c	;volatile
   193                           
   194                           ;pringles_onion.c: 39: _delay((unsigned long)((1500)*(48000000UL/4000000.0)));
   195  000058  0E18               	movlw	24
   196  00005A  6E13               	movwf	??_main& (0+255),c
   197  00005C  0E5F               	movlw	95
   198  00005E                     u77:
   199  00005E  2EE8               	decfsz	wreg,f,c
   200  000060  D7FE               	bra	u77
   201  000062  2E13               	decfsz	??_main& (0+255),f,c
   202  000064  D7FC               	bra	u77
   203  000066  F000               	nop	
   204                           
   205                           ;pringles_onion.c: 40: LATDbits.LATD0 = 0;
   206  000068  908C               	bcf	3980,0,c	;volatile
   207                           
   208                           ;pringles_onion.c: 41: _delay((unsigned long)((18)*(48000000UL/4000.0)));
   209  00006A  0E02               	movlw	2
   210  00006C  6E14               	movwf	(??_main+1)& (0+255),c
   211  00006E  0E19               	movlw	25
   212  000070  6E13               	movwf	??_main& (0+255),c
   213  000072  0E82               	movlw	130
   214  000074                     u87:
   215  000074  2EE8               	decfsz	wreg,f,c
   216  000076  D7FE               	bra	u87
   217  000078  2E13               	decfsz	??_main& (0+255),f,c
   218  00007A  D7FC               	bra	u87
   219  00007C  2E14               	decfsz	(??_main+1)& (0+255),f,c
   220  00007E  D7FA               	bra	u87
   221                           
   222                           ;pringles_onion.c: 42: _delay((unsigned long)((500)*(48000000UL/4000000.0)));
   223  000080  0E08               	movlw	8
   224  000082  6E13               	movwf	??_main& (0+255),c
   225  000084  0ECA               	movlw	202
   226  000086                     u97:
   227  000086  2EE8               	decfsz	wreg,f,c
   228  000088  D7FE               	bra	u97
   229  00008A  2E13               	decfsz	??_main& (0+255),f,c
   230  00008C  D7FC               	bra	u97
   231                           
   232                           ;pringles_onion.c: 43: }
   233  00008E  D7C4               	goto	l15
   234  000090                     l18:
   235                           
   236                           ;pringles_onion.c: 44: else if (angle == 2){
   237  000090  0E02               	movlw	2
   238  000092  1815               	xorwf	_angle,w,c
   239  000094  1016               	iorwf	_angle+1,w,c
   240  000096  A4D8               	btfss	status,2,c
   241  000098  D015               	goto	l20
   242                           
   243                           ;pringles_onion.c: 45: LATDbits.LATD0 = 1;
   244  00009A  808C               	bsf	3980,0,c	;volatile
   245                           
   246                           ;pringles_onion.c: 46: _delay((unsigned long)((2000)*(48000000UL/4000000.0)));
   247  00009C  0E20               	movlw	32
   248  00009E  6E13               	movwf	??_main& (0+255),c
   249  0000A0  0E2A               	movlw	42
   250  0000A2                     u107:
   251  0000A2  2EE8               	decfsz	wreg,f,c
   252  0000A4  D7FE               	bra	u107
   253  0000A6  2E13               	decfsz	??_main& (0+255),f,c
   254  0000A8  D7FC               	bra	u107
   255                           
   256                           ;pringles_onion.c: 47: LATDbits.LATD0 = 0;
   257  0000AA  908C               	bcf	3980,0,c	;volatile
   258                           
   259                           ;pringles_onion.c: 48: _delay((unsigned long)((18)*(48000000UL/4000.0)));
   260  0000AC  0E02               	movlw	2
   261  0000AE  6E14               	movwf	(??_main+1)& (0+255),c
   262  0000B0  0E19               	movlw	25
   263  0000B2  6E13               	movwf	??_main& (0+255),c
   264  0000B4  0E82               	movlw	130
   265  0000B6                     u117:
   266  0000B6  2EE8               	decfsz	wreg,f,c
   267  0000B8  D7FE               	bra	u117
   268  0000BA  2E13               	decfsz	??_main& (0+255),f,c
   269  0000BC  D7FC               	bra	u117
   270  0000BE  2E14               	decfsz	(??_main+1)& (0+255),f,c
   271  0000C0  D7FA               	bra	u117
   272                           
   273                           ;pringles_onion.c: 49: }
   274  0000C2  D7AA               	goto	l15
   275  0000C4                     l20:
   276                           
   277                           ;pringles_onion.c: 50: else{
   278                           ;pringles_onion.c: 51: LATDbits.LATD0 = 1;
   279  0000C4  808C               	bsf	3980,0,c	;volatile
   280                           
   281                           ;pringles_onion.c: 52: _delay((unsigned long)((1500)*(48000000UL/4000000.0)));
   282  0000C6  0E18               	movlw	24
   283  0000C8  6E13               	movwf	??_main& (0+255),c
   284  0000CA  0E5F               	movlw	95
   285  0000CC                     u127:
   286  0000CC  2EE8               	decfsz	wreg,f,c
   287  0000CE  D7FE               	bra	u127
   288  0000D0  2E13               	decfsz	??_main& (0+255),f,c
   289  0000D2  D7FC               	bra	u127
   290  0000D4  F000               	nop	
   291                           
   292                           ;pringles_onion.c: 53: LATDbits.LATD0 = 0;
   293  0000D6  908C               	bcf	3980,0,c	;volatile
   294                           
   295                           ;pringles_onion.c: 54: _delay((unsigned long)((18)*(48000000UL/4000.0)));
   296  0000D8  0E02               	movlw	2
   297  0000DA  6E14               	movwf	(??_main+1)& (0+255),c
   298  0000DC  0E19               	movlw	25
   299  0000DE  6E13               	movwf	??_main& (0+255),c
   300  0000E0  0E82               	movlw	130
   301  0000E2                     u137:
   302  0000E2  2EE8               	decfsz	wreg,f,c
   303  0000E4  D7FE               	bra	u137
   304  0000E6  2E13               	decfsz	??_main& (0+255),f,c
   305  0000E8  D7FC               	bra	u137
   306  0000EA  2E14               	decfsz	(??_main+1)& (0+255),f,c
   307  0000EC  D7FA               	bra	u137
   308                           
   309                           ;pringles_onion.c: 55: _delay((unsigned long)((500)*(48000000UL/4000000.0)));
   310  0000EE  0E08               	movlw	8
   311  0000F0  6E13               	movwf	??_main& (0+255),c
   312  0000F2  0ECA               	movlw	202
   313  0000F4                     u147:
   314  0000F4  2EE8               	decfsz	wreg,f,c
   315  0000F6  D7FE               	bra	u147
   316  0000F8  2E13               	decfsz	??_main& (0+255),f,c
   317  0000FA  D7FC               	bra	u147
   318  0000FC  D78D               	goto	l15
   319  0000FE                     __end_of_main:
   320                           	opt stack 0
   321                           intcon	equ	0xFF2
   322                           wreg	equ	0xFE8
   323                           status	equ	0xFD8
   324                           
   325 ;; *************** function _INT0ISR *****************
   326 ;; Defined at:
   327 ;;		line 60 in file "pringles_onion.c"
   328 ;; Parameters:    Size  Location     Type
   329 ;;		None
   330 ;; Auto vars:     Size  Location     Type
   331 ;;		None
   332 ;; Return value:  Size  Location     Type
   333 ;;                  1    wreg      void 
   334 ;; Registers used:
   335 ;;		wreg, status,2, status,0
   336 ;; Tracked objects:
   337 ;;		On entry : 0/0
   338 ;;		On exit  : 0/0
   339 ;;		Unchanged: 0/0
   340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   341 ;;      Params:         0       0       0       0       0       0       0       0       0
   342 ;;      Locals:         0       0       0       0       0       0       0       0       0
   343 ;;      Temps:         18       0       0       0       0       0       0       0       0
   344 ;;      Totals:        18       0       0       0       0       0       0       0       0
   345 ;;Total ram usage:       18 bytes
   346 ;; Hardware stack levels used:    1
   347 ;; This function calls:
   348 ;;		Nothing
   349 ;; This function is called by:
   350 ;;		Interrupt level 2
   351 ;; This function uses a non-reentrant model
   352 ;;
   353                           
   354                           	psect	intcode
   355  000008                     __pintcode:
   356                           	opt stack 0
   357  000008                     _INT0ISR:
   358                           	opt stack 30
   359                           
   360                           ;incstack = 0
   361  000008  8217               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   362  00000A  ED7F  F000         	call	int_func,f	;refresh shadow registers
   363                           intcon	equ	0xFF2
   364                           wreg	equ	0xFE8
   365                           status	equ	0xFD8
   366                           
   367                           	psect	intcode_body
   368  0000FE                     __pintcode_body:
   369                           	opt stack 30
   370  0000FE                     int_func:
   371                           	opt stack 30
   372  0000FE  0006               	pop		; remove dummy address from shadow register refresh
   373  000100  CFFA F001          	movff	pclath,??_INT0ISR
   374  000104  CFFB F002          	movff	pclatu,??_INT0ISR+1
   375  000108  CFE9 F003          	movff	fsr0l,??_INT0ISR+2
   376  00010C  CFEA F004          	movff	fsr0h,??_INT0ISR+3
   377  000110  CFE1 F005          	movff	fsr1l,??_INT0ISR+4
   378  000114  CFE2 F006          	movff	fsr1h,??_INT0ISR+5
   379  000118  CFD9 F007          	movff	fsr2l,??_INT0ISR+6
   380  00011C  CFDA F008          	movff	fsr2h,??_INT0ISR+7
   381  000120  CFF3 F009          	movff	prodl,??_INT0ISR+8
   382  000124  CFF4 F00A          	movff	prodh,??_INT0ISR+9
   383  000128  CFF6 F00B          	movff	tblptrl,??_INT0ISR+10
   384  00012C  CFF7 F00C          	movff	tblptrh,??_INT0ISR+11
   385  000130  CFF8 F00D          	movff	tblptru,??_INT0ISR+12
   386  000134  CFF5 F00E          	movff	tablat,??_INT0ISR+13
   387  000138  C017  F00F         	movff	btemp,??_INT0ISR+14
   388  00013C  C018  F010         	movff	btemp+1,??_INT0ISR+15
   389  000140  C019  F011         	movff	btemp+2,??_INT0ISR+16
   390  000144  C01A  F012         	movff	btemp+3,??_INT0ISR+17
   391                           
   392                           ;pringles_onion.c: 61: if (angle == 3){
   393  000148  0E03               	movlw	3
   394  00014A  1815               	xorwf	_angle,w,c
   395  00014C  1016               	iorwf	_angle+1,w,c
   396  00014E  A4D8               	btfss	status,2,c
   397  000150  D005               	goto	i2l29
   398                           
   399                           ;pringles_onion.c: 62: angle = 0;
   400  000152  0E00               	movlw	0
   401  000154  6E16               	movwf	_angle+1,c
   402  000156  0E00               	movlw	0
   403  000158  6E15               	movwf	_angle,c
   404                           
   405                           ;pringles_onion.c: 63: }
   406  00015A  D006               	goto	i2l30
   407  00015C                     i2l29:
   408                           
   409                           ;pringles_onion.c: 64: else{
   410                           ;pringles_onion.c: 65: angle = angle + 1;
   411  00015C  0E01               	movlw	1
   412  00015E  2415               	addwf	_angle,w,c
   413  000160  6E15               	movwf	_angle,c
   414  000162  0E00               	movlw	0
   415  000164  2016               	addwfc	_angle+1,w,c
   416  000166  6E16               	movwf	_angle+1,c
   417  000168                     i2l30:
   418                           
   419                           ;pringles_onion.c: 66: }
   420                           ;pringles_onion.c: 67: INTCONbits.INT0IF = 0;
   421  000168  92F2               	bcf	intcon,1,c	;volatile
   422  00016A  C012  F01A         	movff	??_INT0ISR+17,btemp+3
   423  00016E  C011  F019         	movff	??_INT0ISR+16,btemp+2
   424  000172  C010  F018         	movff	??_INT0ISR+15,btemp+1
   425  000176  C00F  F017         	movff	??_INT0ISR+14,btemp
   426  00017A  C00E  FFF5         	movff	??_INT0ISR+13,tablat
   427  00017E  C00D  FFF8         	movff	??_INT0ISR+12,tblptru
   428  000182  C00C  FFF7         	movff	??_INT0ISR+11,tblptrh
   429  000186  C00B  FFF6         	movff	??_INT0ISR+10,tblptrl
   430  00018A  C00A  FFF4         	movff	??_INT0ISR+9,prodh
   431  00018E  C009  FFF3         	movff	??_INT0ISR+8,prodl
   432  000192  C008  FFDA         	movff	??_INT0ISR+7,fsr2h
   433  000196  C007  FFD9         	movff	??_INT0ISR+6,fsr2l
   434  00019A  C006  FFE2         	movff	??_INT0ISR+5,fsr1h
   435  00019E  C005  FFE1         	movff	??_INT0ISR+4,fsr1l
   436  0001A2  C004  FFEA         	movff	??_INT0ISR+3,fsr0h
   437  0001A6  C003  FFE9         	movff	??_INT0ISR+2,fsr0l
   438  0001AA  C002  FFFB         	movff	??_INT0ISR+1,pclatu
   439  0001AE  C001  FFFA         	movff	??_INT0ISR,pclath
   440  0001B2  9217               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   441  0001B4  0011               	retfie		f
   442  0001B6                     __end_of_INT0ISR:
   443                           	opt stack 0
   444  0000                     pclatu	equ	0xFFB
   445                           pclath	equ	0xFFA
   446                           tblptru	equ	0xFF8
   447                           tblptrh	equ	0xFF7
   448                           tblptrl	equ	0xFF6
   449                           tablat	equ	0xFF5
   450                           prodh	equ	0xFF4
   451                           prodl	equ	0xFF3
   452                           intcon	equ	0xFF2
   453                           fsr0h	equ	0xFEA
   454                           fsr0l	equ	0xFE9
   455                           wreg	equ	0xFE8
   456                           fsr1h	equ	0xFE2
   457                           fsr1l	equ	0xFE1
   458                           fsr2h	equ	0xFDA
   459                           fsr2l	equ	0xFD9
   460                           status	equ	0xFD8
   461                           pclatu	equ	0xFFB
   462                           pclath	equ	0xFFA
   463                           tblptru	equ	0xFF8
   464                           tblptrh	equ	0xFF7
   465                           tblptrl	equ	0xFF6
   466                           tablat	equ	0xFF5
   467                           prodh	equ	0xFF4
   468                           prodl	equ	0xFF3
   469                           intcon	equ	0xFF2
   470                           fsr0h	equ	0xFEA
   471                           fsr0l	equ	0xFE9
   472                           wreg	equ	0xFE8
   473                           fsr1h	equ	0xFE2
   474                           fsr1l	equ	0xFE1
   475                           fsr2h	equ	0xFDA
   476                           fsr2l	equ	0xFD9
   477                           status	equ	0xFD8
   478                           
   479                           	psect	rparam
   480  0000                     pclatu	equ	0xFFB
   481                           pclath	equ	0xFFA
   482                           tblptru	equ	0xFF8
   483                           tblptrh	equ	0xFF7
   484                           tblptrl	equ	0xFF6
   485                           tablat	equ	0xFF5
   486                           prodh	equ	0xFF4
   487                           prodl	equ	0xFF3
   488                           intcon	equ	0xFF2
   489                           fsr0h	equ	0xFEA
   490                           fsr0l	equ	0xFE9
   491                           wreg	equ	0xFE8
   492                           fsr1h	equ	0xFE2
   493                           fsr1l	equ	0xFE1
   494                           fsr2h	equ	0xFDA
   495                           fsr2l	equ	0xFD9
   496                           status	equ	0xFD8
   497                           
   498                           	psect	temp
   499  000017                     btemp:
   500                           	opt stack 0
   501  000017                     	ds	1
   502  0000                     int$flags	set	btemp
   503  0000                     wtemp6	set	btemp+1
   504                           pclatu	equ	0xFFB
   505                           pclath	equ	0xFFA
   506                           tblptru	equ	0xFF8
   507                           tblptrh	equ	0xFF7
   508                           tblptrl	equ	0xFF6
   509                           tablat	equ	0xFF5
   510                           prodh	equ	0xFF4
   511                           prodl	equ	0xFF3
   512                           intcon	equ	0xFF2
   513                           fsr0h	equ	0xFEA
   514                           fsr0l	equ	0xFE9
   515                           wreg	equ	0xFE8
   516                           fsr1h	equ	0xFE2
   517                           fsr1l	equ	0xFE1
   518                           fsr2h	equ	0xFDA
   519                           fsr2l	equ	0xFD9
   520                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     20      22
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _INT0ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _INT0ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INT0ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INT0ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INT0ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INT0ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INT0ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INT0ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INT0ISR in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _INT0ISR                                             18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _INT0ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     14      16       1       23.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      16      20        0.0%
DATA                 0      0      16       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue Feb 26 15:22:33 2019

                     l20 00C4                       l15 0018                       l16 004E  
                     l18 0090                       u57 0028                       u67 003E  
                     u77 005E                       u87 0074                       u97 0086  
     __CFG_FOSC$XTPLL_XT 000000                      u107 00A2                      u117 00B6  
                    u127 00CC                      u137 00E2                      u147 00F4  
           __CFG_BOR$OFF 000000                      wreg 000FE8          __end_of_INT0ISR 01B6  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000                     i2l30 0168  
                   i2l29 015C             __CFG_PWRT$ON 000000                     _main 0012  
                   fsr0h 000FEA                     fsr1h 000FE2                     fsr2h 000FDA  
                   fsr0l 000FE9                     fsr1l 000FE1                     fsr2l 000FD9  
                   btemp 0017                     prodh 000FF4                     prodl 000FF3  
                   start 000E            __CFG_MCLRE$ON 000000             ___param_bank 000000  
          __CFG_PLLDIV$1 000000                    ?_main 0001                    _angle 0015  
                  pclath 000FFA                    tablat 000FF5                    status 000FD8  
                  wtemp6 0018          __initialization 01B6             __end_of_main 00FE  
                 ??_main 0013            __activetblptr 000000                ??_INT0ISR 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 01BA          __CFG_PBADEN$OFF 000000  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  _INT0ISR 0008  
                __Hparam 0000                  __Lparam 0000                  __pcinit 01B6  
                __ramtop 0800                  __ptext0 0012           __pintcode_body 00FE  
   end_of_initialization 01BA                  int_func 00FE                _TRISDbits 000F95  
    start_initialization 01B6                 ?_INT0ISR 0001              __pbssCOMRAM 0015  
              __pintcode 0008                 _LATDbits 000F8C         __size_of_INT0ISR 01AE  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 00EC  
               int$flags 0017    __CFG_CPUDIV$OSC1_PLL2 000000               _INTCONbits 000FF2  
               intlevel2 0000  
