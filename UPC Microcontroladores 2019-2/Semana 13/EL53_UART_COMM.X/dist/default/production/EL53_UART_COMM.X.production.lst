

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Nov 06 08:05:11 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    15                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    16  0000                     
    17                           ; Version 2.05
    18                           ; Generated 20/12/2018 GMT
    19                           ; 
    20                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	idataCOMRAM
    53  007F44                     __pidataCOMRAM:
    54                           	opt callstack 0
    55                           
    56                           ;initializer for _cadena
    57  007F44  45                 	db	69
    58  007F45  6C                 	db	108
    59  007F46  65                 	db	101
    60  007F47  63                 	db	99
    61  007F48  74                 	db	116
    62  007F49  72                 	db	114
    63  007F4A  6F                 	db	111
    64  007F4B  6E                 	db	110
    65  007F4C  69                 	db	105
    66  007F4D  63                 	db	99
    67  007F4E  61                 	db	97
    68  007F4F  20                 	db	32
    69  007F50  2D                 	db	45
    70  007F51  20                 	db	32
    71  007F52  4D                 	db	77
    72  007F53  65                 	db	101
    73  007F54  63                 	db	99
    74  007F55  61                 	db	97
    75  007F56  74                 	db	116
    76  007F57  72                 	db	114
    77  007F58  6F                 	db	111
    78  007F59  6E                 	db	110
    79  007F5A  69                 	db	105
    80  007F5B  63                 	db	99
    81  007F5C  61                 	db	97
    82  007F5D  00                 	db	0
    83  0000                     _TRISCbits	set	3988
    84  0000                     _RCSTAbits	set	4011
    85  0000                     _SPBRG	set	4015
    86  0000                     _SPBRGH	set	4016
    87  0000                     _BAUDCONbits	set	4024
    88  0000                     _TXSTAbits	set	4012
    89  0000                     _TXREG	set	4013
    90                           
    91                           ; #config settings
    92  0000                     
    93                           	psect	cinit
    94  007F5E                     __pcinit:
    95                           	opt callstack 0
    96  007F5E                     start_initialization:
    97                           	opt callstack 0
    98  007F5E                     __initialization:
    99                           	opt callstack 0
   100                           
   101                           ; Initialize objects allocated to COMRAM (26 bytes)
   102                           ; load TBLPTR registers with __pidataCOMRAM
   103  007F5E  0E44               	movlw	low __pidataCOMRAM
   104  007F60  6EF6               	movwf	tblptrl,c
   105  007F62  0E7F               	movlw	high __pidataCOMRAM
   106  007F64  6EF7               	movwf	tblptrh,c
   107  007F66  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   108  007F68  6EF8               	movwf	tblptru,c
   109  007F6A  EE00  F001         	lfsr	0,__pdataCOMRAM
   110  007F6E  EE10 F01A          	lfsr	1,26
   111  007F72                     copy_data0:
   112  007F72  0009               	tblrd		*+
   113  007F74  CFF5 FFEE          	movff	tablat,postinc0
   114  007F78  50E5               	movf	postdec1,w,c
   115  007F7A  50E1               	movf	fsr1l,w,c
   116  007F7C  E1FA               	bnz	copy_data0
   117  007F7E                     end_of_initialization:
   118                           	opt callstack 0
   119  007F7E                     __end_of__initialization:
   120                           	opt callstack 0
   121  007F7E  0100               	movlb	0
   122  007F80  EFDA  F03F         	goto	_main	;jump to C main() function
   123                           
   124                           	psect	dataCOMRAM
   125  000001                     __pdataCOMRAM:
   126                           	opt callstack 0
   127  000001                     _cadena:
   128                           	opt callstack 0
   129  000001                     	ds	26
   130                           
   131                           	psect	cstackCOMRAM
   132  00001B                     __pcstackCOMRAM:
   133                           	opt callstack 0
   134  00001B                     send_char@letrita:
   135                           	opt callstack 0
   136  00001B                     send_string@vector:
   137                           	opt callstack 0
   138                           
   139                           ; 2 bytes @ 0x0
   140  00001B                     	ds	2
   141  00001D                     send_string@numero:
   142                           	opt callstack 0
   143                           
   144                           ; 2 bytes @ 0x2
   145  00001D                     	ds	2
   146  00001F                     ??_send_string:
   147                           
   148                           ; 1 bytes @ 0x4
   149  00001F                     	ds	2
   150  000021                     send_string@i:
   151                           	opt callstack 0
   152                           
   153                           ; 1 bytes @ 0x6
   154  000021                     	ds	1
   155  000022                     ??_main:
   156                           
   157                           ; 1 bytes @ 0x7
   158  000022                     	ds	2
   159                           
   160 ;;
   161 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   162 ;;
   163 ;; *************** function _main *****************
   164 ;; Defined at:
   165 ;;		line 53 in file "maincode.c"
   166 ;; Parameters:    Size  Location     Type
   167 ;;		None
   168 ;; Auto vars:     Size  Location     Type
   169 ;;		None
   170 ;; Return value:  Size  Location     Type
   171 ;;                  1    wreg      void 
   172 ;; Registers used:
   173 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   174 ;; Tracked objects:
   175 ;;		On entry : 0/0
   176 ;;		On exit  : 0/0
   177 ;;		Unchanged: 0/0
   178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   179 ;;      Params:         0       0       0       0       0       0       0       0       0
   180 ;;      Locals:         0       0       0       0       0       0       0       0       0
   181 ;;      Temps:          2       0       0       0       0       0       0       0       0
   182 ;;      Totals:         2       0       0       0       0       0       0       0       0
   183 ;;Total ram usage:        2 bytes
   184 ;; Hardware stack levels required when called:    1
   185 ;; This function calls:
   186 ;;		_send_char
   187 ;;		_send_newline
   188 ;;		_send_string
   189 ;;		_uc_config
   190 ;; This function is called by:
   191 ;;		Startup code after reset
   192 ;; This function uses a non-reentrant model
   193 ;;
   194                           
   195                           	psect	text0
   196  007FB4                     __ptext0:
   197                           	opt callstack 0
   198  007FB4                     _main:
   199                           	opt callstack 30
   200                           
   201                           ;maincode.c: 54:     uc_config();
   202                           
   203                           ;incstack = 0
   204  007FB4  EC97  F03F         	call	_uc_config	;wreg free
   205  007FB8                     l779:
   206                           
   207                           ;maincode.c: 56:         send_char('U');
   208  007FB8  0E55               	movlw	85
   209  007FBA  EC88  F03F         	call	_send_char
   210                           
   211                           ;maincode.c: 57:         send_char('P');
   212  007FBE  0E50               	movlw	80
   213  007FC0  EC88  F03F         	call	_send_char
   214                           
   215                           ;maincode.c: 58:         send_char('C');
   216  007FC4  0E43               	movlw	67
   217  007FC6  EC88  F03F         	call	_send_char
   218                           
   219                           ;maincode.c: 59:         send_newline();
   220  007FCA  EC8E  F03F         	call	_send_newline	;wreg free
   221                           
   222                           ;maincode.c: 60:         send_string(cadena,25);
   223  007FCE  0E01               	movlw	low _cadena
   224  007FD0  6E1B               	movwf	send_string@vector,c
   225  007FD2  0E00               	movlw	high _cadena
   226  007FD4  6E1C               	movwf	send_string@vector+1,c
   227  007FD6  0E00               	movlw	0
   228  007FD8  6E1E               	movwf	send_string@numero+1,c
   229  007FDA  0E19               	movlw	25
   230  007FDC  6E1D               	movwf	send_string@numero,c
   231  007FDE  ECC2  F03F         	call	_send_string	;wreg free
   232                           
   233                           ;maincode.c: 61:         send_newline();
   234  007FE2  EC8E  F03F         	call	_send_newline	;wreg free
   235                           
   236                           ;maincode.c: 62:         _delay((unsigned long)((1000)*(32000000UL/4000.0)));
   237  007FE6  0E29               	movlw	41
   238  007FE8  6E23               	movwf	(??_main+1)& (0+255),c
   239  007FEA  0E96               	movlw	150
   240  007FEC  6E22               	movwf	??_main& (0+255),c
   241  007FEE  0E7F               	movlw	127
   242  007FF0                     u87:
   243  007FF0  2EE8               	decfsz	wreg,f,c
   244  007FF2  D7FE               	bra	u87
   245  007FF4  2E22               	decfsz	??_main& (0+255),f,c
   246  007FF6  D7FC               	bra	u87
   247  007FF8  2E23               	decfsz	(??_main+1)& (0+255),f,c
   248  007FFA  D7FA               	bra	u87
   249  007FFC  F000               	nop	
   250  007FFE  D7DC               	goto	l779
   251  008000                     __end_of_main:
   252                           	opt callstack 0
   253                           
   254 ;; *************** function _uc_config *****************
   255 ;; Defined at:
   256 ;;		line 41 in file "maincode.c"
   257 ;; Parameters:    Size  Location     Type
   258 ;;		None
   259 ;; Auto vars:     Size  Location     Type
   260 ;;		None
   261 ;; Return value:  Size  Location     Type
   262 ;;                  1    wreg      void 
   263 ;; Registers used:
   264 ;;		wreg, status,2
   265 ;; Tracked objects:
   266 ;;		On entry : 0/0
   267 ;;		On exit  : 0/0
   268 ;;		Unchanged: 0/0
   269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   270 ;;      Params:         0       0       0       0       0       0       0       0       0
   271 ;;      Locals:         0       0       0       0       0       0       0       0       0
   272 ;;      Temps:          0       0       0       0       0       0       0       0       0
   273 ;;      Totals:         0       0       0       0       0       0       0       0       0
   274 ;;Total ram usage:        0 bytes
   275 ;; Hardware stack levels used:    1
   276 ;; This function calls:
   277 ;;		Nothing
   278 ;; This function is called by:
   279 ;;		_main
   280 ;; This function uses a non-reentrant model
   281 ;;
   282                           
   283                           	psect	text1
   284  007F2E                     __ptext1:
   285                           	opt callstack 0
   286  007F2E                     _uc_config:
   287                           	opt callstack 30
   288                           
   289                           ;maincode.c: 43:     BAUDCONbits.BRG16 = 0;
   290                           
   291                           ;incstack = 0
   292  007F2E  96B8               	bcf	4024,3,c	;volatile
   293                           
   294                           ;maincode.c: 44:     TXSTAbits.SYNC = 0;
   295  007F30  98AC               	bcf	4012,4,c	;volatile
   296                           
   297                           ;maincode.c: 45:     TXSTAbits.BRGH = 0;
   298  007F32  94AC               	bcf	4012,2,c	;volatile
   299                           
   300                           ;maincode.c: 46:     SPBRGH = 0;
   301  007F34  0E00               	movlw	0
   302  007F36  6EB0               	movwf	4016,c	;volatile
   303                           
   304                           ;maincode.c: 47:     SPBRG = 51;
   305  007F38  0E33               	movlw	51
   306  007F3A  6EAF               	movwf	4015,c	;volatile
   307                           
   308                           ;maincode.c: 48:     TXSTAbits.TXEN = 1;
   309  007F3C  8AAC               	bsf	4012,5,c	;volatile
   310                           
   311                           ;maincode.c: 49:     RCSTAbits.SPEN = 1;
   312  007F3E  8EAB               	bsf	4011,7,c	;volatile
   313                           
   314                           ;maincode.c: 50:     TRISCbits.RC6 = 0;
   315  007F40  9C94               	bcf	3988,6,c	;volatile
   316  007F42  0012               	return		;funcret
   317  007F44                     __end_of_uc_config:
   318                           	opt callstack 0
   319                           
   320 ;; *************** function _send_string *****************
   321 ;; Defined at:
   322 ;;		line 22 in file "maincode.c"
   323 ;; Parameters:    Size  Location     Type
   324 ;;  vector          2    0[COMRAM] PTR const unsigned char 
   325 ;;		 -> cadena(26), 
   326 ;;  numero          2    2[COMRAM] unsigned int 
   327 ;; Auto vars:     Size  Location     Type
   328 ;;  i               1    6[COMRAM] unsigned char 
   329 ;; Return value:  Size  Location     Type
   330 ;;                  1    wreg      void 
   331 ;; Registers used:
   332 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   333 ;; Tracked objects:
   334 ;;		On entry : 0/0
   335 ;;		On exit  : 0/0
   336 ;;		Unchanged: 0/0
   337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   338 ;;      Params:         4       0       0       0       0       0       0       0       0
   339 ;;      Locals:         1       0       0       0       0       0       0       0       0
   340 ;;      Temps:          2       0       0       0       0       0       0       0       0
   341 ;;      Totals:         7       0       0       0       0       0       0       0       0
   342 ;;Total ram usage:        7 bytes
   343 ;; Hardware stack levels used:    1
   344 ;; This function calls:
   345 ;;		Nothing
   346 ;; This function is called by:
   347 ;;		_main
   348 ;; This function uses a non-reentrant model
   349 ;;
   350                           
   351                           	psect	text2
   352  007F84                     __ptext2:
   353                           	opt callstack 0
   354  007F84                     _send_string:
   355                           	opt callstack 30
   356                           
   357                           ;maincode.c: 23:     for(unsigned char i=0;i<numero;i++){
   358                           
   359                           ;incstack = 0
   360  007F84  0E00               	movlw	0
   361  007F86  6E21               	movwf	send_string@i,c
   362  007F88  D00B               	goto	l775
   363  007F8A                     l771:
   364                           
   365                           ;maincode.c: 24:         TXREG = vector[i];
   366  007F8A  5021               	movf	send_string@i,w,c
   367  007F8C  241B               	addwf	send_string@vector,w,c
   368  007F8E  6ED9               	movwf	fsr2l,c
   369  007F90  0E00               	movlw	0
   370  007F92  201C               	addwfc	send_string@vector+1,w,c
   371  007F94  6EDA               	movwf	fsr2h,c
   372  007F96  50DF               	movf	indf2,w,c
   373  007F98  6EAD               	movwf	4013,c	;volatile
   374  007F9A                     l23:
   375  007F9A  A2AC               	btfss	4012,1,c	;volatile
   376  007F9C  D7FE               	goto	l23
   377                           
   378                           ;maincode.c: 26:     }
   379  007F9E  2A21               	incf	send_string@i,f,c
   380  007FA0                     l775:
   381  007FA0  5021               	movf	send_string@i,w,c
   382  007FA2  6E1F               	movwf	??_send_string& (0+255),c
   383  007FA4  6A20               	clrf	(??_send_string+1)& (0+255),c
   384  007FA6  501D               	movf	send_string@numero,w,c
   385  007FA8  5C1F               	subwf	??_send_string,w,c
   386  007FAA  501E               	movf	send_string@numero+1,w,c
   387  007FAC  5820               	subwfb	??_send_string+1,w,c
   388  007FAE  B0D8               	btfsc	status,0,c
   389  007FB0  0012               	return	
   390  007FB2  D7EB               	goto	l771
   391  007FB4                     __end_of_send_string:
   392                           	opt callstack 0
   393                           
   394 ;; *************** function _send_newline *****************
   395 ;; Defined at:
   396 ;;		line 34 in file "maincode.c"
   397 ;; Parameters:    Size  Location     Type
   398 ;;		None
   399 ;; Auto vars:     Size  Location     Type
   400 ;;		None
   401 ;; Return value:  Size  Location     Type
   402 ;;                  1    wreg      void 
   403 ;; Registers used:
   404 ;;		wreg, status,2
   405 ;; Tracked objects:
   406 ;;		On entry : 0/0
   407 ;;		On exit  : 0/0
   408 ;;		Unchanged: 0/0
   409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   410 ;;      Params:         0       0       0       0       0       0       0       0       0
   411 ;;      Locals:         0       0       0       0       0       0       0       0       0
   412 ;;      Temps:          0       0       0       0       0       0       0       0       0
   413 ;;      Totals:         0       0       0       0       0       0       0       0       0
   414 ;;Total ram usage:        0 bytes
   415 ;; Hardware stack levels used:    1
   416 ;; This function calls:
   417 ;;		Nothing
   418 ;; This function is called by:
   419 ;;		_main
   420 ;; This function uses a non-reentrant model
   421 ;;
   422                           
   423                           	psect	text3
   424  007F1C                     __ptext3:
   425                           	opt callstack 0
   426  007F1C                     _send_newline:
   427                           	opt callstack 30
   428                           
   429                           ;maincode.c: 35:     TXREG = 0x0A;
   430                           
   431                           ;incstack = 0
   432  007F1C  0E0A               	movlw	10
   433  007F1E  6EAD               	movwf	4013,c	;volatile
   434  007F20                     l36:
   435  007F20  A2AC               	btfss	4012,1,c	;volatile
   436  007F22  D7FE               	goto	l36
   437                           
   438                           ;maincode.c: 37:     TXREG = 0x0D;
   439  007F24  0E0D               	movlw	13
   440  007F26  6EAD               	movwf	4013,c	;volatile
   441  007F28                     l39:
   442  007F28  B2AC               	btfsc	4012,1,c	;volatile
   443  007F2A  0012               	return	
   444  007F2C  D7FD               	goto	l39
   445  007F2E                     __end_of_send_newline:
   446                           	opt callstack 0
   447                           
   448 ;; *************** function _send_char *****************
   449 ;; Defined at:
   450 ;;		line 29 in file "maincode.c"
   451 ;; Parameters:    Size  Location     Type
   452 ;;  letrita         1    wreg     unsigned char 
   453 ;; Auto vars:     Size  Location     Type
   454 ;;  letrita         1    0[COMRAM] unsigned char 
   455 ;; Return value:  Size  Location     Type
   456 ;;                  1    wreg      void 
   457 ;; Registers used:
   458 ;;		wreg
   459 ;; Tracked objects:
   460 ;;		On entry : 0/0
   461 ;;		On exit  : 0/0
   462 ;;		Unchanged: 0/0
   463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   464 ;;      Params:         0       0       0       0       0       0       0       0       0
   465 ;;      Locals:         1       0       0       0       0       0       0       0       0
   466 ;;      Temps:          0       0       0       0       0       0       0       0       0
   467 ;;      Totals:         1       0       0       0       0       0       0       0       0
   468 ;;Total ram usage:        1 bytes
   469 ;; Hardware stack levels used:    1
   470 ;; This function calls:
   471 ;;		Nothing
   472 ;; This function is called by:
   473 ;;		_main
   474 ;; This function uses a non-reentrant model
   475 ;;
   476                           
   477                           	psect	text4
   478  007F10                     __ptext4:
   479                           	opt callstack 0
   480  007F10                     _send_char:
   481                           	opt callstack 30
   482                           
   483                           ;incstack = 0
   484                           ;send_char@letrita stored from wreg
   485  007F10  6E1B               	movwf	send_char@letrita,c
   486                           
   487                           ;maincode.c: 30:     TXREG = letrita;
   488  007F12  C01B  FFAD         	movff	send_char@letrita,4013	;volatile
   489  007F16                     l30:
   490  007F16  B2AC               	btfsc	4012,1,c	;volatile
   491  007F18  0012               	return	
   492  007F1A  D7FD               	goto	l30
   493  007F1C                     __end_of_send_char:
   494                           	opt callstack 0
   495  0000                     
   496                           	psect	rparam
   497  0000                     tosu	equ	0xFFF
   498                           tosh	equ	0xFFE
   499                           tosl	equ	0xFFD
   500                           stkptr	equ	0xFFC
   501                           pclatu	equ	0xFFB
   502                           pclath	equ	0xFFA
   503                           pcl	equ	0xFF9
   504                           tblptru	equ	0xFF8
   505                           tblptrh	equ	0xFF7
   506                           tblptrl	equ	0xFF6
   507                           tablat	equ	0xFF5
   508                           prodh	equ	0xFF4
   509                           prodl	equ	0xFF3
   510                           indf0	equ	0xFEF
   511                           postinc0	equ	0xFEE
   512                           postdec0	equ	0xFED
   513                           preinc0	equ	0xFEC
   514                           plusw0	equ	0xFEB
   515                           fsr0h	equ	0xFEA
   516                           fsr0l	equ	0xFE9
   517                           wreg	equ	0xFE8
   518                           indf1	equ	0xFE7
   519                           postinc1	equ	0xFE6
   520                           postdec1	equ	0xFE5
   521                           preinc1	equ	0xFE4
   522                           plusw1	equ	0xFE3
   523                           fsr1h	equ	0xFE2
   524                           fsr1l	equ	0xFE1
   525                           bsr	equ	0xFE0
   526                           indf2	equ	0xFDF
   527                           postinc2	equ	0xFDE
   528                           postdec2	equ	0xFDD
   529                           preinc2	equ	0xFDC
   530                           plusw2	equ	0xFDB
   531                           fsr2h	equ	0xFDA
   532                           fsr2l	equ	0xFD9
   533                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        26
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      9      35
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    send_string@vector	PTR const unsigned char  size(2) Largest target is 26
		 -> cadena(COMRAM[26]), 


Critical Paths under _main in COMRAM

    _main->_send_string

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     257
                                              7 COMRAM     2     2      0
                          _send_char
                       _send_newline
                        _send_string
                          _uc_config
 ---------------------------------------------------------------------------------
 (1) _uc_config                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_string                                          7     3      4     242
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _send_newline                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _send_char                                            1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _send_char
   _send_newline
   _send_string
   _uc_config

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      9      23       1       36.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      23      20        0.0%
DATA                 0      0      23       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Nov 06 08:05:11 2019

                     l30 7F16                       l23 7F9A                       l36 7F20  
                     l39 7F28                       u87 7FF0              __CFG_BORV$3 000000  
     __CFG_FOSC$XTPLL_XT 000000                      l771 7F8A                      l775 7FA0  
                    l779 7FB8             __CFG_BOR$OFF 000000                      wreg 000FE8  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000             __CFG_PWRT$ON 000000  
                   _main 7FB4                     indf2 000FDF                     fsr1l 000FE1  
                   fsr2l 000FD9                     start 0000            __CFG_MCLRE$ON 000000  
           ___param_bank 000000            __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000  
                  ?_main 001B                    _SPBRG 000FAF                    _TXREG 000FAD  
                  tablat 000FF5                    status 000FD8          __initialization 7F5E  
           __end_of_main 8000                   ??_main 0022            __activetblptr 000000  
           ?_send_string 001B                   _SPBRGH 000FB0                   _cadena 0001  
           __pdataCOMRAM 0001                   tblptrh 000FF7                   tblptrl 000FF6  
                 tblptru 000FF8               __accesstop 0060  __end_of__initialization 7F7E  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 001B  
     __size_of_uc_config 0016       __size_of_send_char 000C            ?_send_newline 001B  
   __size_of_send_string 0030                  __Hparam 0000                  __Lparam 0000  
         ??_send_newline 001B                  __pcinit 7F5E                  __ramtop 0800  
                __ptext0 7FB4                  __ptext1 7F2E                  __ptext2 7F84  
                __ptext3 7F1C                  __ptext4 7F10        __end_of_uc_config 7F44  
   end_of_initialization 7F7E        __end_of_send_char 7F1C                _RCSTAbits 000FAB  
                postdec1 000FE5                  postinc0 000FEE                _TRISCbits 000F94  
              _TXSTAbits 000FAC        send_string@vector 001B        send_string@numero 001D  
            _BAUDCONbits 000FB8            __pidataCOMRAM 7F44      start_initialization 7F5E  
   __end_of_send_newline 7F2E         __CFG_LPT1OSC$OFF 000000            ??_send_string 001F  
              _uc_config 7F2E                _send_char 7F10         __CFG_WDTPS$32768 000000  
  __size_of_send_newline 0012                copy_data0 7F72               ?_uc_config 001B  
             ?_send_char 001B                 __Hrparam 0000             send_string@i 0021  
    __end_of_send_string 7FB4                 __Lrparam 0000             _send_newline 7F1C  
       send_char@letrita 001B            __size_of_main 004C    __CFG_CPUDIV$OSC2_PLL3 000000  
            _send_string 7F84              ??_uc_config 001B              ??_send_char 001B  
