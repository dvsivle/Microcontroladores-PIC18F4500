

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Wed Oct 09 12:12:53 2019

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    11                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    12                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    13  0000                     
    14                           ; Version 2.05
    15                           ; Generated 20/12/2018 GMT
    16                           ; 
    17                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC18F4550 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     _LATDbits	set	3980
    49  0000                     _TRISD	set	3989
    50                           
    51                           ; #config settings
    52  0000                     
    53                           	psect	cinit
    54  007F20                     __pcinit:
    55                           	opt callstack 0
    56  007F20                     start_initialization:
    57                           	opt callstack 0
    58  007F20                     __initialization:
    59                           	opt callstack 0
    60                           
    61                           ; Clear objects allocated to COMRAM (2 bytes)
    62  007F20  6A11               	clrf	(__pbssCOMRAM+1)& (0+255),c
    63  007F22  6A10               	clrf	__pbssCOMRAM& (0+255),c
    64  007F24                     end_of_initialization:
    65                           	opt callstack 0
    66  007F24                     __end_of__initialization:
    67                           	opt callstack 0
    68  007F24  0100               	movlb	0
    69  007F26  EFBD  F03F         	goto	_main	;jump to C main() function
    70                           
    71                           	psect	bssCOMRAM
    72  000010                     __pbssCOMRAM:
    73                           	opt callstack 0
    74  000010                     _tiempaso:
    75                           	opt callstack 0
    76  000010                     	ds	2
    77                           
    78                           	psect	cstackCOMRAM
    79  000001                     __pcstackCOMRAM:
    80                           	opt callstack 0
    81  000001                     ?___wmul:
    82                           	opt callstack 0
    83  000001                     ___wmul@multiplier:
    84                           	opt callstack 0
    85                           
    86                           ; 2 bytes @ 0x0
    87  000001                     	ds	2
    88  000003                     ___wmul@multiplicand:
    89                           	opt callstack 0
    90                           
    91                           ; 2 bytes @ 0x2
    92  000003                     	ds	2
    93  000005                     ___wmul@product:
    94                           	opt callstack 0
    95                           
    96                           ; 2 bytes @ 0x4
    97  000005                     	ds	2
    98  000007                     retardon@tiempaso:
    99                           	opt callstack 0
   100                           
   101                           ; 2 bytes @ 0x6
   102  000007                     	ds	2
   103  000009                     ??_retardon:
   104                           
   105                           ; 1 bytes @ 0x8
   106  000009                     	ds	1
   107  00000A                     retardon@a:
   108                           	opt callstack 0
   109                           
   110                           ; 2 bytes @ 0x9
   111  00000A                     	ds	2
   112  00000C                     main@i:
   113                           	opt callstack 0
   114                           
   115                           ; 2 bytes @ 0xB
   116  00000C                     	ds	2
   117  00000E                     main@e:
   118                           	opt callstack 0
   119                           
   120                           ; 2 bytes @ 0xD
   121  00000E                     	ds	2
   122                           
   123 ;;
   124 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   125 ;;
   126 ;; *************** function _main *****************
   127 ;; Defined at:
   128 ;;		line 28 in file "flama4.c"
   129 ;; Parameters:    Size  Location     Type
   130 ;;		None
   131 ;; Auto vars:     Size  Location     Type
   132 ;;  i               2   11[COMRAM] int 
   133 ;;  e               2   13[COMRAM] int 
   134 ;; Return value:  Size  Location     Type
   135 ;;                  1    wreg      void 
   136 ;; Registers used:
   137 ;;		wreg, status,2, status,0, prodl, prodh, cstack
   138 ;; Tracked objects:
   139 ;;		On entry : 0/0
   140 ;;		On exit  : 0/0
   141 ;;		Unchanged: 0/0
   142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   143 ;;      Params:         0       0       0       0       0       0       0       0       0
   144 ;;      Locals:         4       0       0       0       0       0       0       0       0
   145 ;;      Temps:          0       0       0       0       0       0       0       0       0
   146 ;;      Totals:         4       0       0       0       0       0       0       0       0
   147 ;;Total ram usage:        4 bytes
   148 ;; Hardware stack levels required when called:    1
   149 ;; This function calls:
   150 ;;		___wmul
   151 ;;		_retardon
   152 ;; This function is called by:
   153 ;;		Startup code after reset
   154 ;; This function uses a non-reentrant model
   155 ;;
   156                           
   157                           	psect	text0
   158  007F7A                     __ptext0:
   159                           	opt callstack 0
   160  007F7A                     _main:
   161                           	opt callstack 30
   162                           
   163                           ;flama4.c: 29:     TRISD = 0xFE;
   164                           
   165                           ;incstack = 0
   166  007F7A  0EFE               	movlw	254
   167  007F7C  6E95               	movwf	3989,c	;volatile
   168  007F7E                     l19:
   169                           
   170                           ;flama4.c: 31:         for(int e=1;e<90;e++){
   171  007F7E  0E00               	movlw	0
   172  007F80  6E0F               	movwf	main@e+1,c
   173  007F82  0E01               	movlw	1
   174  007F84  6E0E               	movwf	main@e,c
   175  007F86                     l756:
   176                           
   177                           ;flama4.c: 32:             for(int i=0;i<20;i++){
   178  007F86  0E00               	movlw	0
   179  007F88  6E0D               	movwf	main@i+1,c
   180  007F8A  0E00               	movlw	0
   181  007F8C  6E0C               	movwf	main@i,c
   182  007F8E                     l22:
   183                           
   184                           ;flama4.c: 33:                 LATDbits.LD0 = 1;
   185  007F8E  808C               	bsf	3980,0,c	;volatile
   186                           
   187                           ;flama4.c: 34:                 retardon(e*10);
   188  007F90  C00E  F001         	movff	main@e,___wmul@multiplier
   189  007F94  C00F  F002         	movff	main@e+1,___wmul@multiplier+1
   190  007F98  0E00               	movlw	0
   191  007F9A  6E04               	movwf	___wmul@multiplicand+1,c
   192  007F9C  0E0A               	movlw	10
   193  007F9E  6E03               	movwf	___wmul@multiplicand,c
   194  007FA0  EC95  F03F         	call	___wmul	;wreg free
   195  007FA4  C001  F007         	movff	?___wmul,retardon@tiempaso
   196  007FA8  C002  F008         	movff	?___wmul+1,retardon@tiempaso+1
   197  007FAC  ECA8  F03F         	call	_retardon	;wreg free
   198                           
   199                           ;flama4.c: 35:                 LATDbits.LD0 = 0;
   200  007FB0  908C               	bcf	3980,0,c	;volatile
   201                           
   202                           ;flama4.c: 36:                 retardon(900-(e*10));
   203  007FB2  C00E  F001         	movff	main@e,___wmul@multiplier
   204  007FB6  C00F  F002         	movff	main@e+1,___wmul@multiplier+1
   205  007FBA  0EFF               	movlw	255
   206  007FBC  6E04               	movwf	___wmul@multiplicand+1,c
   207  007FBE  0EF6               	movlw	246
   208  007FC0  6E03               	movwf	___wmul@multiplicand,c
   209  007FC2  EC95  F03F         	call	___wmul	;wreg free
   210  007FC6  0E84               	movlw	132
   211  007FC8  2401               	addwf	?___wmul,w,c
   212  007FCA  6E07               	movwf	retardon@tiempaso,c
   213  007FCC  0E03               	movlw	3
   214  007FCE  2002               	addwfc	?___wmul+1,w,c
   215  007FD0  6E08               	movwf	retardon@tiempaso+1,c
   216  007FD2  ECA8  F03F         	call	_retardon	;wreg free
   217                           
   218                           ;flama4.c: 37:             }
   219  007FD6  4A0C               	infsnz	main@i,f,c
   220  007FD8  2A0D               	incf	main@i+1,f,c
   221  007FDA  BE0D               	btfsc	main@i+1,7,c
   222  007FDC  D7D8               	goto	l22
   223  007FDE  500D               	movf	main@i+1,w,c
   224  007FE0  E104               	bnz	u50
   225  007FE2  0E14               	movlw	20
   226  007FE4  5C0C               	subwf	main@i,w,c
   227  007FE6  A0D8               	btfss	status,0,c
   228  007FE8  D7D2               	goto	l22
   229  007FEA                     u50:
   230                           
   231                           ;flama4.c: 38:         }
   232  007FEA  4A0E               	infsnz	main@e,f,c
   233  007FEC  2A0F               	incf	main@e+1,f,c
   234  007FEE  BE0F               	btfsc	main@e+1,7,c
   235  007FF0  D7CA               	goto	l756
   236  007FF2  500F               	movf	main@e+1,w,c
   237  007FF4  E1C4               	bnz	l19
   238  007FF6  0E5A               	movlw	90
   239  007FF8  5C0E               	subwf	main@e,w,c
   240  007FFA  B0D8               	btfsc	status,0,c
   241  007FFC  D7C0               	goto	l19
   242  007FFE  D7C3               	goto	l756
   243  008000                     __end_of_main:
   244                           	opt callstack 0
   245                           
   246 ;; *************** function _retardon *****************
   247 ;; Defined at:
   248 ;;		line 22 in file "flama4.c"
   249 ;; Parameters:    Size  Location     Type
   250 ;;  tiempaso        2    6[COMRAM] int 
   251 ;; Auto vars:     Size  Location     Type
   252 ;;  a               2    9[COMRAM] int 
   253 ;; Return value:  Size  Location     Type
   254 ;;                  2    6[COMRAM] int 
   255 ;; Registers used:
   256 ;;		wreg, status,2, status,0
   257 ;; Tracked objects:
   258 ;;		On entry : 0/0
   259 ;;		On exit  : 0/0
   260 ;;		Unchanged: 0/0
   261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   262 ;;      Params:         2       0       0       0       0       0       0       0       0
   263 ;;      Locals:         2       0       0       0       0       0       0       0       0
   264 ;;      Temps:          1       0       0       0       0       0       0       0       0
   265 ;;      Totals:         5       0       0       0       0       0       0       0       0
   266 ;;Total ram usage:        5 bytes
   267 ;; Hardware stack levels used:    1
   268 ;; This function calls:
   269 ;;		Nothing
   270 ;; This function is called by:
   271 ;;		_main
   272 ;; This function uses a non-reentrant model
   273 ;;
   274                           
   275                           	psect	text1
   276  007F50                     __ptext1:
   277                           	opt callstack 0
   278  007F50                     _retardon:
   279                           	opt callstack 30
   280                           
   281                           ;flama4.c: 23:     for(int a=0;a<tiempaso;a++){
   282                           
   283                           ;incstack = 0
   284  007F50  0E00               	movlw	0
   285  007F52  6E0B               	movwf	retardon@a+1,c
   286  007F54  0E00               	movlw	0
   287  007F56  6E0A               	movwf	retardon@a,c
   288  007F58  D005               	goto	l11
   289  007F5A                     l740:
   290                           
   291                           ;flama4.c: 24:         _delay((unsigned long)((1)*(48000000/4000000.0)));
   292  007F5A  0E04               	movlw	4
   293  007F5C                     u77:
   294  007F5C  2EE8               	decfsz	wreg,f,c
   295  007F5E  D7FE               	bra	u77
   296                           
   297                           ;flama4.c: 25:     }
   298  007F60  4A0A               	infsnz	retardon@a,f,c
   299  007F62  2A0B               	incf	retardon@a+1,f,c
   300  007F64                     l11:
   301  007F64  5007               	movf	retardon@tiempaso,w,c
   302  007F66  5C0A               	subwf	retardon@a,w,c
   303  007F68  500B               	movf	retardon@a+1,w,c
   304  007F6A  0A80               	xorlw	128
   305  007F6C  6E09               	movwf	??_retardon& (0+255),c
   306  007F6E  5008               	movf	retardon@tiempaso+1,w,c
   307  007F70  0A80               	xorlw	128
   308  007F72  5809               	subwfb	??_retardon& (0+255),w,c
   309  007F74  B0D8               	btfsc	status,0,c
   310  007F76  0012               	return	
   311  007F78  D7F0               	goto	l740
   312  007F7A                     __end_of_retardon:
   313                           	opt callstack 0
   314                           
   315 ;; *************** function ___wmul *****************
   316 ;; Defined at:
   317 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c99\common\Umul16.c"
   318 ;; Parameters:    Size  Location     Type
   319 ;;  multiplier      2    0[COMRAM] unsigned int 
   320 ;;  multiplicand    2    2[COMRAM] unsigned int 
   321 ;; Auto vars:     Size  Location     Type
   322 ;;  product         2    4[COMRAM] unsigned int 
   323 ;; Return value:  Size  Location     Type
   324 ;;                  2    0[COMRAM] unsigned int 
   325 ;; Registers used:
   326 ;;		wreg, status,2, status,0, prodl, prodh
   327 ;; Tracked objects:
   328 ;;		On entry : 0/0
   329 ;;		On exit  : 0/0
   330 ;;		Unchanged: 0/0
   331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   332 ;;      Params:         4       0       0       0       0       0       0       0       0
   333 ;;      Locals:         2       0       0       0       0       0       0       0       0
   334 ;;      Temps:          0       0       0       0       0       0       0       0       0
   335 ;;      Totals:         6       0       0       0       0       0       0       0       0
   336 ;;Total ram usage:        6 bytes
   337 ;; Hardware stack levels used:    1
   338 ;; This function calls:
   339 ;;		Nothing
   340 ;; This function is called by:
   341 ;;		_main
   342 ;; This function uses a non-reentrant model
   343 ;;
   344                           
   345                           	psect	text2
   346  007F2A                     __ptext2:
   347                           	opt callstack 0
   348  007F2A                     ___wmul:
   349                           	opt callstack 30
   350                           
   351                           ;incstack = 0
   352  007F2A  5001               	movf	___wmul@multiplier,w,c
   353  007F2C  0203               	mulwf	___wmul@multiplicand,c
   354  007F2E  CFF3 F005          	movff	prodl,___wmul@product
   355  007F32  CFF4 F006          	movff	prodh,___wmul@product+1
   356  007F36  5001               	movf	___wmul@multiplier,w,c
   357  007F38  0204               	mulwf	___wmul@multiplicand+1,c
   358  007F3A  50F3               	movf	prodl,w,c
   359  007F3C  2606               	addwf	___wmul@product+1,f,c
   360  007F3E  5002               	movf	___wmul@multiplier+1,w,c
   361  007F40  0203               	mulwf	___wmul@multiplicand,c
   362  007F42  50F3               	movf	prodl,w,c
   363  007F44  2606               	addwf	___wmul@product+1,f,c
   364  007F46  C005  F001         	movff	___wmul@product,?___wmul
   365  007F4A  C006  F002         	movff	___wmul@product+1,?___wmul+1
   366  007F4E  0012               	return		;funcret
   367  007F50                     __end_of___wmul:
   368                           	opt callstack 0
   369  0000                     
   370                           	psect	rparam
   371  0000                     tosu	equ	0xFFF
   372                           tosh	equ	0xFFE
   373                           tosl	equ	0xFFD
   374                           stkptr	equ	0xFFC
   375                           pclatu	equ	0xFFB
   376                           pclath	equ	0xFFA
   377                           pcl	equ	0xFF9
   378                           tblptru	equ	0xFF8
   379                           tblptrh	equ	0xFF7
   380                           tblptrl	equ	0xFF6
   381                           tablat	equ	0xFF5
   382                           prodh	equ	0xFF4
   383                           prodl	equ	0xFF3
   384                           indf0	equ	0xFEF
   385                           postinc0	equ	0xFEE
   386                           postdec0	equ	0xFED
   387                           preinc0	equ	0xFEC
   388                           plusw0	equ	0xFEB
   389                           fsr0h	equ	0xFEA
   390                           fsr0l	equ	0xFE9
   391                           wreg	equ	0xFE8
   392                           indf1	equ	0xFE7
   393                           postinc1	equ	0xFE6
   394                           postdec1	equ	0xFE5
   395                           preinc1	equ	0xFE4
   396                           plusw1	equ	0xFE3
   397                           fsr1h	equ	0xFE2
   398                           fsr1l	equ	0xFE1
   399                           bsr	equ	0xFE0
   400                           indf2	equ	0xFDF
   401                           postinc2	equ	0xFDE
   402                           postdec2	equ	0xFDD
   403                           preinc2	equ	0xFDC
   404                           plusw2	equ	0xFDB
   405                           fsr2h	equ	0xFDA
   406                           fsr2l	equ	0xFD9
   407                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     15      17
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_retardon
    _retardon->___wmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0     797
                                             11 COMRAM     4     4      0
                             ___wmul
                           _retardon
 ---------------------------------------------------------------------------------
 (1) _retardon                                             5     3      2     198
                                              6 COMRAM     5     3      2
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     463
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___wmul
   _retardon
     ___wmul (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      F      11       1       17.9%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      11      20        0.0%
DATA                 0      0      11       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Wed Oct 09 12:12:53 2019

                     l11 7F64                       l22 7F8E                       l19 7F7E  
                     u50 7FEA                       u77 7F5C      ___wmul@multiplicand 0003  
            __CFG_BORV$3 000000       __CFG_FOSC$XTPLL_XT 000000                      l740 7F5A  
                    l756 7F86             __CFG_BOR$OFF 000000                      wreg 000FE8  
           __CFG_LVP$OFF 000000             __CFG_WDT$OFF 000000             __CFG_PWRT$ON 000000  
                   _main 7F7A                     prodh 000FF4                     prodl 000FF3  
                   start 0000            __CFG_MCLRE$ON 000000             ___param_bank 000000  
          __CFG_PLLDIV$1 000000           __CFG_CCP2MX$ON 000000                    ?_main 0001  
                  _TRISD 000F95                    main@e 000E                    main@i 000C  
                  status 000FD8          __initialization 7F20             __end_of_main 8000  
                 ??_main 000C            __activetblptr 000000                   ___wmul 7F2A  
       __end_of_retardon 7F7A               __accesstop 0060  __end_of__initialization 7F24  
        __CFG_PBADEN$OFF 000000            ___rparam_used 000001           __pcstackCOMRAM 0001  
                ?___wmul 0001                  __Hparam 0000                  __Lparam 0000  
              ?_retardon 0007          __size_of___wmul 0026                  __pcinit 7F20  
                __ramtop 0800                  __ptext0 7F7A                  __ptext1 7F50  
                __ptext2 7F2A         retardon@tiempaso 0007     end_of_initialization 7F24  
             ??_retardon 0009           __end_of___wmul 7F50      start_initialization 7F20  
               ??___wmul 0005         __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0010  
      __size_of_retardon 002A           ___wmul@product 0005                 _LATDbits 000F8C  
       __CFG_WDTPS$32768 000000        ___wmul@multiplier 0001                 __Hrparam 0000  
               __Lrparam 0000            __size_of_main 0086                retardon@a 000A  
               _retardon 7F50                 _tiempaso 0010    __CFG_CPUDIV$OSC1_PLL2 000000  
