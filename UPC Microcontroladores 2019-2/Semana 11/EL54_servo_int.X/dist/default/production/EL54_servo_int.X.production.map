Microchip MPLAB XC8 Compiler V2.05 ()

Linker command line:

-W-3 --edf=C:\Program Files (x86)\Microchip\xc8\v2.05\pic\dat\en_msgs.txt \
  -cs -h+dist/default/production\EL54_servo_int.X.production.sym \
  --cmf=dist/default/production\EL54_servo_int.X.production.cmf -z \
  -Q18F4550 -oC:\Users\pcelklau\AppData\Local\Temp\s5ss.2 \
  --defsym=__MPLAB_BUILD=1 \
  -Mdist/default/production/EL54_servo_int.X.production.map -E1 -ver=XC8 \
  --acfsm=1493 -ASTACK=060h-07FFh -pstack=STACK -ACODE=00h-07FFFh \
  -ACONST=00h-07FFFh -ASMALLCONST=0800h-08FFhx120 \
  -AMEDIUMCONST=0800h-07FFFh -ACOMRAM=01h-05Fh -AABS1=00h-07FFh \
  -ABIGRAM=01h-07FFh -ARAM=060h-0FFh,0100h-01FFhx7 -ABANK0=060h-0FFh \
  -ABANK1=0100h-01FFh -ABANK2=0200h-02FFh -ABANK3=0300h-03FFh \
  -ABANK4=0400h-04FFh -ABANK5=0500h-05FFh -ABANK6=0600h-06FFh \
  -ABANK7=0700h-07FFh -ASFR=0F60h-0FFFh \
  -preset_vec=00h,intcode=08h,intcodelo,powerup,init -pramtop=0800h \
  -psmallconst=SMALLCONST -pmediumconst=MEDIUMCONST -pconst=CONST \
  -AFARRAM=00h-00h -ACONFIG=0300000h-030000Dh -pconfig=CONFIG \
  -AIDLOC=0200000h-0200007h -pidloc=IDLOC -AEEDATA=0F00000h-0F000FFh \
  -peeprom_data=EEDATA \
  -prdata=COMRAM,nvrram=COMRAM,nvbit=COMRAM,rbss=COMRAM,rbit=COMRAM \
  -pfarbss=FARRAM,fardata=FARRAM,nvFARRAM=FARRAM \
  -pintsave_regs=BIGRAM,bigbss=BIGRAM,bigdata=BIGRAM -pbss=RAM \
  -pidata=CODE,irdata=CODE,ibigdata=CODE,ifardata=CODE -prparam=COMRAM \
  C:\Users\pcelklau\AppData\Local\Temp\s5ss.o \
  dist/default/production\EL54_servo_int.X.production.o 

Object code version is 3.11

Machine type is 18F4550

Call graph: (short form)




                Name                               Link     Load   Length Selector   Space Scale
C:\Users\pcelklau\AppData\Local\Temp\s5ss.o
                init                                  E        E        4        4       0
                reset_vec                             0        0        4        0       0
                idloc                            200000   200000        8   200000       0
                config                           300000   300000        E   300000       0
dist/default/production\EL54_servo_int.X.production.o
                intcode                               8        8        6        4       0
                temp                                  C        C        1        1       1
                smallconst                          800      800       48      400       0
                intcode_body                        B40      B40       20      424       0
                text11                              B7C      B7C       1C      424       0
                text10                              998      998       62      424       0
                text9                               A8E      A8E       34      424       0
                text8                               AC2      AC2       32      424       0
                text7                               A5A      A5A       34      424       0
                text6                               B1C      B1C       24      424       0
                text5                               BB4      BB4        8      424       0
                text4                               BAC      BAC        8      424       0
                text3                               B60      B60       1C      424       0
                text2                               9FA      9FA       60      424       0
                text1                               AF4      AF4       28      424       0
                text0                               848      848      150      424       0
                cstackCOMRAM                          1        1        A        1       1
                bssCOMRAM                             B        B        1        1       1
                cinit                               B98      B98       14      424       0

TOTAL           Name                               Link     Load   Length     Space
        CLASS   STACK          

        CLASS   CODE           
                intcode                               8        8        6         0
                init                                  E        E        4         0
                reset_vec                             0        0        4         0
                intcode_body                        B40      B40       20         0
                text11                              B7C      B7C       1C         0
                text10                              998      998       62         0
                text9                               A8E      A8E       34         0
                text8                               AC2      AC2       32         0
                text7                               A5A      A5A       34         0
                text6                               B1C      B1C       24         0
                text5                               BB4      BB4        8         0
                text4                               BAC      BAC        8         0
                text3                               B60      B60       1C         0
                text2                               9FA      9FA       60         0
                text1                               AF4      AF4       28         0
                text0                               848      848      150         0
                cinit                               B98      B98       14         0

        CLASS   CONST          

        CLASS   SMALLCONST     
                smallconst                          800      800       48         0

        CLASS   MEDIUMCONST    

        CLASS   COMRAM         
                temp                                  C        C        1         1
                cstackCOMRAM                          1        1        A         1
                bssCOMRAM                             B        B        1         1

        CLASS   ABS1           

        CLASS   BIGRAM         

        CLASS   RAM            

        CLASS   BANK0          

        CLASS   BANK1          

        CLASS   BANK2          

        CLASS   BANK3          

        CLASS   BANK4          

        CLASS   BANK5          

        CLASS   BANK6          

        CLASS   BANK7          

        CLASS   SFR            

        CLASS   FARRAM         

        CLASS   CONFIG         
                config                           300000   300000        E         0

        CLASS   IDLOC          
                idloc                            200000   200000        8         0

        CLASS   EEDATA         



SEGMENTS        Name                           Load    Length   Top    Selector   Space  Class

                reset_vec                      000000  000004  000004         0       0  CODE    
                cstackCOMRAM                   000001  00000C  00000D         1       1  COMRAM  
                intcode                        000008  00000A  000012         4       0  CODE    
                smallconst                     000800  000048  000848       400       0  SMALLCON
                text0                          000848  000374  000BBC       424       0  CODE    
                idloc                          200000  000008  200008    200000       0  IDLOC   
                config                         300000  00000E  30000E    300000       0  CONFIG  


UNUSED ADDRESS RANGES

        Name                Unused          Largest block    Delta
        BANK0            000060-0000FF               A0
        BANK1            000100-0001FF              100
        BANK2            000200-0002FF              100
        BANK3            000300-0003FF              100
        BANK4            000400-0004FF              100
        BANK5            000500-0005FF              100
        BANK6            000600-0006FF              100
        BANK7            000700-0007FF              100
        BIGRAM           00000D-0007FF              7F3
        CODE             000004-000007                4
                         000012-0007FF              7EE
                         000BBC-007FFF             7444
        COMRAM           00000D-00005F               53
        CONST            000004-000007                4
                         000012-0007FF              7EE
                         000BBC-007FFF             7444
        EEDATA           F00000-F000FF              100
        MEDIUMCONST      000BBC-007FFF             7444
        RAM              000060-0007FF              100
        SFR              000F60-000FFF               A0
        SMALLCONST       000BBC-007FFF              100
        STACK            000060-0007FF              7A0

                                  Symbol Table

CURSOR_ONOFF@estado       cstackCOMRAM 000004
ENVIA_CHAR@aux            cstackCOMRAM 000003
ENVIA_CHAR@dato           cstackCOMRAM 000002
ENVIA_LCD_CMD@aux         cstackCOMRAM 000003
ENVIA_LCD_CMD@dato        cstackCOMRAM 000002
ENVIA_NIBBLE@dato         cstackCOMRAM 000001
ESCRIBE_MENSAJE@cadena    cstackCOMRAM 000004
ESCRIBE_MENSAJE@i         cstackCOMRAM 000009
ESCRIBE_MENSAJE@tam       cstackCOMRAM 000006
LEER_LCD@aux              cstackCOMRAM 000001
POS_CURSOR@columna        cstackCOMRAM 000004
POS_CURSOR@fila           cstackCOMRAM 000005
_ADCON1                   (abs)        000FC1
_BORRAR_LCD               text5        000BB4
_CURSOR_HOME              text4        000BAC
_CURSOR_ONOFF             text3        000B60
_ENVIA_CHAR               text9        000A8E
_ENVIA_LCD_CMD            text7        000A5A
_ENVIA_NIBBLE             text11       000B7C
_ESCRIBE_MENSAJE          text8        000AC2
_INTCON3bits              (abs)        000FF0
_INTCONbits               (abs)        000FF2
_IntsISR                  intcode      000008
_LATD                     (abs)        000F8C
_LATDbits                 (abs)        000F8C
_LATEbits                 (abs)        000F8D
_LCD_CONFIG               text2        0009FA
_LEER_LCD                 text10       000998
_PORTD                    (abs)        000F83
_POS_CURSOR               text6        000B1C
_TRISD                    (abs)        000F95
_TRISEbits                (abs)        000F96
__CFG_BOR$OFF             (abs)        000000
__CFG_BORV$3              (abs)        000000
__CFG_CCP2MX$OFF          (abs)        000000
__CFG_CPUDIV$OSC2_PLL3    (abs)        000000
__CFG_FOSC$XTPLL_XT       (abs)        000000
__CFG_LPT1OSC$OFF         (abs)        000000
__CFG_LVP$OFF             (abs)        000000
__CFG_MCLRE$ON            (abs)        000000
__CFG_PBADEN$OFF          (abs)        000000
__CFG_PLLDIV$1            (abs)        000000
__CFG_PWRT$ON             (abs)        000000
__CFG_WDT$OFF             (abs)        000000
__CFG_WDTPS$32768         (abs)        000000
__HRAM                    (abs)        000000
__Habs1                   abs1         000000
__Hbank0                  bank0        000000
__Hbank1                  bank1        000000
__Hbank2                  bank2        000000
__Hbank3                  bank3        000000
__Hbank4                  bank4        000000
__Hbank5                  bank5        000000
__Hbank6                  bank6        000000
__Hbank7                  bank7        000000
__Hbigbss                 bigbss       000000
__Hbigdata                bigdata      000000
__Hbigram                 bigram       000000
__Hbss                    bss          000000
__HbssCOMRAM              bssCOMRAM    000000
__Hcinit                  cinit        000000
__Hclrtext                clrtext      000000
__Hcomram                 comram       000000
__Hconfig                 config       30000E
__Hconst                  const        000000
__HcstackCOMRAM           cstackCOMRAM 000000
__Hdata                   data         000000
__Heeprom_data            eeprom_data  000000
__Hfarbss                 farbss       000000
__Hfardata                fardata      000000
__Hibigdata               ibigdata     000000
__Hidata                  idata        000000
__Hidloc                  idloc        200008
__Hifardata               ifardata     000000
__Hinit                   init         000012
__Hintcode                intcode      00000E
__Hintcode_body           intcode_body 000000
__Hintcodelo              intcodelo    00000E
__Hintentry               intentry     000000
__Hintret                 intret       000000
__Hintsave_regs           intsave_regs 000000
__Hirdata                 irdata       000000
__Hmediumconst            mediumconst  000000
__HnvFARRAM               nvFARRAM     000000
__Hnvbit                  nvbit        000000
__Hnvrram                 nvrram       000000
__Hparam                  rparam       000000
__Hpowerup                powerup      00000E
__Hram                    ram          000000
__Hramtop                 ramtop       000800
__Hrbit                   rbit         000000
__Hrbss                   rbss         000000
__Hrdata                  rdata        000000
__Hreset_vec              reset_vec    000004
__Hrparam                 rparam       000000
__Hsfr                    sfr          000000
__Hsmallconst             smallconst   000848
__Hspace_0                (abs)        30000E
__Hspace_1                (abs)        00000D
__Hspace_2                (abs)        000000
__Hstack                  stack        000000
__Hstruct                 struct       000000
__Htemp                   temp         00000D
__Htext                   text         000000
__Htext0                  text0        000000
__Htext1                  text1        000000
__Htext10                 text10       000000
__Htext11                 text11       000000
__Htext2                  text2        000000
__Htext3                  text3        000000
__Htext4                  text4        000000
__Htext5                  text5        000000
__Htext6                  text6        000000
__Htext7                  text7        000000
__Htext8                  text8        000000
__Htext9                  text9        000000
__LRAM                    (abs)        000001
__Labs1                   abs1         000000
__Lbank0                  bank0        000000
__Lbank1                  bank1        000000
__Lbank2                  bank2        000000
__Lbank3                  bank3        000000
__Lbank4                  bank4        000000
__Lbank5                  bank5        000000
__Lbank6                  bank6        000000
__Lbank7                  bank7        000000
__Lbigbss                 bigbss       000000
__Lbigdata                bigdata      000000
__Lbigram                 bigram       000000
__Lbss                    bss          000000
__LbssCOMRAM              bssCOMRAM    000000
__Lcinit                  cinit        000000
__Lclrtext                clrtext      000000
__Lcomram                 comram       000000
__Lconfig                 config       300000
__Lconst                  const        000000
__LcstackCOMRAM           cstackCOMRAM 000000
__Ldata                   data         000000
__Leeprom_data            eeprom_data  000000
__Lfarbss                 farbss       000000
__Lfardata                fardata      000000
__Libigdata               ibigdata     000000
__Lidata                  idata        000000
__Lidloc                  idloc        200000
__Lifardata               ifardata     000000
__Linit                   init         00000E
__Lintcode                intcode      000008
__Lintcode_body           intcode_body 000000
__Lintcodelo              intcodelo    00000E
__Lintentry               intentry     000000
__Lintret                 intret       000000
__Lintsave_regs           intsave_regs 000000
__Lirdata                 irdata       000000
__Lmediumconst            mediumconst  000000
__LnvFARRAM               nvFARRAM     000000
__Lnvbit                  nvbit        000000
__Lnvrram                 nvrram       000000
__Lparam                  rparam       000000
__Lpowerup                powerup      00000E
__Lram                    ram          000000
__Lramtop                 ramtop       000800
__Lrbit                   rbit         000000
__Lrbss                   rbss         000000
__Lrdata                  rdata        000000
__Lreset_vec              reset_vec    000000
__Lrparam                 rparam       000000
__Lsfr                    sfr          000000
__Lsmallconst             smallconst   000800
__Lspace_0                (abs)        000000
__Lspace_1                (abs)        000000
__Lspace_2                (abs)        000000
__Lstack                  stack        000000
__Lstruct                 struct       000000
__Ltemp                   temp         00000C
__Ltext                   text         000000
__Ltext0                  text0        000000
__Ltext1                  text1        000000
__Ltext10                 text10       000000
__Ltext11                 text11       000000
__Ltext2                  text2        000000
__Ltext3                  text3        000000
__Ltext4                  text4        000000
__Ltext5                  text5        000000
__Ltext6                  text6        000000
__Ltext7                  text7        000000
__Ltext8                  text8        000000
__Ltext9                  text9        000000
__S0                      (abs)        30000E
__S1                      (abs)        00000D
__S2                      (abs)        000000
___inthi_sp               stack        000000
___intlo_sp               stack        000000
___param_bank             (abs)        000000
___rparam_used            (abs)        000001
___sp                     stack        000000
__accesstop               (abs)        000060
__activetblptr            (abs)        000001
__end_of_BORRAR_LCD       text5        000BBC
__end_of_CURSOR_HOME      text4        000BB4
__end_of_CURSOR_ONOFF     text3        000B7C
__end_of_ENVIA_CHAR       text9        000AC2
__end_of_ENVIA_LCD_CMD    text7        000A8E
__end_of_ENVIA_NIBBLE     text11       000B98
__end_of_ESCRIBE_MENSAJE  text8        000AF4
__end_of_IntsISR          intcode_body 000B60
__end_of_LCD_CONFIG       text2        000A5A
__end_of_LEER_LCD         text10       0009FA
__end_of_POS_CURSOR       text6        000B40
__end_of__initialization  cinit        000B9A
__end_of_arrancaLCD       text1        000B1C
__end_of_main             text0        000998
__initialization          cinit        000B98
__mediumconst             mediumconst  000000
__pbssCOMRAM              bssCOMRAM    00000B
__pcinit                  cinit        000B98
__pcstackCOMRAM           cstackCOMRAM 000001
__pintcode                intcode      000008
__pintcode_body           intcode_body 000B40
__psmallconst             smallconst   000800
__ptext0                  text0        000848
__ptext1                  text1        000AF4
__ptext10                 text10       000998
__ptext11                 text11       000B7C
__ptext2                  text2        0009FA
__ptext3                  text3        000B60
__ptext4                  text4        000BAC
__ptext5                  text5        000BB4
__ptext6                  text6        000B1C
__ptext7                  text7        000A5A
__ptext8                  text8        000AC2
__ptext9                  text9        000A8E
__ramtop                  ramtop       000800
__size_of_BORRAR_LCD      (abs)        000000
__size_of_CURSOR_HOME     (abs)        000000
__size_of_CURSOR_ONOFF    (abs)        000000
__size_of_ENVIA_CHAR      (abs)        000000
__size_of_ENVIA_LCD_CMD   (abs)        000000
__size_of_ENVIA_NIBBLE    (abs)        000000
__size_of_ESCRIBE_MENSAJE (abs)        000000
__size_of_IntsISR         (abs)        000000
__size_of_LCD_CONFIG      (abs)        000000
__size_of_LEER_LCD        (abs)        000000
__size_of_POS_CURSOR      (abs)        000000
__size_of_arrancaLCD      (abs)        000000
__size_of_main            (abs)        000000
__smallconst              smallconst   000800
_arrancaLCD               text1        000AF4
_estado                   bssCOMRAM    00000B
_main                     text0        000848
btemp                     temp         00000C
end_of_initialization     cinit        000B9A
int$flags                 temp         00000C
int_func                  intcode_body 000B40
intlevel0                 text         000000
intlevel1                 text         000000
intlevel2                 text         000000
intlevel3                 text         000000
stackhi                   (abs)        0007FF
stacklo                   (abs)        000060
start                     init         00000E
start_initialization      cinit        000B98
ttemp5                    temp         00000D
ttemp6                    temp         000010
ttemp7                    temp         000014
wtemp8                    temp         00000D


FUNCTION INFORMATION:

 *************** function _main *****************
 Defined at:
		line 30 in file "maincodemon.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels required when called:    5
 This function calls:
		_ENVIA_CHAR
		_ESCRIBE_MENSAJE
		_POS_CURSOR
		_arrancaLCD
 This function is called by:
		Startup code after reset
 This function uses a non-reentrant model


 *************** function _arrancaLCD *****************
 Defined at:
		line 21 in file "maincodemon.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    4
 This function calls:
		_BORRAR_LCD
		_CURSOR_HOME
		_CURSOR_ONOFF
		_LCD_CONFIG
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _LCD_CONFIG *****************
 Defined at:
		line 72 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          1       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_ENVIA_LCD_CMD
		_ENVIA_NIBBLE
 This function is called by:
		_arrancaLCD
 This function uses a non-reentrant model


 *************** function _CURSOR_ONOFF *****************
 Defined at:
		line 35 in file "LCD.c"
 Parameters:    Size  Location     Type
  estado          1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  estado          1    3[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_ENVIA_LCD_CMD
 This function is called by:
		_arrancaLCD
 This function uses a non-reentrant model


 *************** function _CURSOR_HOME *****************
 Defined at:
		line 30 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_ENVIA_LCD_CMD
 This function is called by:
		_arrancaLCD
 This function uses a non-reentrant model


 *************** function _BORRAR_LCD *****************
 Defined at:
		line 67 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_ENVIA_LCD_CMD
 This function is called by:
		_arrancaLCD
 This function uses a non-reentrant model


 *************** function _POS_CURSOR *****************
 Defined at:
		line 6 in file "LCD.c"
 Parameters:    Size  Location     Type
  fila            1    wreg     unsigned char 
  columna         1    3[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  fila            1    4[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         1       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_ENVIA_LCD_CMD
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ENVIA_LCD_CMD *****************
 Defined at:
		line 104 in file "LCD.c"
 Parameters:    Size  Location     Type
  dato            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  dato            1    1[COMRAM] unsigned char 
  aux             1    2[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_ENVIA_NIBBLE
		_LEER_LCD
 This function is called by:
		_POS_CURSOR
		_CURSOR_HOME
		_CURSOR_ONOFF
		_BORRAR_LCD
		_LCD_CONFIG
		_BLINK_CURSOR
		_DISPLAY_ONOFF
		_GENERACARACTER
 This function uses a non-reentrant model


 *************** function _ESCRIBE_MENSAJE *****************
 Defined at:
		line 41 in file "LCD.c"
 Parameters:    Size  Location     Type
  cadena          2    3[COMRAM] PTR const unsigned char 
		 -> STR_8(4), STR_7(13), STR_6(5), STR_5(12), 
		 -> STR_4(6), STR_3(11), STR_2(17), STR_1(17), 
  tam             1    5[COMRAM] unsigned char 
 Auto vars:     Size  Location     Type
  i               1    8[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         3       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          2       0       0       0       0       0       0       0       0
      Totals:         6       0       0       0       0       0       0       0       0
Total ram usage:        6 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    3
 This function calls:
		_ENVIA_CHAR
 This function is called by:
		_main
 This function uses a non-reentrant model


 *************** function _ENVIA_CHAR *****************
 Defined at:
		line 50 in file "LCD.c"
 Parameters:    Size  Location     Type
  dato            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  dato            1    1[COMRAM] unsigned char 
  aux             1    2[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0, cstack
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         2       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         2       0       0       0       0       0       0       0       0
Total ram usage:        2 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    2
 This function calls:
		_ENVIA_NIBBLE
		_LEER_LCD
 This function is called by:
		_ESCRIBE_MENSAJE
		_main
		_GENERACARACTER
 This function uses a non-reentrant model


 *************** function _LEER_LCD *****************
 Defined at:
		line 121 in file "LCD.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
  aux             1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_ENVIA_CHAR
		_ENVIA_LCD_CMD
 This function uses a non-reentrant model


 *************** function _ENVIA_NIBBLE *****************
 Defined at:
		line 93 in file "LCD.c"
 Parameters:    Size  Location     Type
  dato            1    wreg     unsigned char 
 Auto vars:     Size  Location     Type
  dato            1    0[COMRAM] unsigned char 
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2, status,0
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         1       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         1       0       0       0       0       0       0       0       0
Total ram usage:        1 bytes
 Hardware stack levels used:    1
 Hardware stack levels required when called:    1
 This function calls:
		Nothing
 This function is called by:
		_ENVIA_CHAR
		_LCD_CONFIG
		_ENVIA_LCD_CMD
 This function uses a non-reentrant model


 *************** function _IntsISR *****************
 Defined at:
		line 78 in file "maincodemon.c"
 Parameters:    Size  Location     Type
		None
 Auto vars:     Size  Location     Type
		None
 Return value:  Size  Location     Type
                  1    wreg      void 
 Registers used:
		wreg, status,2
 Tracked objects:
		On entry : 
		On exit  : 
		Unchanged: 
 Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
      Params:         0       0       0       0       0       0       0       0       0
      Locals:         0       0       0       0       0       0       0       0       0
      Temps:          0       0       0       0       0       0       0       0       0
      Totals:         0       0       0       0       0       0       0       0       0
Total ram usage:        0 bytes
 Hardware stack levels used:    1
 This function calls:
		Nothing
 This function is called by:
		Interrupt level 2
 This function uses a non-reentrant model



MODULE INFORMATION

Module		Function		Class		Link	Load	Size
shared
		__initialization		CODE           	0B98	0000	3

shared estimated size: 3

maincodemon.c
		_main          		CODE           	0848	0000	337
		_arrancaLCD    		CODE           	0AF4	0000	41
		_IntsISR       		CODE           	0008	0000	39

maincodemon.c estimated size: 417

LCD.c
		_ENVIA_NIBBLE  		CODE           	0B7C	0000	29
		_ENVIA_CHAR    		CODE           	0A8E	0000	53
		_CURSOR_HOME   		CODE           	0BAC	0000	9
		_CURSOR_ONOFF  		CODE           	0B60	0000	29
		_POS_CURSOR    		CODE           	0B1C	0000	37
		_ESCRIBE_MENSAJE		CODE           	0AC2	0000	51
		_ENVIA_LCD_CMD 		CODE           	0A5A	0000	53
		_LCD_CONFIG    		CODE           	09FA	0000	97
		_BORRAR_LCD    		CODE           	0BB4	0000	9
		_LEER_LCD      		CODE           	0998	0000	99

LCD.c estimated size: 466

